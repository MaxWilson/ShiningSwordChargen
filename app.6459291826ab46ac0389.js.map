{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/Util.js","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/Types.js","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/Numeric.js","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/lib/big.js","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/Decimal.js","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/Int32.js","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/lib/long.js","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/Long.js","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/Reflection.js","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/Date.js","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/String.js","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/Option.js","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/Array.js","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/List.js","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/FSharp.Collections.js","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/System.Text.js","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/FSharp.Core.js","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/Seq.js","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/Map.js","webpack:///./src/Lib/Common.fs.js","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/BigInt/n.js","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/BigInt/z.js","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/BigInt.js","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/Range.js","webpack:///./src/Lib/DerivedTraits.fs.js","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/MapUtil.js","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/Set.js","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/Char.js","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/Unicode.13.0.0.js","webpack:///./src/Lib/Onomastikon.fs.js","webpack:///./src/Lib/Character.fs.js","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/MutableMap.js","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/Seq2.js","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/AsyncBuilder.js","webpack:///./src/ShiningSword/fable_modules/fable-library.3.6.2/Async.js","webpack:///./src/ShiningSword/fable_modules/Fable.Elmish.3.1.0/prelude.fs.js","webpack:///./src/ShiningSword/fable_modules/Fable.Elmish.3.1.0/cmd.fs.js","webpack:///./src/ShiningSword/fable_modules/Fable.React.7.4.0/Fable.React.Helpers.fs.js","webpack:///./src/ShiningSword/fable_modules/Fable.React.7.4.0/Fable.React.FunctionComponent.fs.js","webpack:///./src/ShiningSword/fable_modules/Feliz.1.61.0/Interop.fs.js","webpack:///./src/ShiningSword/fable_modules/Feliz.1.61.0/React.fs.js","webpack:///./src/ShiningSword/UI/Chargen.fs.js","webpack:///./src/ShiningSword/fable_modules/Fable.Elmish.3.1.0/ring.fs.js","webpack:///./src/ShiningSword/fable_modules/Fable.Elmish.3.1.0/program.fs.js","webpack:///./src/ShiningSword/fable_modules/Fable.Elmish.Browser.3.0.4/navigation.fs.js","webpack:///./src/Lib/Parsing.fs.js","webpack:///./src/ShiningSword/fable_modules/Fable.Elmish.React.3.0.1/common.fs.js","webpack:///./src/ShiningSword/fable_modules/Fable.Elmish.React.3.0.1/react.fs.js","webpack:///./src/ShiningSword/UI/App.fs.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","isArrayLike","x","Array","isArray","ArrayBuffer","isView","isHashable","GetHashCode","sameConstructor","y","getPrototypeOf","constructor","Enumerator","iter","this","current","cur","next","done","Error","getEnumerator","GetEnumerator","iterator","toIterator","en","hasNext","undefined","padWithZeros","str","toString","dateOffset","date","date1","offset","kind","getTimezoneOffset","int32ToString","radix","ObjectRef","idMap","has","set","count","stringHash","h","len","charCodeAt","numberHash","combineHashCodes","hashes","reduce","h1","h2","structuralHash","arrayHash","Date","getTime","dateHash","values","map","v","id","safeHash","equalArraysWith","eq","equalArrays","equals","Equals","isEquatable","compareDates","xKeys","keys","yKeys","sort","equalObjects","xtime","ytime","comparePrimitives","compareArrays","comp","compareArraysWith","compare","CompareTo","isComparable","compareObjects","max","comparer","createObj","fields","obj","kv","randomNext","min","Math","floor","random","WeakMap","CURRIED","uncurry","arity","f","uncurried","res","_curry","args","arg","concat","curry","partialApply","seqToString","self","callStack","cons","entries","join","String","Union","fieldStr","withParens","indexOf","unionToString","tag","other","cases","recordToJSON","recordToString","recordGetHashCode","recordEquals","thisNames","recordCompareTo","Record","FSharpRef","contentsOrGetter","setter","symbol","isNumeric","multiply","toFixed","dp","toPrecision","sd","toExponential","toHex","Number","P","_this","mul","e","cmp","NAME","INVALID","INVALID_DP","NUMERIC","parse","nl","test","charAt","replace","search","substring","round","Big","DP","RM","rm","more","xc","isZero","findIndex","xci","idx","unshift","pop","stringify","doExponential","isNonzero","abs","isneg","yc","k","div","a","b","bl","bt","ri","bz","ai","al","rl","q","qc","qi","gt","gte","lt","lte","minus","sub","xlty","plus","xe","ye","reverse","mod","ygtx","times","add","pow","one","prec","sqrt","half","toJSON","NE","PE","toNumber","strict","valueOf","_Big_","normalize","TypeError","Decimal","NumberStyles","getRange","unsigned","bitsize","isValid","style","exec","prefix","digits","getInvalidDigits","AllowHexSpecifier","getRadix","regexMatch","sign","validResponse","parseInt","isNaN","umin","umax","tryParse","defValue","contents","_a","op_UnaryNegation_Int32","wasm","WebAssembly","Instance","Module","Uint8Array","Long","low","high","isLong","substr","fromBytes","toBytes","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","negate","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","RangeError","radixToPower","size","fromValue","val","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","toInt","$this","isNegative","radixLong","divide","rem1","subtract","rem","remDiv","isOdd","lessThan","greaterThan","greaterThanOrEqual","thisNeg","otherNeg","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtrahend","multiplier","get_high","b00","divisor","approx","div_u","div_s","toUnsigned","shiftRightUnsigned","shiftLeft","shiftRight","log2","ceil","log","LN2","delta","approxRes","approxRem","numBits","le","hi","lo","toBytesLE","toBytesBE","bytes","fromBytesLE","fromBytesBE","LongLib","op_Addition","op_Multiply","op_Division","op_Modulus","rem_u","rem_s","op_UnaryNegation","op_BitwiseAnd","fromInteger","xh","CaseInfo","declaringType","TypeInfo","fullname","generics","construct","parent","enumCases","fullName","elemType","getElementType","getHashCode","getGenerics","fullnameHash","genHashes","t1","t2","getRecordElements","k1","v1","k2","v2","class_type","record_type","union_type","caseNames","tuple_type","lambda_type","argType","returnType","option_type","generic","list_type","string_type","bool_type","int32_type","dateOffsetToString","isMinus","minutes","dateToHalfUTCString","toISOString","dateToStringWithCustomFormat","format","utc","match","rep","NaN","getUTCFullYear","getFullYear","getUTCMonth","getMonth","getUTCDate","getDate","getUTCHours","getHours","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","getUTCMilliseconds","getMilliseconds","dateToStringWithOffset","_b","_c","dateWithOffset","dateToStringWithKind","toUTCString","toLocaleString","toLocaleDateString","toLocaleTimeString","printOffset","dateToISOString","_provider","fsFormatRegExp","interpolateRegExp","formatRegExp","isLessThan","numericCompare","ic","isIgnoreCase","toLowerCase","toLocaleLowerCase","localeCompare","printf","input","cont","lastIndex","strParts","matches","strIdx","matchIndex","index","createPrinter","_strParts","_matches","_result","padArg","flags","_padLength","precision","padLength","formatReplacement","interpolate","valIdx","continuePrint","toText","toUpperCase","dateToString","zeroFlag","minusFlag","ch","padLeft","_","pattern","intPart","decimalPart","delimiter","xs","from","isRight","startIndex","Some","some","defaultArg","opt","defaultValue","mapping","Helpers_allocateArrayFromCons","fill","target","targetIndex","start","initialize","initializer","SR_indexOutOfBounds","SR_notEnoughElements","FSharpList","head","tail","xs_1_mut","ys_1_mut","loop","xs_1","ys_1","matchValue","xt","yt","i_mut","h_mut","_key","ListEnumerator$1","ListEnumerator$1_$ctor_3002E699","it","FSharpList_get_Empty","FSharpList_Cons_305B8EAC","FSharpList__get_IsEmpty","FSharpList__get_Length","FSharpList__get_Head","SR_inputListWasEmpty","FSharpList__get_Tail","empty","singleton","isEmpty","tryHead","toArray","fold","folder","state","acc","iterate","action","unitVar0","ofArrayWithTail","tail_1","ofArray","append","ys","collect","root","node","zs","xs_3","t_2","mapIndexed","acc_mut","foldIndexed","item","FSharpList__get_Item_Z524259A4","xs_2","sortWith","arr","sortDescending","Compare","sum","adder","Add","GetZero","take","SR_inputMustBeNonNegative","ComparisonIdentity_Structural","e1","e2","x_1","LanguagePrimitives_FastGenericComparer","Enumerator_notStarted","Enumerator_alreadyFinished","Enumerator_Seq","Dispose","Enumerator_FromFunctions$1","dispose","Enumerator_noReset","Enumerator_FromFunctions$1_$ctor_58C54629","Enumerator_enumerateThenFinally","Enumerator_generateWhileSome","openf","compute","closef","started","curr","value_1","finish","matchValue_1","checkNonNull","argName","Operators_NullArg","mkSeq","Enumerator_Seq_$ctor_673A07F2","ofSeq","delay","generator","sources","outerOpt","innerOpt","finished","inner","outer","inner_1","outer_1","ie","Enumerator_concat","unfold","st_1","Enumerator_unfold","ar","singleton_1","toArray_1","toList","ofArray_1","enumerator","xs_5","ofSeq_1","generate","generateIndexed","choose","chooser","e_1","filter","array","tryHead_2","SR_inputSequenceEmpty","iterateIndexed","length_1","skip","MapTreeLeaf$2","MapTreeLeaf$2_$ctor_5BDDA1","MapTreeLeaf$2__get_Key","MapTreeLeaf$2__get_Value","MapTreeNode$2","left","right","MapTreeNode$2_$ctor_499A11FD","MapTreeNode$2__get_Left","MapTreeNode$2__get_Right","MapTreeNode$2__get_Height","MapTreeModule_size","MapTreeModule_sizeAux","m_mut","m2","MapTreeModule_mk","hl","hr","m_2","MapTreeModule_rebalance","m2_2","m_3","m2_3","t1h","t2h","matchValue_2","matchValue_3","MapTreeModule_add","MapTreeModule_empty","MapTreeModule_tryFind","comparer_mut","k_mut","MapTreeModule_iter","MapTreeModule_iterOpt","f_mut","MapTreeModule_copyToArray","MapTreeModule_ofArray","forLoopVar","MapTreeModule_ofSeq","fold_1","tupledArg","MapTreeModule_ofList","e_mut","patternInput","MapTreeModule_mkFromEnumerator","MapTreeModule_MapIterator$2","stack","MapTreeModule_collapseLHS","stack_mut","isEmpty_1","empty_1","rest","MapTreeModule_mkIterator","MapTreeModule_current","MapTreeModule_alreadyFinished","MapTreeModule_notStarted","MapTreeModule_mkIEnumerator","MapTreeModule_moveNext","FSharpMap","tree","this$","combineHash","activePatternResult5680","FSharpMap__ComputeHashCode","that","m1","e1c","e2c","map_1","b1","b2","compareWith","kvp1","kvp2","FSharpMap__ContainsKey","FSharpMap__get_Item","FSharpMap__get_Count","_arg1","thisArg","iterate_1","FSharpMap_$ctor","FSharpMap_Create","FSharpMap__Add","MapTreeModule_find","MapTreeModule_mem","FSharpMap__TryFind","table","tryFind","ofList","elements","thunk1","tuple2","chooseRandom","options","head_1","StateMonad_StateBuilder","$007CLookup$007C_$007C","BigNat","bound","BigNatModule_FFT_pow32","x_mut","n_mut","BigNatModule_FFT_maxTwoPower","Int32Array","BigNatModule_bound","BigNatModule_coeff","BigNatModule_coeff64","BigNatModule_setCoeff","BigNatModule_pow64","BigNatModule_pow32","BigNatModule_baseNi64","BigNatModule_baseMaski64","BigNatModule_createN","BigNatModule_normN","na_mut","na","findLeastBound","BigNatModule_embed","r_1","BigNatModule_boundInt","BigNatModule_eval32","BigNatModule_one","BigNatModule_zero","BigNatModule_degree","BigNatModule_isZero","BigNatModule_equal","pa_mut","qa_mut","pa","qa","check","BigNatModule_compare","BigNatModule_lt","BigNatModule_mulSchoolBookCarry","r_mut","c_mut","rak","BigNatModule_mulSchoolBookOneSmall","bp","q_1","BigNatModule_mulSchoolBook","pSmall","qSmall","BigNatModule_mulSchoolBookBothSmall","ra","pai","qaj","BigNatModule_mulSchoolBookNeitherSmall","BigNatModule_encoding","bigL","twoToBigL","bigK","bigN","split","splits","BigNatModule_mkEncoding","BigNatModule_table","BigNatModule_mul","BigNatModule_scaleSubInPlace","patternInput_1","ad","a_1","f_1","z","zLo","zHi","BigNatModule_scaleAddInPlace","BigNatModule_removeFactor","degx","dega","pn","qn","xa","aa","qai","BigNatModule_divmod","BigNatModule_copyN","BigNatModule_ofInt32","BigNatModule_ofInt64","BigNatModule_boundInt64","BigNatModule_embed64","BigNatModule_toString","degn","digits_4","isLeading_mut","digits_mut","n_1_mut","_arg1_mut","isLeading","n_1","n_2","prior_1","nL","nH","prior_mut","ten2k_mut","prior","ten2k","route","BigNatModule_isSmall","BigNatModule_getSmall","BigInteger","signInt","BigInteger__get_SignInt","BigInteger__get_V","BigInteger_op_Equality_56F059C0","BigNatModule_hash","nn","BigInteger_op_LessThan_56F059C0","BigInteger_$ctor_Z2BE94A1","BigInteger_nat_Z67CCE57D","smallLim","smallPosTab","BigInteger_$ctor_Z524259A4","BigInteger_get_One","BigInteger_get_Two","two","BigInteger_get_Zero","zero","integralRangeStep","step","stop","stepFn","stepComparedWithZero","stepGreaterThanZero","comparedWithLast","makeRangeStepFunction","rangeDouble","rangeChar","intStop","fromCharCode","Choice$1","numberAllowed","mustBeDistinct","elideFromDisplayAndSummary","autopick","fresh","Setting$1","instance","summary","validated","op_EqualsEqualsGreater","trait0","confer","inputRecord","summarize","rules","roots","recur","roots_1","activePatternResult12415","activePatternResult12409","activePatternResult12411","ix","choice","chosenOptions","append_1","empty_2","value_2","tryGetValue","getItemFromDict","SetTreeLeaf$1","SetTreeLeaf$1_$ctor_2B595","SetTreeLeaf$1__get_Key","SetTreeNode$1","SetTreeNode$1_$ctor_Z6E7BE5F7","SetTreeNode$1__get_Left","SetTreeNode$1__get_Right","SetTreeNode$1__get_Height","SetTreeModule_count","SetTreeModule_countAux","t_mut","SetTreeModule_mk","SetTreeModule_rebalance","t2_3","t_3","t2_4","SetTreeModule_add","c_1","SetTreeModule_empty","SetTreeModule_balance","t1$0027","t2$0027","SetTreeModule_split","pivot","SetTreeModule_remove","SetTreeModule_spliceOutSuccessor","SetTreeModule_mem","SetTreeModule_iter","SetTreeModule_SetIterator$1","SetTreeModule_collapseLHS","x2","SetTreeModule_mkIterator","SetTreeModule_current","SetTreeModule_alreadyFinished","SetTreeModule_notStarted","SetTreeModule_mkIEnumerator","SetTreeModule_moveNext","SetTreeModule_compare","l1_mut","l2_mut","SetTreeModule_compareStacks","l1","l2","x1_3","x2_3","pattern_matching_result","t1_6","x1_4","t2_6","x2_4","matchValue_4","pattern_matching_result_1","t1_7","x1_5","t2_7","x2_5","c_3","c_2","matchValue_5","pattern_matching_result_2","t1_8","x1_6","t2_8","x2_6","pattern_matching_result_3","t1_2","x1","t2_2","x2_1","pattern_matching_result_4","t1_4","x1_2","x2_2","SetTreeModule_copyToArray","SetTreeModule_ofArray","delegateArg0","delegateArg1","SetTreeModule_ofSeq","fold_2","SetTreeModule_ofList","SetTreeModule_mkFromEnumerator","FSharpSet","FSharpSet__ComputeHashCode","FSharpSet__get_Comparer","FSharpSet__get_Tree","FSharpSet__get_Count","FSharpSet__Contains","FSharpSet_$ctor","set$","FSharpSet_Empty","FSharpSet__Add","FSharpSet__Remove","FSharpSet_op_Addition","set1","set2","SetTreeModule_union","contains","element","a1","codePointAt","a2","codepoints","Uint32Array","categories","getCategoryFunc","nameLists","Stat","Stat$reflection","Trait","Sex","Sex$reflection","CharacterSheet","nationalOrigin","sex","Str","Dex","Con","Int","Wis","Cha","originalRolls","traits","CharacterSheet$reflection","gen0","feats","table_2","derivationRules","rulesOf","inputRecord_1","Dictionary","pairs","hashMap","Map","pair","Dictionary__Add_5BDDA1","Dictionary__Clear","Dictionary__TryFind_2B595","arrayIndex","Dictionary__get_Count","Dictionary__Remove_2B595","Dictionary__ContainsKey_2B595","Dictionary__get_Item_2B595","Dictionary__set_Item_5BDDA1","Dictionary__TryFindIndex_2B595","outArg","clear","msg","groupBy","projection","dict","addToDict","key_1","CancellationToken","cancelled","_id","_cancelled","_listeners","listener","$","addListener","removeListener","OperationCanceledError","setPrototypeOf","protectedCont","ctx","cancelToken","isCancelled","onCancel","trampoline","incrementAndCheck","hijack","err","onError","protectedBind","computation","binder","onSuccess","ex","protectedReturn","computation1","computation2","Bind","sequence","body","While","Delay","compensation","catchHandler","ex2","resource","TryFinally","guard","Return","Log_onError","text","console","error","Cmd_exec","dispatch","cmd","Cmd_none","Cmd_map","g","arg_1","Cmd_batch","cmds","lists","forEach","xs_6","Cmd_ofSub","Cmd_OfFunc_result","ReactElementTypeModule_memoWith","areEqual","render","react","Cache","Interop_reactApi","useReact_useRef_1505","initialValue","useRef","useState","Interaction_Mode","Interaction_Draft","allocations","Interaction_Draft$reflection","Interaction_addUpStats","y_1","tuple_1","List_groupBy","tuple","Interaction_ofDraft","draft","cha","con","dex","int","wis","toSet","activePatternResult13721","activePatternResult13722","activePatternResult13723","activePatternResult13724","activePatternResult13725","activePatternResult13726","ofList_1","collect_1","Interaction_d","rand","Interaction_inOrder","Interaction_create","method","makeName","nationOfOrigin","chooseFromLists","firstName","lastName","surname","trim","name_1","title","name_2","arg_2","rolls","View_ChargenMethod","View_ChargenMethod$reflection","View_MethodInfo","View_ChargenMethod_get_All","View_ChargenMethod__get_info","assign_1","arg20$0040","assign_2","assign_3","assign_4","assign_5","assign","Interaction_roll3d6InOrder","View_MethodInfo__get_name$0027","View_Model","export$","View_Msg","View_init","View_update","model","char_1","rollIndex","stat","unchanged","unchanged_1","currentStat","totalSoFar","rest_3","unchanged_5","Interaction_assign","draft_1","ix_1","normalPersonDistribution","lessThanEqualGroups","displayName","memoizeWith","withKey","__callingMemberName","__callingSourceLine","View_getPercentile","map_2","statValue","View_view","class$0027","innerWidth","className","children","Children","recentDrag","arg00","createElement","arg00_1","char","dragOverHandler","preventDefault","dragEnterHandler","stat_1","onDragOver","onDragEnter","statValue_1","value_53","onClick","describe","stat_2","statValue_2","term","arg00_5","arg00_6","arg00_7","assignments","stat_4","arg00_8","draggable","onDragEnd","ev","onDragStart","e_2","dataTransfer","setData","arg00_2","arg00_3","arg00_4","arg00_9","_arg2","children_2","type","_arg3","htmlFor","x_2","xValue","Helpers_equalsButFunctions","valueFactory","Cache_GetOrAdd_Z3AD3E68D","displayName_1","memoElement","props","RingState$1","RingBuffer$1","RingBuffer$1__Push_2B595","__","wix_1","rix","items_1","wix$0027","items","RingBuffer$1__doubleSize","wix","Program$4","init","update","subscribe","view","setState","syncDispatch","ProgramModule_withSetState","program","ProgramModule_view","ProgramModule_runWith","rb","reentered","nextMsg","msg_1","model$0027","ex_1","rix$0027","RingBuffer$1__Pop","ex_3","ex_2","Navigable$1","ProgramModule_Internal_onChangeRef","ProgramModule_Internal_toNavigableWith","parser","urlUpdate","onLocationChange","arg0","mapInit","mapUpdate","mapView","mapSetState","mapSubscribe","ProgramModule_map","userInit","unitVar1","location","userUpdate","model_1","userView","model_4","dispatch_1","userSetState","model_3","userSubscribe","model_2","arg0_1","ParseResult","ParseArgs","active","settled","externalContext","ParseArgs_Init_Z1A8FAE6B","nextId","pack","rule","pos","evalResult","hadLeftRecursion","grow_1","seed","settled_1","seed_1_mut","settled_2_mut","grow","seed_1","settled_2","endpos_2","v_2","endpos_3","v_3","v_5","endpos_5","v_6","output","outpos","ctx_1","endpos","$007CEnd$007C_$007C","_arg1_0","_arg1_1","$007CStr$007C_$007C","alpha","numeric","whitespace","alphanumeric","$007CChars$007C_$007C","alphabet","seek","endpos_1","$007COWS$007C","activePatternResult12271","v_1","activePatternResult12274","activePatternResult12276","activePatternResult12277","$007CWord$007C_$007C","activePatternResult12280","activePatternResult12282","activePatternResult12283","$007CWords$007C_$007C_1","activePatternResult12293","activePatternResult12294","endix","activePatternResult12292","rest_1","LazyProps$1","equal","Components_LazyView$1","nextProps","_nextState","Component","Common_lazyView2With","Program_Internal_withReactBatchedUsing","lazyView2With","placeholderId","lastRequest","cancelAnimationFrame","requestAnimationFrame","react_dom","document","getElementById","App_Page","App_Page$reflection","App_Model","hero","App_Model$reflection","App_Msg","App_Msg$reflection","App_init","initialCmd","App_update","chargenModel","msg_2","page","character","App_view","marginBottom","href","newUrl","history","pushState","dispatchEvent","CustomEvent","Url_Parse_locationParser","rootActivePattern","loc","hash","activePatternResult13937","activePatternResult13938","Url_Parse_$007CPage$007C_$007C","activePatternResult13949","activePatternResult13947","arg0_2","Url_Parse_page","Url_parse","Url_unpack","ProgramModule_run","Program_withReactBatched","clo1","clo1_1","clo1_2","lastLocation","addEventListener","arg10","arg10_1","arg10_2","ProgramModule_Internal_subscribe","ProgramModule_toNavigable","onerror","alert"],"mappings":"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,SAAU,SAAU,QAAS,OAAQ,WAAY,QAAS,UAAW,SAAU,aAAc,YAAa,WAAY,UAAW,YAAa,WAAY,WAAY,WAAY,UAAW,UAAW,QAAS,YAAa,WAAY,UAAW,SAAU,UAAW,UAAW,WAAY,SAAU,SAAU,YAAa,OAAQ,SAAU,UAAW,UAAW,OAAQ,OAAQ,OAAQ,QAAS,SAAU,UAAW,UAAW,UAAW,UAAW,UAAW,SAAU,SAAU,SAAU,UAAW,WAAY,UAAW,OAAQ,UAAW,SAAU,QAAS,YAAa,WAAY,SAAU,UAAW,SAAU,QAAS,SAAU,UAAW,SAAU,UAAW,QAAS,SAAU,YAAa,aAAc,aAAc,YAAa,YAAa,SAAU,QAAS,YAAa,aAAc,OAAQ,YAAa,YAAa,YAAa,YAAa,WAAY,UAAW,UAAW,QAAS,SAAU,UAAW,SAAU,UAAW,OAAQ,UAAW,UAAW,SAAU,aAAc,UAAW,WAAY,SAAU,UAAW,aAAc,WAAY,UAAW,SAAU,QAAS,QAAS,YAAa,SAAU,QAAS,SAAU,WAAY,OAAQ,QAAS,QAAS,OAAQ,QAAS,SAAU,QAAS,OAAQ,SAAU,SAAU,UAAW,SAAU,QAAS,SAAU,UAAW,OAAQ,QAAS,QAAS,UAAW,aAAc,SAAU,WAAY,YAAa,SAAU,WAAY,WAAY,SAAU,SAAU,QAAS,UAAW,WAAY,QAAS,QAAS,YAAa,WAAY,WAAY,UAAW,OAAQ,MAAO,QAAS,YAAa,WAAY,UAAW,UAAW,SAAU,SAAU,UAAW,UAAW,UAAW,UAAW,QAAS,YAAa,aAAc,YAAa,YAAa,WAAY,QAAS,QAAS,WAAY,aAAc,YAAa,WAAY,UAAW,SAAU,YAAa,WAAY,UAAW,UAAW,WAAY,UAAW,YAAa,OAAQ,QAAS,QAAS,QAAS,QAAS,SAAU,QAAS,OAAQ,OAAQ,QAAS,QAAS,UAAW,UAAW,UAAW,QAAS,WAAY,SAAU,WAAY,QAAS,QAAS,MAAO,QAAS,SAAU,UAAW,UAAW,UAAW,UAAW,SAAU,QAAS,SAAU,SAAU,WAAY,QAAS,aAAc,YAAa,QAAS,aAAc,YAAa,YAAa,aAAc,WAAY,YAAa,SAAU,UAAW,QAAS,WAAY,WAAY,SAAU,QAAS,SAAU,WAAY,cAAe,WAAY,UAAW,QAAS,SAAU,SAAU,WAAY,SAAU,UAAW,SAAU,QAAS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AAS,OAAQ,SAAU,UAAW,OAAQ,QAAS,SAAU,UAAW,SAAU,OAAQ,QAAS,QAAS,SAAU,SAAU,SAAU,QAAS,QAAS,QAAS,QAAS,SAAU,UAAW,QAAS,SAAU,OAAQ,SAAU,QAAS,SAAU,QAAS,OAAQ,QAAS,SAAU,QAAS,WAAY,QAAS,UAAW,SAAU,SAAU,UAAW,QAAS,SAAU,UAAW,YAAa,QAAS,OAAQ,UAAW,SAAU,QAAS,UAAW,UAAW,SAAU,UAAW,UAAW,WAAY,YAAa,UAAW,SAAU,UAAW,WAAY,SAAU,QAAS,UAAW,SAAU,SAAU,UAAW,YAAa,UAAW,QAAS,QAAS,QAAS,SAAU,WAAY,QAAS,OAAQ,QAAS,SAAU,QAAS,SAAU,QAAS,QAAS,SAAU,QAAS,SAAU,SAAU,UAAW,OAAQ,YAAa,WAAY,UAAW,SAAU,WAAY,WAAY,SAAU,QAAS,UAAW,UAAW,SAAU,SAAU,WAAY,QAAS,QAAS,OAAQ,SAAU,SAAU,aAAc,SAAU,UAAW,SAAU,YAAa,SAAU,QAAS,OAAQ,UAAW,UAAW,SAAU,OAAQ,WAAY,UAAW,QAAS,OAAQ,QAAS,SAAU,WAAY,UAAW,SAAU,SAAU,QAAS,QAAS,QAAS,UAAW,WAAY,YAAa,UAAW,WAAY,WAAY,SAAU,QAAS,QAAS,QAAS,QAAS,OAAQ,UAAW,UAAW,WAAY,SAAU,SAAU,SAAU,UAAW,UAAW,UAAW,YAAa,WAAY,UAAW,UAAW,SAAU,YAAa,SAAU,UAAW,WAAY,SAAU,QAAS,YAAa,WAAY,QAAS,WAAY,UAAW,WAAY,WAAY,UAAW,YAAa,SAAU,UAAW,WAAY,UAAW,SAAU,SAAU,SAAU,SAAU,OAAQ,cAAe,WAAY,WAAY,UAAW,WAAY,UAAW,WAAY,SAAU,QAAS,SAAU,UAAW,YAAa,YAAa,UAAW,SAAU,UAAW,SAAU,UAAW,SAAU,QAAS,UAAW,YAAa,YAAa,SAAU,QAAS,SAAU,SAAU,WAAY,WAAY,SAAU,SAAU,SAAU,UAAW,WAAY,QAAS,QAAS,OAAQ,SAAU,UAAW,SAAU,UAAW,WAAY,QAAS,QAAS,WAAY,WAAY,WAAY,WAAY,WAAY,SAAU,SAAU,WAAY,WAAY,WAAY,SAAU,UAAW,UAAW,WAAY,WAAY,WAAY,SAAU,QAAS,QAAS,OAAQ,OAAQ,QAAS,OAAQ,OAAQ,OAAQ,SAAU,SAAU,QAAS,SAAU,UAAW,UAAW,QAAS,UAAW,SAAU,UAAW,SAAU,QAAS,SAAU,SAAU,UAAW,WAAY,UAAW,UAAW,SAAU,QAAS,QAAS,SAAU,QAAS,SAAU,UAAW,SAAU,SAAU,UAAW,SAAU,YAAa,UAAW,SAAU,UAAW,UAAW,SAAU,UAAW,UAAW,QAAS,UAAW,SAAU,YAAa,SAAU,SAAU,WAAY,UAAW,SAAU,UAAW,UAAW,WAAY,UAAW,UAAW,UAAW,UAAW,aAAc,YAAa,WAAY,SAAU,SAAU,UAAW,SAAU,SAAU,SAAU,SAAU,QAAS,OAAQ,SAAU,SAAU,UAAW,SAAU,SAAU,UAAW,SAAU,UAAW,QAAS,QAAS,OAAQ,SAAU,QAAS,QAAS,QAAS,SAAU,SAAU,UAAW,UAAW,QAAS,UAAW,KAAM,KAAM,OAAQ,WAAY,KAAM,UAAW,SAAU,QAAS,QAAS,QAAS,SAAU,QAAS,QAAS,YAAa,QAAS,YAAa,YAAa,UAAW,SAAU,SAAU,UAAW,UAAW,UAAW,SAAU,UAAW,UAAW,SAAU,UAAW,UAAW,UAAW,SAAU,QAAS,QAAS,YAAa,WAAY,SAAU,SAAU,SAAU,SAAU,SAAU,QAAS,UAAW,SAAU,UAAW,UAAW,SAAU,SAAU,SAAU,UAAW,UAAW,QAAS,QAAS,WAAY,UAAW,YAAa,YAAa,UAAW,SAAU,QAAS,WAAY,WAAY,UAAW,SAAU,UAAW,WAAY,UAAW,UAAW,QAAS,QAAS,SAAU,SAAU,SAAU,UAAW,YAAa,UAAW,WAAY,UAAW,UAAW,QAAS,SAAU,SAAU,SAAU,SAAU,UAAW,OAAQ,SAAU,UAAW,QAAS,UAAW,OAAQ,SAAU,SAAU,SAAU,SAAU,QAAS,QAAS,SAAU,QAAS,UAAW,UAAW,KAAM,QAAS,QAAS,SAAU,SAAU,SAAU,QAAS,UAAW,OAAQ,WAAY,SAAU,OAAQ,WAAY,OAAQ,SAAU,QAAS,UAAW,UAAW,QAAS,SAAU,UAAW,SAAU,UAAW,OAAQ,WAAY,QAAS,UAAW,WAAY,SAAU,OAAQ,QAAS,MAAO,SAAU,WAAY,YAAa,SAAU,SAAU,UAAW,SAAU,SAAU,UAAW,QAAS,OAAQ,QAAS,SAAU,SAAU,OAAQ,QAAS,QAAS,SAAU,UAAW,QAAS,UAAW,QAAS,OAAQ,SAAU,OAAQ,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,WAAY,UAAW,UAAW,WAAY,UAAW,UAAW,UAAW,MAAO,QAAS,UAAW,QAAS,SAAU,QAAS,SAAU,UAAW,SAAU,SAAU,SAAU,QAAS,WAAY,UAAW,WAAY,WAAY,YAAa,SAAU,SAAU,UAAW,SAAU,QAAS,SAAU,QAAS,SAAU,QAAS,OAAQ,WAAY,WAAY,WAAY,WAAY,UAAW,WAAY,aAAc,aAAc,cAAe,aAAc,cAAe,cAAe,aAAc,WAAY,WAAY,YAAa,YAAa,YAAa,WAAY,SAAU,WAAY,WAAY,SAAU,QAAS,SAAU,QAAS,UAAW,QAAS,QAAS,SAAU,SAAU,QAAS,SAAU,OAAQ,QAAS,WAAY,SAAU,SAAU,SAAU,QAAS,SAAU,YAAa,SAAU,MAAO,UAAW,UAAW,UAAW,UAAW,SAAU,UAAW,QAAS,SAAU,QAAS,UAAW,SAAU,QAAS,SAAU,OAAQ,SAAU,UAAW,WAAY,WAAY,WAAY,WAAY,SAAU,SAAU,WAAY,YAAa,WAAY,WAAY,WAAY,SAAU,UAAW,SAAU,QAAS,SAAU,UAAW,OAAQ,WAAY,OAAQ,WAAY,SAAU,QAAS,WAAY,SAAU,UAAW,SAAU,YAAa,SAAU,SAAU,UAAW,QAAS,WAAY,UAAW,QAAS,QAAS,QAAS,UAAW,QAAS,QAAS,UAAW,QAAS,UAAW,YAAa,QAAS,WAAY,UAAW,YAAa,UAAW,WAAY,WAAY,SAAU,aAAc,SAAU,SAAU,SAAU,WAAY,SAAU,SAAU,SAAU,YAAa,WAAY,YAAa,cAAe,OAAQ,WAAY,WAAY,SAAU,SAAU,YAAa,UAAW,WAAY,SAAU,SAAU,UAAW,SAAU,UAAW,YAAa,SAAU,SAAU,OAAQ,SAAU,WAAY,WAAY,YAAa,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAU,QAAS,QAAS,QAAS,SAAU,SAAU,UAAW,SAAU,WAAY,UAAW,YAAa,YAAa,QAAS,SAAU,SAAU,mBAAoB,UAAW,UAAW,SAAU,QAAS,QAAS,OAAQ,UAAW,UAAW,WAAY,UAAW,UAAW,SAAU,UAAW,UAAW,UAAW,UAAW,SAAU,SAAU,UAAW,QAAS,SAAU,UAAW,SAAU,SAAU,QAAS,UAAW,UAAW,UAAW,SAAU,SAAU,SAAU,UAAW,UAAW,UAAW,UAAW,SAAU,SAAU,SAAU,QAAS,SAAU,SAAU,OAAQ,QAAS,OAAQ,UAAW,WAAY,WAAY,WAAY,WAAY,WAAY,SAAU,SAAU,UAAW,OAAQ,UAAW,QAAS,UAAW,UAAW,SAAU,UAAW,QAAS,SAAU,SAAU,QAAS,SAAU,SAAU,WAAY,UAAW,WAAY,WAAY,QAAS,SAAU,WAAY,SAAU,UAAW,SAAU,WAAY,OAAQ,QAAS,WAAY,WAAY,QAAS,SAAU,WAAY,QAAS,QAAS,QAAS,UAAW,MAAO,OAAQ,OAAQ,OAAQ,WAAY,MAAO,QAAS,OAAQ,SAAU,SAAU,QAAS,SAAU,QAAS,YAAa,SAAU,YAAa,YAAa,UAAW,UAAW,UAAW,WAAY,WAAY,SAAU,SAAU,YAAa,UAAW,UAAW,WAAY,UAAW,QAAS,UAAW,OAAQ,YAAa,WAAY,YAAa,WAAY,UAAW,UAAW,SAAU,SAAU,SAAU,QAAS,QAAS,SAAU,OAAQ,QAAS,SAAU,eAAgB,OAAQ,SAAU,UAAW,WAAY,OAAQ,QAAS,QAAS,QAAS,QAAS,OAAQ,UAAW,SAAU,QAAS,WAAY,SAAU,UAAW,UAAW,QAAS,SAAU,SAAU,QAAS,WAAY,UAAW,YAAa,WAAY,SAAU,SAAU,SAAU,QAAS,SAAU,SAAU,SAAU,QAAS,QAAS,QAAS,SAAU,SAAU,OAAQ,WAAY,YAAa,UAAW,SAAU,WAAY,UAAW,YAAa,SAAU,QAAS,QAAS,QAAS,OAAQ,QAAS,OAAQ,OAAQ,SAAU,QAAS,SAAU,UAAW,UAAW,SAAU,QAAS,YAAa,UAAW,WAAY,UAAW,QAAS,QAAS,SAAU,UAAW,UAAW,SAAU,WAAY,YAAa,SAAU,SAAU,QAAS,SAAU,QAAS,QAAS,SAAU,QAAS,QAAS,QAAS,SAAU,SAAU,SAAU,QAAS,UAAW,SAAU,WAAY,YAAa,WAAY,UAAW,QAAS,SAAU,UAAW,OAAQ,QAAS,YAAa,WAAY,WAAY,UAAW,WAAY,UAAW,UAAW,SAAU,QAAS,UAAW,UAAW,UAAW,SAAU,QAAS,WAAY,YAAa,SAAU,OAAQ,WAAY,SAAU,WAAY,UAAW,QAAS,UAAW,WAAY,YAAa,YAAa,UAAW,UAA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AAW,SAAU,UAAW,WAAY,QAAS,SAAU,OAAQ,WAAY,YAAa,YAAa,SAAU,SAAU,MAAO,WAAY,WAAY,YAAa,UAAW,SAAU,WAAY,YAAa,YAAa,UAAW,WAAY,SAAU,UAAW,YAAa,UAAW,SAAU,UAAW,YAAa,YAAa,YAAa,cAAe,SAAU,SAAU,UAAW,WAAY,QAAS,WAAY,SAAU,SAAU,QAAS,SAAU,OAAQ,OAAQ,SAAU,SAAU,QAAS,MAAO,WAAY,SAAU,UAAW,UAAW,UAAW,QAAS,UAAW,QAAS,SAAU,QAAS,SAAU,QAAS,OAAQ,SAAU,QAAS,SAAU,SAAU,WAAY,QAAS,QAAS,OAAQ,UAAW,OAAQ,QAAS,OAAQ,OAAQ,QAAS,OAAQ,QAAS,OAAQ,WAAY,QAAS,QAAS,QAAS,QAAS,QAAS,OAAQ,SAAU,QAAS,QAAS,UAAW,UAAW,SAAU,QAAS,MAAO,SAAU,QAAS,QAAS,OAAQ,OAAQ,OAAQ,WAAY,SAAU,UAAW,OAAQ,SAAU,QAAS,SAAU,SAAU,WAAY,QAAS,SAAU,QAAS,SAAU,QAAS,SAAU,SAAU,SAAU,WAAY,WAAY,QAAS,SAAU,cAAe,aAAc,QAAS,SAAU,OAAQ,SAAU,UAAW,QAAS,UAAW,YAAa,SAAU,UAAW,YAAa,QAAS,SAAU,UAAW,SAAU,QAAS,SAAU,WAAY,SAAU,UAAW,SAAU,WAAY,UAAW,WAAY,QAAS,MAAO,QAAS,SAAU,SAAU,SAAU,SAAU,UAAW,OAAQ,OAAQ,QAAS,QAAS,QAAS,OAAQ,SAAU,QAAS,UAAW,UAAW,UAAW,SAAU,SAAU,QAAS,SAAU,QAAS,QAAS,QAAS,OAAQ,OAAQ,QAAS,QAAS,UAAW,QAAS,QAAS,QAAS,SAAU,SAAU,SAAU,SAAU,UAAW,QAAS,UAAW,QAAS,SAAU,WAAY,UAAW,SAAU,QAAS,QAAS,QAAS,OAAQ,OAAQ,QAAS,SAAU,OAAQ,UAAW,SAAU,UAAW,SAAU,UAAW,SAAU,UAAW,WAAY,SAAU,OAAQ,WAAY,UAAW,UAAW,UAAW,UAAW,SAAU,WAAY,QAAS,QAAS,MAAO,QAAS,SAAU,SAAU,SAAU,SAAU,QAAS,SAAU,UAAW,WAAY,YAAa,WAAY,UAAW,UAAW,UAAW,UAAW,cAAe,aAAc,SAAU,SAAU,U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WAAY,UAAW,aAAc,UAAW,UAAW,aAAc,UAAW,UAAW,QAAS,SAAU,WAAY,OAAQ,WAAY,aAAc,YAAa,aAAc,UAAW,SAAU,YAAa,aAAc,YAAa,WAAY,YAAa,UAAW,UAAW,cAAe,QAAS,aAAc,UAAW,aAAc,SAAU,WAAY,UAAW,QAAS,QAAS,UAAW,WAAY,SAAU,eAAgB,SAAU,WAAY,WAAY,UAAW,SAAU,SAAU,aAAc,UAAW,UAAW,QAAS,aAAc,UAAW,cAAe,UAAW,YAAa,WAAY,YAAa,WAAY,YAAa,YAAa,QAAS,YAAa,QAAS,UAAW,WAAY,UAAW,UAAW,SAAU,OAAQ,QAAS,WAAY,UAAW,OAAQ,UAAW,eAAgB,UAAW,UAAW,YAAa,OAAQ,YAAa,QAAS,QAAS,SAAU,aAAc,YAAa,WAAY,YAAa,WAAY,WAAY,UAAW,UAAW,SAAU,WAAY,UAAW,UAAW,QAAS,YAAa,QAAS,WAAY,YAAa,OAAQ,UAAW,SAAU,QAAS,QAAS,UAAW,UAAW,YAAa,aAAc,aAAc,WAAY,WAAY,UAAW,WAAY,WAAY,UAAW,aAAc,YAAa,SAAU,SAAU,WAAY,WAAY,SAAU,YAAa,eAAgB,UAAW,aAAc,eAAgB,WAAY,WAAY,cAAe,UAAW,aAAc,YAAa,WAAY,SAAU,YAAa,UAAW,WAAY,WAAY,YAAa,UAAW,WAAY,WAAY,SAAU,cAAe,aAAc,UAAW,cAAe,YAAa,WAAY,aAAc,UAAW,SAAU,WAAY,SAAU,WAAY,aAAc,SAAU,QAAS,YAAa,YAAa,UAAW,SAAU,WAAY,cAAe,aAAc,YAAa,YAAa,QAAS,WAAY,UAAW,SAAU,SAAU,SAAU,WAAY,WAAY,UAAW,QAAS,YAAa,OAAQ,SAAU,cAAe,aAAc,aAAc,SAAU,WAAY,QAAS,QAAS,QAAS,SAAU,WAAY,QAAS,UAAW,SAAU,cAAe,WAAY,WAAY,aAAc,YAAa,UAAW,SAAU,aAAc,WAAY,UAAW,QAAS,cAAe,WAAY,YAAa,WAAY,cAAe,WAAY,WAAY,SAAU,YAAa,SAAU,aAAc,aAAc,SAAU,aAAc,YAAa,YAAa,UAAW,UAAW,UAAW,YAAa,WAAY,UAAW,YAAa,UAAW,QAAS,SAAU,aAAc,YAAa,aAAc,UAAW,WAAY,YAAa,QAAS,UAAW,YAAa,eAAgB,YAAa,UAAW,aAAc,cAAe,cAAe,UAAW,aAAc,WAAY,aAAc,aAAc,YAAa,cAAe,YAAa,YAAa,WAAY,UAAW,SAAU,WAAY,WAAY,QAAS,UAAW,YAAa,cAAe,CAAC,CAAC,QAAS,kBAAmB,CAAC,YAAa,UAAW,YAAa,UAAW,SAAU,QAAS,UAAW,UAAW,OAAQ,SAAU,WAAY,WAAY,UAAW,UAAW,UAAW,YAAa,SAAU,YAAa,MAAO,WAAY,WAAY,SAAU,UAAW,SAAU,UAAW,SAAU,WAAY,QAAS,OAAQ,UAAW,WAAY,QAAS,SAAU,SAAU,YAAa,WAAY,QAAS,UAAW,aAAc,SAAU,QAAS,OAAQ,QAAS,QAAS,YAAa,WAAY,aAAc,QAAS,QAAS,UAAW,YAAa,WAAY,WAAY,WAAY,QAAS,YAAa,aAAc,WAAY,WAAY,SAAU,SAAU,aAAc,UAAW,YAAa,QAAS,WAAY,SAAU,cAAe,WAAY,QAAS,UAAW,UAAW,SAAU,QAAS,WAAY,SAAU,WAAY,YAAa,UAAW,UAAW,WAAY,UAAW,QAAS,SAAU,YAAa,OAAQ,YAAa,QAAS,UAAW,SAAU,QAAS,WAAY,QAAS,SAAU,UAAW,SAAU,UAAW,OAAQ,SAAU,SAAU,UAAW,aAAc,WAAY,SAAU,UAAW,UAAW,UAAW,UAAW,QAAS,UAAW,UAAW,SAAU,WAAY,UAAW,UAAW,SAAU,SAAU,WAAY,WAAY,UAAW,UAAW,UAAW,SAAU,SAAU,UAAW,UAAW,QAAS,OAAQ,SAAU,SAAU,QAAS,WAAY,WAAY,UAAW,SAAU,SAAU,UAAW,WAAY,UAAW,UAAW,SAAU,YAAa,YAAa,UAAW,UAAW,YAAa,SAAU,WAAY,SAAU,WAAY,UAAW,aAAc,YAAa,QAAS,UAAW,SAAU,SAAU,SAAU,QAAS,UAAW,YAAa,YAAa,SAAU,YAAa,UAAW,UAAW,QAAS,UAAW,WAAY,WAAY,UAAW,UAAW,QAAS,UAAW,UAAW,WAAY,WAAY,aAAc,WAAY,aAAc,YAAa,WAAY,UAAW,UAAW,WAAY,SAAU,UAAW,OAAQ,MAAO,SAAU,SAAU,UAAW,UAAW,UAAW,WAAY,YAAa,WAAY,YAAa,SAAU,YAAa,UAAW,SAAU,SAAU,SAAU,SAAU,YAAa,SAAU,UAAW,SAAU,YAAa,WAAY,QAAS,WAAY,SAAU,UAAW,UAAW,WAAY,SAAU,WAAY,QAAS,UAAW,aAAc,UAAW,YAAa,UAAW,SAAU,MAAO,SAAU,QAAS,QAAS,UAAW,QAAS,WAAY,UAAW,WAAY,UAAW,UAAW,WAAY,YAAa,SAAU,UAAW,WAAY,WAAY,WAAY,WAAY,YAAa,WAAY,CAAC,CAAC,QAAS,cAAe,CAAC,UAAW,WAAY,WAAY,WAAY,QAAS,WAAY,SAAU,UAAW,SAAU,UAAW,QAAS,cAAe,WAAY,UAAW,WAAY,UAAW,QAAS,UAAW,WAAY,YAAa,UAAW,QAAS,WAAY,YAAa,SAAU,UAAW,YAAa,YAAa,QAAS,UAAW,UAAW,QAAS,WAAY,WAAY,UAAW,SAAU,OAAQ,UAAW,SAAU,QAAS,WAAY,QAAS,aAAc,WAAY,YAAa,UAAW,QAAS,WAAY,UAAW,UAAW,UAAW,UAAW,SAAU,UAAW,YAAa,WAAY,WAAY,WAAY,UAAW,YAAa,aAAc,aAAc,UAAW,YAAa,aAAc,WAAY,YAAa,aAAc,WAAY,YAAa,UAAW,YAAa,YAAa,QAAS,cAAe,cAAe,SAAU,YAAa,WAAY,QAAS,UAAW,aAAc,aAAc,YAAa,SAAU,WAAY,WAAY,UAAW,YAAa,WAAY,UAAW,WAAY,WAAY,UAAW,YAAa,aAAc,YAAa,UAAW,cAAe,YAAa,WAAY,UAAW,UAAW,SAAU,UAAW,WAAY,WAAY,WAAY,WAAY,aAAc,YAAa,SAAU,SAAU,UAAW,YAAa,QAAS,UAAW,SAAU,UAAW,WAAY,WAAY,SAAU,UAAW,UAAW,YAAa,QAAS,SAAU,WAAY,UAAW,UAAW,SAAU,aAAc,WAAY,SAAU,YAAa,UAAW,YAAa,YAAa,YAAa,YAAa,UAAW,YAAa,UAAW,UAAW,SAAU,WAAY,SAAU,WAAY,YAAa,cAAe,WAAY,UAAW,WAAY,QAAS,YAAa,SAAU,UAAW,SAAU,SAAU,WAAY,WAAY,YAAa,SAAU,YAAa,SAAU,YAAa,UAAW,UAAW,YAAa,WAAY,YAAa,YAAa,QAAS,WAAY,YAAa,QAAS,SAAU,YAAa,WAAY,WAAY,UAAW,YAAa,YAAa,aAAc,UAAW,YAAa,UAAW,cAAe,SAAU,WAAY,SAAU,UAAW,UAAW,QAAS,UAAW,SAAU,WAAY,UAAW,WAAY,YAAa,UAAW,SAAU,SAAU,WAAY,UAAW,WAAY,WAAY,UAAW,UAAW,SAAU,QAAS,cAAe,QAAS,WAAY,cAAe,UAAW,YAAa,WAAY,WAAY,WAAY,WAAY,SAAU,QAAS,UAAW,WAAY,SAAU,UAAW,UAAW,UAAW,YAAa,aAAc,SAAU,WAAY,WAAY,aAAc,WAAY,UAAW,SAAU,SAAU,WAAY,SAAU,WAAY,SAAU,aAAc,UAAW,WAAY,SAAU,SAAU,UAAW,YAAa,WAAY,YAAa,YAAa,SAAU,UAAW,aAAc,YAAa,eAAgB,aAAc,YAAa,WAAY,YAAa,UAAW,WAAY,UAAW,YAAa,YAAa,UAAW,YAAa,UAAW,UAAW,UAAW,UAAW,SAAU,QAAS,WAAY,YAAa,YAAa,UAAW,WAAY,WAAY,aAAc,SAAU,cAAe,YAAa,SAAU,WAAY,aAAc,YAAa,WAAY,YAAa,WAAY,UAAW,QAAS,SAAU,UAAW,QAAS,UAAW,WAAY,WAAY,WAAY,aAAc,UAAW,UAAW,WAAY,YAAa,cAAe,YAAa,QAAS,aAAc,aAAc,UAAW,UAAW,YAAa,WAAY,YAAa,WAAY,UAAW,YAAa,UAAW,WAAY,QAAS,YAAa,UAAW,YAAa,YAAa,QAAS,UAAW,SAAU,UAAW,aAAc,aAAc,YAAa,UAAW,SAAU,QAAS,YAAa,WAAY,WAAY,WAAY,YAAa,YAAa,SAAU,QAAS,UAAW,YAAa,SAAU,YAAa,aAAc,aAAc,UAAW,SAAU,YAAa,WAAY,SAAU,YAAa,YAAa,SAAU,aAAc,YAAa,UAAW,aAAc,WAAY,SAAU,cAAe,QAAS,WAAY,WAAY,SAAU,QAAS,WAAY,WAAY,cAAe,YAAa,QAAS,UAAW,UAAW,WAAY,WAAY,WAAY,aAAc,aAAc,WAAY,WAAY,WAAY,WAAY,SAAU,WAAY,YAAa,aAAc,YAAa,UAAW,YAAa,UAAW,UAAW,SAAU,UAAW,WAAY,UAAW,UAAW,SAAU,WAAY,UAAW,QAAS,SAAU,QAAS,QAAS,SAAU,UAAW,UAAW,UAAW,UAAW,SAAU,WAAY,UAAW,YAAa,QAAS,WAAY,WAAY,UAAW,WAAY,CAAC,CAAC,QAAS,YAAa,CAAC,UAAW,WAAY,WAAY,WAAY,SAAU,WAAY,SAAU,WAAY,SAAU,UAAW,SAAU,cAAe,WAAY,UAAW,WAAY,UAAW,SAAU,UAAW,WAAY,YAAa,UAAW,SAAU,WAAY,YAAa,SAAU,WAAY,YAAa,YAAa,QAAS,WAAY,UAAW,SAAU,YAAa,WAAY,UAAW,SAAU,QAAS,UAAW,SAAU,SAAU,WAAY,QAAS,aAAc,WAAY,YAAa,UAAW,QAAS,WAAY,UAAW,UAAW,UAAW,UAAW,SAAU,UAAW,YAAa,WAAY,WAAY,WAAY,UAAW,YAAa,aAAc,aAAc,UAAW,aAAc,aAAc,WAAY,aAAc,aAAc,WAAY,YAAa,UAAW,YAAa,YAAa,SAAU,cAAe,cAAe,UAAW,YAAa,WAAY,SAAU,UAAW,aAAc,aAAc,YAAa,SAAU,YAAa,WAAY,UAAW,YAAa,WAAY,UAAW,WAAY,WAAY,WAAY,YAAa,aAAc,YAAa,UAAW,cAAe,YAAa,YAAa,UAAW,WAAY,SAAU,UAAW,WAAY,WAAY,WAAY,WAAY,aAAc,YAAa,SAAU,SAAU,UAAW,YAAa,SAAU,UAAW,SAAU,UAAW,WAAY,WAAY,SAAU,UAAW,WAAY,YAAa,QAAS,SAAU,WAAY,UAAW,UAAW,UAAW,aAAc,WAAY,SAAU,YAAa,UAAW,YAAa,YAAa,YAAa,YAAa,UAAW,YAAa,WAAY,UAAW,SAAU,YAAa,UAAW,WAAY,YAAa,cAAe,WAAY,UAAW,WAAY,SAAU,YAAa,SAAU,UAAW,UAAW,SAAU,YAAa,WAAY,YAAa,UAAW,YAAa,SAAU,YAAa,WAAY,WAAY,aAAc,WAAY,YAAa,YAAa,QAAS,YAAa,YAAa,SAAU,SAAU,YAAa,WAAY,WAAY,UAAW,YAAa,YAAa,aAAc,UAAW,YAAa,WAAY,cAAe,UAAW,WAAY,SAAU,UAAW,WAAY,SAAU,WAAY,SAAU,WAAY,UAAW,WAAY,YAAa,UAAW,UAAW,SAAU,WAAY,UAAW,WAAY,WAAY,UAAW,UAAW,UAAW,SAAU,cAAe,SAAU,WAAY,cAAe,UAAW,YAAa,WAAY,WAAY,WAAY,WAAY,SAAU,SAAU,UAAW,WAAY,SAAU,UAAW,UAAW,UAAW,YAAa,aAAc,SAAU,WAAY,WAAY,aAAc,WAAY,UAAW,SAAU,SAAU,WAAY,SAAU,WAAY,SAAU,aAAc,WAAY,WAAY,SAAU,SAAU,UAAW,YAAa,WAAY,YAAa,YAAa,SAAU,UAAW,aAAc,aAAc,eAAgB,aAAc,YAAa,WAAY,YAAa,WAAY,YAAa,UAAW,YAAa,YAAa,WAAY,YAAa,WAAY,UAAW,UAAW,UAAW,UAAW,QAAS,YAAa,YAAa,YAAa,UAAW,WAAY,YAAa,aAAc,UAAW,cAAe,YAAa,SAAU,WAAY,cAAe,aAAc,WAAY,YAAa,WAAY,UAAW,SAAU,UAAW,UAAW,QAAS,WAAY,WAAY,WAAY,WAAY,aAAc,WAAY,UAAW,WAAY,aAAc,cAAe,YAAa,QAAS,aAAc,aAAc,UAAW,UAAW,YAAa,WAAY,YAAa,YAAa,UAAW,YAAa,UAAW,WAAY,SAAU,YAAa,UAAW,YAAa,YAAa,SAAU,UAAW,SAAU,UAAW,aAAc,aAAc,YAAa,UAAW,UAAW,SAAU,YAAa,WAAY,WAAY,WAAY,YAAa,YAAa,SAAU,SAAU,WAAY,YAAa,SAAU,YAAa,aAAc,aAAc,UAAW,UAAW,YAAa,WAAY,SAAU,YAAa,aAAc,SAAU,aAAc,YAAa,UAAW,aAAc,WAAY,SAAU,cAAe,SAAU,WAAY,WAAY,SAAU,SAAU,WAAY,WAAY,cAAe,YAAa,QAAS,UAAW,UAAW,WAAY,WAAY,WAAY,aAAc,aAAc,WAAY,WAAY,YAAa,WAAY,SAAU,YAAa,YAAa,aAAc,YAAa,YAAa,YAAa,WAAY,WAAY,UAAW,WAAY,YAAa,WAAY,WAAY,UAAW,YAAa,WAAY,SAAU,UAAW,SAAU,SAAU,UAAW,WAAY,WAAY,UAAW,YAAa,WAAY,aAAc,UAAW,YAAa,YAAa,aAAc,CAAC,CAAC,YAAa,QAAS,CAAC,UAAW,OAAQ,aAAc,UAAW,WAAY,UAAW,SAAU,aAAc,SAAU,SAAU,SAAU,cAAe,UAAW,aAAc,WAAY,WAAY,WAAY,QAAS,cAAe,YAAa,UAAW,WAAY,WAAY,WAAY,SAAU,UAAW,YAAa,YAAa,QAAS,aAAc,cAAe,SAAU,UAAW,YAAa,cAAe,UAAW,QAAS,QAAS,QAAS,SAAU,SAAU,SAAU,UAAW,WAAY,YAAa,WAAY,UAAW,cAAe,aAAc,UAAW,UAAW,SAAU,YAAa,SAAU,OAAQ,SAAU,UAAW,OAAQ,SAAU,UAAW,YAAa,UAAW,SAAU,QAAS,QAAS,UAAW,UAAW,YAAa,UAAW,UAAW,WAAY,WAAY,SAAU,QAAS,UAAW,YAAa,SAAU,aAAc,aAAc,UAAW,SAAU,SAAU,YAAa,WAAY,UAAW,aAAc,UAAW,aAAc,YAAa,WAAY,SAAU,WAAY,UAAW,eAAgB,UAAW,QAAS,UAAW,aAAc,WAAY,aAAc,WAAY,eAAgB,UAAW,aAAc,aAAc,cAAe,eAAgB,cAAe,UAAW,UAAW,aAAc,UAAW,UAAW,SAAU,WAAY,cAAe,aAAc,YAAa,WAAY,aAAc,aAAc,eAAgB,eAAgB,aAAc,aAAc,YAAa,cAAe,aAAc,SAAU,SAAU,YAAa,cAAe,WAAY,QAAS,YAAa,YAAa,UAAW,aAAc,YAAa,aAAc,YAAa,YAAa,WAAY,aAAc,UAAW,YAAa,WAAY,UAAW,YAAa,aAAc,YAAa,YAAa,YAAa,WAAY,aAAc,WAAY,YAAa,aAAc,aAAc,aAAc,aAAc,WAAY,cAAe,SAAU,SAAU,UAAW,YAAa,WAAY,UAAW,cAAe,eAAgB,UAAW,SAAU,QAAS,aAAc,aAAc,YAAa,gBAAiB,cAAe,iBAAkB,cAAe,WAAY,YAAa,WAAY,YAAa,WAAY,YAAa,UAAW,UAAW,QAAS,WAAY,QAAS,WAAY,YAAa,cAAe,YAAa,cAAe,cAAe,cAAe,YAAa,WAAY,aAAc,eAAgB,cAAe,aAAc,eAAgB,cAAe,eAAgB,eAAgB,UAAW,aAAc,cAAe,eAAgB,gBAAiB,UAAW,aAAc,cAAe,YAAa,YAAa,WAAY,UAAW,cAAe,WAAY,gBAAiB,UAAW,aAAc,aAAc,WAAY,WAAY,QAAS,YAAa,WAAY,aAAc,SAAU,YAAa,YAAa,UAAW,QAAS,WAAY,cAAe,aAAc,WAAY,UAAW,YAAa,YAAa,WAAY,cAAe,YAAa,SAAU,YAAa,YAAa,YAAa,UAAW,WAAY,OAAQ,QAAS,SAAU,UAAW,WAAY,YAAa,YAAa,YAAa,YAAa,WAAY,SAAU,QAAS,YAAa,WAAY,cAAe,UAAW,QAAS,UAAW,SAAU,UAAW,SAAU,aAAc,YAAa,YAAa,WAAY,QAAS,SAAU,SAAU,OAAQ,OAAQ,WAAY,QAAS,aAAc,UAAW,QAAS,QAAS,WAAY,UAAW,SAAU,SAAU,SAAU,QAAS,UAAW,YAAa,cAAe,eAAgB,UAAW,YAAa,cAAe,SAAU,WAAY,SAAU,OAAQ,YAAa,SAAU,WAAY,UAAW,YAAa,OAAQ,WAAY,YAAa,aAAc,YAAa,UAAW,SAAU,SAAU,aAAc,YAAa,YAAa,YAAa,SAAU,WAAY,UAAW,UAAW,UAAW,SAAU,YAAa,UAAW,UAAW,UAAW,cAAe,UAAW,WAAY,WAAY,UAAW,aAAc,cAAe,cAAe,cAAe,QAAS,SAAU,UAAW,SAAU,UAAW,UAAW,YAAa,WAAY,cAAe,YAAa,YAAa,cAAe,YAAa,QAAS,YAAa,YAAa,UAAW,aAAc,UAAW,UAAW,aAAc,WAAY,QAAS,SAAU,SAAU,WAAY,OAAQ,OAAQ,QAAS,UAAW,YAAa,UAAW,aAAc,UAAW,UAAW,WAAY,YAAa,WAAY,UAAW,WAAY,QAAS,UAAW,SAAU,UAAW,YAAa,aAAc,cAAe,SAAU,QAAS,aAAc,SAAU,SAAU,WAAY,WAAY,WAAY,aAAc,UAAW,WAAY,SAAU,aAAc,eAAgB,UAAW,WAAY,SAAU,WAAY,WAAY,WAAY,QAAS,SAAU,SAAU,SAAU,UAAW,WAAY,QAAS,QAAS,UAAW,cAAe,aAAc,YAAa,YAAa,aAAc,WAAY,UAAW,YAAa,aAAc,QAAS,SAAU,YAAa,YAAa,YAAa,aAAc,WAAY,UAAW,WAAY,YAAa,cAAe,OAAQ,WAAY,YAAa,UAAW,SAAU,cAAe,YAAa,aAAc,WAAY,UAAW,WAAY,UAAW,WAAY,WAAY,UAAW,WAAY,YAAa,gBAAiB,WAAY,aAAc,SAAU,YAAa,aAAc,SAAU,cAAe,SAAU,QAAS,SAAU,UAAW,UAAW,SAAU,WAAY,QAAS,YAAa,WAAY,YAAa,WAAY,UAAW,QAAS,SAAU,WAAY,QAAS,QAAS,SAAU,aAAc,WAAY,WAAY,UAAW,YAAa,YAAa,cAAe,SAAU,UAAW,YAAa,SAAU,SAAU,WAAY,QAAS,YAAa,UAAW,UAAW,WAAY,aAAc,SAAU,WAAY,UAAW,UAAW,UAAW,UAAW,WAAY,QAAS,MAAO,YAAa,UAAW,eAAgB,WAAY,SAAU,YAAa,WAAY,WAAY,YAAa,WAAY,YAAa,UAAW,cAAe,aAAc,WAAY,eAAgB,eAAgB,eAAgB,aAAc,YAAa,cAAe,UAAW,WAAY,eAAgB,YAAa,UAAW,aAAc,OAAQ,cAAe,WAAY,WAAY,WAAY,UAAW,YAAa,WAAY,YAAa,UAAW,UAAW,WAAY,WAAY,YAAa,UAAW,WAAY,UAAW,UAAW,SAAU,SAAU,WAAY,WAAY,WAAY,YAAa,UAAW,SAAU,UAAW,WAAY,UAAW,UAAW,UAAW,WAAY,SAAU,WAAY,YAAa,WAAY,YAAa,YAAa,aAAc,UAAW,YAAa,WAAY,YAAa,aAAc,cAAe,YAAa,YAAa,YAAa,UAAW,aAAc,eAAgB,WAAY,aAAc,aAAc,WAAY,YAAa,aAAc,cAAe,aAAc,aAAc,YAAa,UAAW,WAAY,aAAc,WAAY,YAAa,WAAY,aAAc,WAAY,YAAa,WAAY,WAAY,WAAY,WAAY,UAAW,SAAU,QAAS,UAAW,UAAW,SAAU,UAAW,SAAU,YAAa,UAAW,SAAU,OAAQ,QAAS,YAAa,YAAa,WAAY,WAAY,UAAW,SAAU,SAAU,UAAW,UAAW,UAAW,SAAU,aAAc,YAAa,UAAW,SAAU,WAAY,QAAS,UAAW,SAAU,SAAU,SAAU,eAAgB,SAAU,aAAc,aAAc,YAAa,SAAU,WAAY,YAAa,WAAY,YAAa,YAAa,cAAe,gBAAiB,cAAe,SAAU,SAAU,SAAU,UAAW,cAAe,WAAY,aAAc,SAAU,QAAS,aAAc,cAAe,cAAe,aAAc,WAAY,WAAY,YAAa,aAAc,YAAa,aAAc,SAAU,aAAc,OAAQ,UAAW,aAAc,WAAY,YAAa,WAAY,QAAS,aAAc,aAAc,aAAc,WAAY,UAAW,cAAe,gBAAiB,aAAc,cAAe,aAAc,SAAU,WAAY,aAAc,YAAa,WAAY,aAAc,YAAa,UAAW,UAAW,aAAc,QAAS,SAAU,SAAU,WAAY,cAAe,UAAW,YAAa,WAAY,WAAY,WAAY,WAAY,UAAW,UAAW,WAAY,WAAY,QAAS,QAAS,aAAc,YAAa,WAAY,SAAU,UAAW,UAAW,SAAU,SAAU,SAAU,OAAQ,YAAa,WAAY,WAAY,OAAQ,WAAY,UAAW,SAAU,UAAW,UAAW,SAAU,UAAW,SAAU,SAAU,MAAO,WAAY,aAAc,aAAc,WAAY,UAAW,UAAW,OAAQ,OAAQ,WAAY,WAAY,YAAa,SAAU,WAAY,QAAS,UAAW,WAAY,YAAa,WAAY,YAAa,SAAU,SAAU,OAAQ,SAAU,SAAU,UAAW,UAAW,WAAY,UAAW,YAAa,UAAW,YAAa,cAAe,cAAe,aAAc,WAAY,aAAc,WAAY,eAAgB,SAAU,WAAY,YAAa,WAAY,WAAY,QAAS,UAAW,eAAgB,QAAS,aAAc,SAAU,YAAa,QAAS,UAAW,OAAQ,WAAY,WAAY,aAAc,UAAW,SAAU,QAAS,UAAW,SAAU,UAAW,UAAW,YAAa,SAAU,SAAU,QAAS,UAAW,QAAS,SAAU,UAAW,WAAY,QAAS,YAAa,UAAW,UAAW,cAAe,aAAc,SAAU,UAAW,WAAY,YAAa,SAAU,cAAe,WAAY,SAAU,QAAS,WAAY,UAAW,UAAW,QAAS,QAAS,WAAY,QAAS,SAAU,SAAU,QAAS,WAAY,WAAY,WAAY,WAAY,WAAY,QAAS,YAAa,WAAY,UAAW,WAAY,WAAY,YAAa,SAAU,SAAU,MAAO,WAAY,SAAU,OAAQ,WAAY,YAAa,aAAc,UAAW,YAAa,cAAe,SAAU,YAAa,SAAU,SAAU,YAAa,QAAS,SAAU,QAAS,SAAU,YAAa,UAAW,YAAa,WAAY,YAAa,UAAW,WAAY,QAAS,QAAS,WAAY,YAAa,QAAS,UAAW,YAAa,YAAa,WAAY,SAAU,WAAY,aAAc,WAAY,WAAY,QAAS,QAAS,WAAY,UAAW,QAAS,aAAc,WAAY,SAAU,QAAS,SAAU,UAAW,UAAW,SAAU,OAAQ,QAAS,UAAW,SAAU,WAAY,WAAY,WAAY,YAAa,SAAU,QAAS,QAAS,YAAa,WAAY,YAAa,cAAe,WAAY,cAAe,aAAc,QAAS,YAAa,UAAW,WAAY,WAAY,aAAc,aAAc,YAAa,QAAS,YAAa,WAAY,QAAS,YAAa,aAAc,SAAU,WAAY,YAAa,UAAW,aAAc,WAAY,WAAY,YAAa,aAAc,YAAa,WAAY,YAAa,SAAU,SAAU,WAAY,WAAY,SAAU,YAAa,WAAY,YAAa,YAAa,QAAS,YAAa,SAAU,cAAe,UAAW,WAAY,QAAS,UAAW,SAAU,QAAS,WAAY,YAAa,QAAS,UAAW,YAAa,cAAe,UAAW,SAAU,SAAU,WAAY,aAAc,WAAY,aAAc,UAAW,SAAU,WAAY,QAAS,WAAY,SAAU,UAAW,UAAW,QAAS,SAAU,WAAY,QAAS,MAAO,YAAa,SAAU,WAAY,UAAW,aAAc,UAAW,WAAY,SAAU,SAAU,UAAW,cAAe,UAAW,SAAU,WAAY,YAAa,UAAW,WAAY,YAAa,SAAU,aAAc,WAAY,aAAc,QAAS,YAAa,UAAW,WAAY,YAAa,SAAU,aAAc,YAAa,QAAS,SAAU,QAAS,SAAU,SAAU,SAAU,OAAQ,WAAY,YAAa,cAAe,UAAW,WAAY,QAAS,SAAU,aAAc,QAAS,WAAY,UAAW,UAAW,UAAW,WAAY,SAAU,WAAY,WAAY,SAAU,SAAU,SAAU,UAAW,OAAQ,YAAa,eAAgB,cAAe,WAAY,WAAY,cAAe,SAAU,SAAU,QAAS,YAAa,aAAc,SAAU,MAAO,QAAS,UAAW,SAAU,QAAS,YAAa,QAAS,QAAS,UAAW,UAAW,aAAc,cAAe,WAAY,cAAe,SAAU,YAAa,OAAQ,QAAS,cAAe,WAAY,UAAW,SAAU,SAAU,SAAU,YAAa,YAAa,UAAW,WAAY,UAAW,WAAY,UAAW,aAAc,WAAY,WAAY,WAAY,UAAW,aAAc,QAAS,aAAc,YAAa,gBAAiB,SAAU,WAAY,WAAY,WAAY,YAAa,SAAU,YAAa,UAAW,UAAW,WAAY,aAAc,SAAU,aAAc,UAAW,UAAW,UAAW,SAAU,SAAU,WAAY,UAAW,YAAa,WAAY,SAAU,WAAY,YAAa,YAAa,YAAa,SAAU,aAAc,eAAgB,YAAa,WAAY,YAAa,UAAW,WAAY,aAAc,WAAY,UAAW,WAAY,SAAU,YAAa,SAAU,aAAc,UAAW,WAAY,UAAW,cAAe,aAAc,UAAW,WAAY,aAAc,UAAW,SAAU,UAAW,WAAY,YAAa,WAAY,UAAW,WAAY,eAAgB,UAAW,UAAW,YAAa,aAAc,SAAU,cAAe,UAAW,aAAc,YAAa,UAAW,UAAW,WAAY,WAAY,YAAa,YAAa,YAAa,YAAa,cAAe,cAAe,cAAe,aAAc,WAAY,YAAa,cAAe,YAAa,aAAc,WAAY,aAAc,aAAc,SAAU,aAAc,cAAe,eAAgB,eAAgB,WAAY,cAAe,aAAc,aAAc,UAAW,WAAY,UAAW,UAAW,SAAU,UAAW,UAAW,UAAW,WAAY,SAAU,UAAW,UAAW,UAAW,WAAY,UAAW,UAAW,UAAW,aAAc,YAAa,UAAW,WAAY,SAAU,UAAW,SAAU,SAAU,YAAa,cAAe,UAAW,WAAY,WAAY,WAAY,YAAa,SAAU,eAAgB,WAAY,WAAY,cAAe,aAAc,YAAa,WAAY,WAAY,WAAY,QAAS,QAAS,SAAU,SAAU,WAAY,WAAY,SAAU,SAAU,WAAY,WAAY,aAAc,aAAc,WAAY,YAAa,YAAa,YAAa,cAAe,WAAY,aAAc,YAAa,aAAc,YAAa,cAAe,cAAe,aAAc,cAAe,aAAc,aAAc,UAAW,aAAc,aAAc,WAAY,UAAW,aAAc,UAAW,WAAY,YAAa,SAAU,aAAc,WAAY,WAAY,QAAS,aAAc,UAAW,aAAc,UAAW,UAAW,UAAW,YAAa,aAAc,UAAW,aAAc,cAAe,aAAc,WAAY,aAAc,SAAU,WAAY,WAAY,WAAY,aAAc,aAAc,UAAW,aAAc,UAAW,WAAY,QAAS,UAAW,QAAS,UAAW,aAAc,UAAW,SAAU,UAAW,aAAc,cAAe,eAAgB,SAAU,WAAY,QAAS,QAAS,QAAS,WAAY,YAAa,WAAY,UAAW,SAAU,aAAc,cAAe,WAAY,SAAU,WAAY,UAAW,WAAY,WAAY,UAAW,WAAY,UAAW,WAAY,WAAY,UAAW,UAAW,UAAW,UAAW,OAAQ,YAAa,YAAa,QAAS,QAAS,SAAU,UAAW,WAAY,SAAU,cAAe,YAAa,QAAS,WAAY,YAAa,UAAW,WAAY,WAAY,YAAa,UAAW,YAAa,aAAc,YAAa,UAAW,YAAa,WAAY,UAAW,aAAc,WAAY,YAAa,UAAW,UAAW,aAAc,WAAY,YAAa,aAAc,YAAa,WAAY,SAAU,SAAU,WAAY,WAAY,UAAW,cAAe,YAAa,UAAW,UAAW,YAAa,UAAW,WAAY,aAAc,SAAU,SAAU,QAAS,aAAc,UAAW,UAAW,UAAW,SAAU,YAAa,UAAW,WAAY,YAAa,aAAc,aAAc,WAAY,WAAY,YAAa,cAAe,UAAW,UAAW,SAAU,QAAS,UAAW,QAAS,QAAS,aAAc,SAAU,WAAY,SAAU,UAAW,WAAY,aAAc,WAAY,SAAU,WAAY,YAAa,WAAY,UAAW,aAAc,YAAa,UAAW,QAAS,YAAa,aAAc,eAAgB,YAAa,aAAc,YAAa,YAAa,WAAY,aAAc,cAAe,aAAc,eAAgB,eAAgB,gBAAiB,aAAc,aAAc,eAAgB,UAAW,QAAS,aAAc,WAAY,SAAU,QAAS,SAAU,cAAe,eAAgB,eAAgB,YAAa,YAAa,UAAW,YAAa,QAAS,OAAQ,SAAU,cAAe,aAAc,WAAY,cAAe,aAAc,cAAe,aAAc,aAAc,WAAY,YAAa,WAAY,UAAW,UAAW,cAAe,YAAa,SAAU,YAAa,WAAY,cAAe,cAAe,SAAU,WAAY,QAAS,UAAW,YAAa,YAAa,OAAQ,aAAc,YAAa,YAAa,SAAU,YAAa,WAAY,UAAW,aAAc,SAAU,UAAW,UAAW,cAAe,SAAU,YAAa,YAAa,WAAY,OAAQ,SAAU,YAAa,WAAY,WAAY,SAAU,SAAU,YAAa,YAAa,WAAY,UAAW,aAAc,aAAc,UAAW,YAAa,aAAc,aAAc,WAAY,aAAc,SAAU,SAAU,UAAW,WAAY,YAAa,YAAa,aAAc,SAAU,aAAc,SAAU,YAAa,CAAC,CAAC,YAAa,UAAW,CAAC,SAAU,YAAa,MAAO,QAAS,QAAS,WAAY,QAAS,SAAU,SAAU,UAAW,WAAY,QAAS,SAAU,WAAY,aAAc,QAAS,SAAU,WAAY,aAAc,SAAU,QAAS,WAAY,WAAY,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAU,aAAc,UAAW,WAAY,YAAa,aAAc,aAAc,UAAW,QAAS,YAAa,YAAa,SAAU,SAAU,UAAW,WAAY,UAAW,YAAa,WAAY,YAAa,UAAW,SAAU,aAAc,WAAY,QAAS,WAAY,SAAU,UAAW,SAAU,aAAc,cAAe,UAAW,aAAc,YAAa,UAAW,SAAU,WAAY,aAAc,WAAY,QAAS,OAAQ,OAAQ,UAAW,UAAW,WAAY,UAAW,UAAW,SAAU,WAAY,OAAQ,UAAW,SAAU,UAAW,cAAe,cAAe,aAAc,UAAW,SAAU,cAAe,SAAU,SAAU,SAAU,UAAW,SAAU,WAAY,eAAgB,UAAW,QAAS,QAAS,OAAQ,UAAW,UAAW,UAAW,WAAY,UAAW,SAAU,QAAS,UAAW,SAAU,UAAW,WAAY,WAAY,SAAU,YAAa,WAAY,UAAW,QAAS,YAAa,WAAY,WAAY,UAAW,SAAU,WAAY,YAAa,WAAY,UAAW,UAAW,QAAS,QAAS,QAAS,WAAY,OAAQ,SAAU,WAAY,SAAU,QAAS,WAAY,aAAc,UAAW,UAAW,QAAS,SAAU,OAAQ,MAAO,WAAY,UAAW,UAAW,UAAW,WAAY,OAAQ,WAAY,UAAW,SAAU,UAAW,SAAU,aAAc,SAAU,YAAa,WAAY,WAAY,SAAU,UAAW,SAAU,QAAS,QAAS,SAAU,SAAU,QAAS,YAAa,WAAY,SAAU,SAAU,WAAY,SAAU,SAAU,SAAU,YAAa,YAAa,QAAS,UAAW,WAAY,OAAQ,YAAa,UAAW,UAAW,cAAe,aAAc,YAAa,YAAa,UAAW,QAAS,UAAW,UAAW,SAAU,MAAO,OAAQ,WAAY,OAAQ,SAAU,OAAQ,aAAc,YAAa,aAAc,QAAS,YAAa,QAAS,OAAQ,UAAW,SAAU,OAAQ,UAAW,WAAY,aAAc,YAAa,SAAU,SAAU,WAAY,WAAY,UAAW,QAAS,YAAa,UAAW,eAAgB,UAAW,UAAW,QAAS,UAAW,SAAU,OAAQ,QAAS,OAAQ,SAAU,WAAY,UAAW,SAAU,YAAa,WAAY,UAAW,UAAW,WAAY,SAAU,OAAQ,OAAQ,OAAQ,YAAa,YAAa,OAAQ,OAAQ,UAAW,QAAS,OAAQ,YAAa,WAAY,QAAS,cAAe,UAAW,SAAU,SAAU,UAAW,WAAY,UAAW,SAAU,SAAU,WAAY,SAAU,QAAS,WAAY,OAAQ,QAAS,WAAY,SAAU,SAAU,SAAU,SAAU,WAAY,SAAU,UAAW,UAAW,SAAU,YAAa,SAAU,cAAe,OAAQ,QAAS,OAAQ,SAAU,SAAU,WAAY,UAAW,YAAa,YAAa,WAAY,SAAU,SAAU,QAAS,SAAU,SAAU,YAAa,aAAc,WAAY,UAAW,WAAY,cAAe,WAAY,WAAY,WAAY,OAAQ,QAAS,aAAc,SAAU,UAAW,WAAY,UAAW,UAAW,YAAa,QAAS,YAAa,UAAW,YAAa,SAAU,WAAY,aAAc,YAAa,UAAW,SAAU,SAAU,UAAW,SAAU,UAAW,QAAS,cAAe,UAAW,YAAa,YAAa,WAAY,WAAY,WAAY,SAAU,UAAW,QAAS,QAAS,aAAc,WAAY,SAAU,QAAS,SAAU,UAAW,QAAS,OAAQ,QAAS,QAAS,QAAS,UAAW,SAAU,SAAU,SAAU,YAAa,SAAU,SAAU,SAAU,QAAS,aAAc,aAAc,WAAY,aAAc,QAAS,WAAY,UAAW,SAAU,QAAS,SAAU,SAAU,YAAa,YAAa,aAAc,YAAa,UAAW,WAAY,eAAgB,SAAU,SAAU,QAAS,WAAY,OAAQ,WAAY,WAAY,OAAQ,SAAU,YAAa,WAAY,OAAQ,YAAa,UAAW,OAAQ,QAAS,CAAC,CAAC,UAAW,QAAS,CAAC,OAAQ,WAAY,UAAW,QAAS,OAAQ,OAAQ,WAAY,QAAS,OAAQ,UAAW,SAAU,QAAS,QAAS,SAAU,SAAU,YAAa,CAAC,CAAC,UAAW,UAAW,CAAC,QAAS,QAAS,QAAS,WAAY,SAAU,OAAQ,WAAY,OAAQ,UAAW,UAAW,UAAW,YAAa,CAAC,CAAC,UAAW,QAAS,CAAC,SAAU,WAAY,SAAU,UAAW,UAAW,QAAS,OAAQ,SAAU,SAAU,UAAW,UAAW,WAAY,UAAW,QAAS,SAAU,UAAW,UAAW,SAAU,OAAQ,WAAY,WAAY,WAAY,UAAW,SAAU,UAAW,YAAa,UAAW,SAAU,SAAU,SAAU,UAAW,aAAc,SAAU,aAAc,eAAgB,WAAY,aAAc,OAAQ,QAAS,YAAa,SAAU,UAAW,WAAY,UAAW,UAAW,QAAS,cAAe,SAAU,cAAe,SAAU,QAAS,WAAY,eAAgB,UAAW,SAAU,QAAS,SAAU,aAAc,QAAS,aAAc,SAAU,WAAY,SAAU,YAAa,OAAQ,SAAU,UAAW,SAAU,UAAW,UAAW,QAAS,WAAY,YAAa,YAAa,UAAW,cAAe,cAAe,OAAQ,SAAU,UAAW,WAAY,SAAU,WAAY,cAAe,SAAU,SAAU,UAAW,cAAe,OAAQ,OAAQ,OAAQ,QAAS,QAAS,UAAW,QAAS,WAAY,UAAW,WAAY,OAAQ,SAAU,UAAW,SAAU,WAAY,UAAW,UAAW,YAAa,aAAc,UAAW,YAAa,SAAU,YAAa,SAAU,WAAY,YAAa,UAAW,WAAY,SAAU,OAAQ,YAAa,UAAW,WAAY,UAAW,SAAU,YAAa,UAAW,WAAY,YAAa,aAAc,SAAU,aAAc,cAAe,cAAe,QAAS,aAAc,SAAU,SAAU,aAAc,aAAc,WAAY,QAAS,QAAS,QAAS,YAAa,aAAc,SAAU,UAAW,SAAU,YAAa,QAAS,aAAc,OAAQ,QAAS,QAAS,QAAS,QAAS,UAAW,cAAe,UAAW,aAAc,UAAW,QAAS,SAAU,UAAW,YAAa,WAAY,UAAW,QAAS,SAAU,QAAS,QAAS,WAAY,QAAS,SAAU,QAAS,SAAU,UAAW,SAAU,aAAc,WAAY,WAAY,UAAW,YAAa,WAAY,QAAS,OAAQ,WAAY,QAAS,QAAS,YAAa,cAAe,QAAS,UAAW,SAAU,SAAU,SAAU,WAAY,UAAW,WAAY,SAAU,SAAU,UAAW,YAAa,MAAO,WAAY,cAAe,WAAY,UAAW,WAAY,QAAS,SAAU,YAAa,WAAY,UAAW,WAAY,YAAa,SAAU,SAAU,UAAW,YAAa,YAAa,WAAY,OAAQ,OAAQ,QAAS,WAAY,SAAU,UAAW,UAAW,SAAU,UAAW,YAAa,SAAU,WAAY,WAAY,QAAS,YAAa,UAAW,OAAQ,YAAa,eAAgB,cAAe,UAAW,UAAW,WAAY,WAAY,WAAY,UAAW,SAAU,aAAc,WAAY,gBAAiB,UAAW,SAAU,QAAS,SAAU,UAAW,SAAU,WAAY,QAAS,WAAY,SAAU,UAAW,SAAU,QAAS,SAAU,UAAW,QAAS,MAAO,UAAW,QAAS,MAAO,UAAW,SAAU,OAAQ,YAAa,YAAa,UAAW,QAAS,YAAa,YAAa,UAAW,WAAY,SAAU,UAAW,QAAS,OAAQ,YAAa,QAAS,SAAU,QAAS,OAAQ,QAAS,QAAS,WAAY,SAAU,OAAQ,WAAY,QAAS,aAAc,aAAc,WAAY,UAAW,YAAa,YAAa,UAAW,aAAc,YAAa,SAAU,SAAU,YAAa,QAAS,WAAY,SAAU,UAAW,WAAY,UAAW,SAAU,SAAU,UAAW,SAAU,UAAW,WAAY,YAAa,aAAc,SAAU,SAAU,UAAW,OAAQ,aAAc,UAAW,SAAU,SAAU,UAAW,YAAa,QAAS,QAAS,WAAY,YAAa,WAAY,WAAY,aAAc,WAAY,aAAc,cAAe,QAAS,UAAW,WAAY,UAAW,WAAY,WAAY,SAAU,WAAY,aAAc,SAAU,SAAU,SAAU,YAAa,SAAU,SAAU,OAAQ,SAAU,aAAc,WAAY,SAAU,QAAS,UAAW,SAAU,SAAU,SAAU,aAAc,SAAU,cAAe,YAAa,UAAW,WAAY,QAAS,QAAS,QAAS,YAAa,UAAW,WAAY,cAAe,SAAU,UAAW,UAAW,QAAS,OAAQ,UAAW,QAAS,SAAU,WAAY,UAAW,SAAU,SAAU,QAAS,UAAW,aAAc,QAAS,QAAS,UAAW,UAAW,UAAW,SAAU,WAAY,OAAQ,WAAY,UAAW,UAAW,OAAQ,cAAe,OAAQ,SAAU,UAAW,YAAa,SAAU,UAAW,aAAc,gBAAiB,aAAc,UAAW,QAAS,WAAY,UAAW,UAAW,SAAU,SAAU,WAAY,UAAW,SAAU,QAAS,SAAU,QAAS,UAAW,MAAO,QAAS,MAAO,UAAW,YAAa,eAAgB,UAAW,WAAY,WAAY,YAAa,SAAU,SAAU,UAAW,UAAW,YAAa,YAAa,UAAW,WAAY,aAAc,aAAc,UAAW,SAAU,QAAS,YAAa,WAAY,WAAY,SAAU,QAAS,QAAS,QAAS,QAAS,UAAW,WAAY,UAAW,cAAe,YAAa,UAAW,cAAe,YAAa,cAAe,WAAY,YAAa,SAAU,SAAU,OAAQ,UAAW,WAAY,SAAU,aAAc,WAAY,WAAY,OAAQ,YAAa,OAAQ,SAAU,UAAW,MAAO,SAAU,UAAW,SAAU,UAAW,QAAS,QAAS,aAAc,YAAa,eAAgB,SAAU,SAAU,UAAW,SAAU,UAAW,SAAU,SAAU,QAAS,UAAW,WAAY,aAAc,UAAW,OAAQ,YAAa,QAAS,QAAS,SAAU,QAAS,YAAa,QAAS,WAAY,SAAU,UAAW,UAAW,UAAW,SAAU,UAAW,SAAU,SAAU,WAAY,WAAY,UAAW,UAAW,QAAS,UAAW,UAAW,SAAU,WAAY,UAAW,SAAU,aAAc,OAAQ,UAAW,cAAe,CAAC,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,OAAQ,OAAQ,OAAQ,UAAW,QAAS,OAAQ,QAAS,QAAS,c,ulDCW7z1K,IAAM8R,GAAb,gCACI,WAAYl2B,GAAgB,kBACxB,gBACKA,IAAa,EAANA,EAFY,2BAARjC,EAAQ,iCAARA,EAAQ,yBAGxB,EAAKA,OAASA,EAHU,EADhC,2CAOQ,MAAO,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,WAPnD,GAA0B4B,GAWnB,SAASw2B,KACZ,OAAO/lB,GAAW,wBAAyB,GAAI8lB,IAAM,iBAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,OAO7E,IAAME,GAAb,gCACI,WAAYp2B,GAAgB,kBACxB,gBACKA,IAAa,EAANA,EAFY,2BAARjC,EAAQ,iCAARA,EAAQ,yBAGxB,EAAKA,OAASA,EAHU,EADhC,2CAOQ,MAAO,CAAC,KAAM,OAAQ,QAAS,MAAO,QAAS,UAAW,UAAW,UAAW,YAAa,gBAAiB,UAAW,OAAQ,MAAO,QAAS,QAAS,SAAU,mBAAoB,qBAAsB,UAAW,gBAAiB,SAAU,sBAAuB,qBAAsB,gBAAiB,oBAAqB,wBAAyB,yBAA0B,wBAAyB,uBAP3Z,GAA2B4B,GAepB,IAAM02B,GAAb,gCACI,WAAYr2B,GAAgB,kBACxB,gBACKA,IAAa,EAANA,EAFY,2BAARjC,EAAQ,iCAARA,EAAQ,yBAGxB,EAAKA,OAASA,EAHU,EADhC,2CAOQ,MAAO,CAAC,OAAQ,SAAU,eAPlC,GAAyB4B,GAWlB,SAAS22B,KACZ,OAAOlmB,GAAW,uBAAwB,GAAIimB,IAAK,iBAAM,CAAC,GAAI,GAAI,OAG/D,IAAME,GAAb,gCACI,WAAYz/B,EAAM0/B,EAAgBC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAeC,GAAQ,yBACxF,gBACKngC,KAAOA,EACZ,EAAK0/B,eAAiBA,EACtB,EAAKC,IAAMA,EACX,EAAKC,IAAa,EAANA,EACZ,EAAKC,IAAa,EAANA,EACZ,EAAKC,IAAa,EAANA,EACZ,EAAKC,IAAa,EAANA,EACZ,EAAKC,IAAa,EAANA,EACZ,EAAKC,IAAa,EAANA,EACZ,EAAKC,cAAgBA,EACrB,EAAKC,OAASA,EAZ0E,EADhG,UAAoCx2B,IAiB7B,SAASy2B,KACZ,OAAO/mB,GAAY,kCAAmC,GAAIomB,IAAgB,iBAAM,CAAC,CAAC,OAAQ1lB,IAAc,CAAC,iBAAkBA,IAAc,CAAC,MAAOylB,MAAmB,CAAC,MAAOvlB,IAAa,CAAC,MAAOA,IAAa,CAAC,MAAOA,IAAa,CAAC,MAAOA,IAAa,CAAC,MAAOA,IAAa,CAAC,MAAOA,IAAa,CAAC,gBAAiBH,GAAUG,KAAc,CAAC,UN1B5SomB,EMV1B/mB,GAAW,yBAA0B,GAAIgmB,IAAO,iBAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,CAAC,CAAC,QAASD,MAAoB,CAAC,QAASplB,KAAc,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,CAAC,CAAC,OAAQF,KAAe,GAAI,CAAC,CAAC,OAAQE,KAAc,GAAI,GAAI,CAAC,CAAC,OAAQA,KAAc,GAAI,GAAI,GAAI,GAAI,CAAC,CAAC,OAAQA,SNWjSZ,GAAY,0BAA2B,CAACgnB,GAAOnJ,IAAW,iBAAM,CAAC,CAAC,WAAY9d,GAAW,2CAA4C,CAACinB,EAAMjnB,GAAW,2CAA4C,CAACa,GAAYH,GAAUG,SAAkB,CAAC,UAAWb,GAAW,2CAA4C,CAACinB,KAAS,CAAC,YAAarmB,WAD3U,IAA8BqmB,KM6B9B,IAAMC,GAAQ1d,GAAQ,CAAC,IAAI0c,GAAM,IAAK,IAAIA,GAAM,IAAK,IAAIA,GAAM,IAAK,IAAIA,GAAM,IAAK,IAAIA,GAAM,MAEvF3H,GNlBN,SAAiBA,GACpB,IAAI4I,EACAC,EAAkB1e,KAChBwF,EAAazkB,EAAc80B,GACjC,IACI,KAAOrQ,EAAW,8CAA8C,CAC5D,IAAMoD,EAAapD,EAAW,0DACxBvmB,EAAM2pB,EAAW,GACjByN,EAASzN,EAAW,GACpB5J,EAAa8M,GAAQ7sB,EAAKy/B,GAChC,GAAkB,MAAd1f,EAEoByf,EAAUC,EAA9BA,EAA+ChyB,GAAIzN,EAAK8hB,GADxC/B,EACwDiB,GAAUoW,IAAUoI,QAG5FC,EAAkBhyB,GAAIzN,EAAKghB,GAAUoW,GAASqI,IAX1D,QAgBIlZ,EAAWzC,UAEf,OAAO2b,EMJUC,CAAQrZ,GAAOlB,IAAM,WACtC,IAAIuR,EACJ,OAAO5U,GAAOd,GAAU,CAAC,IAAIud,GAAM,IAAK7H,EAAcR,GAAM/P,GAAY,IAAIoY,GAAM,KAAM,IAAI1I,GAASa,EAAYvJ,QAASuJ,EAAYZ,cAAeY,EAAYX,gBAAgB,GAAM,MAAU5Q,IAAM,kBAAMrD,GAAOd,GAAUuV,GAAuB,IAAIgI,GAAM,GAAI1c,GAAQ,CAAC,IAAI0c,GAAM,GAAI,IAAIA,GAAM,GAAI,IAAIA,GAAM,OAAQpZ,IAAM,WAC5T,IAAIwa,EACJ,OAAO7d,GAAOd,GAAU,CAAC,IAAIud,GAAM,IAAKoB,EAAgBzJ,GAAM7xB,IAAI,SAAC1D,GAAD,OAAQ,IAAI49B,GAAM,GAAI59B,EAAG,KAAKkhB,GAAQ,CAAC,IAAIwc,GAAK,GAAI,IAAIA,GAAK,GAAI,IAAIA,GAAK,GAAI,IAAIA,GAAK,GAAI,IAAIA,GAAK,GAAI,IAAIA,GAAK,OAAQ,IAAIxI,GAAS8J,EAAcxS,QAAS,GAAG,EAAMwS,EAAc3J,2BAA4B2J,EAAc1J,aAAc9Q,IAAM,kBAAMrD,GAAOd,GAAUyV,GAAO,IAAI8H,GAAM,GAAIpY,GAAY,IAAIoY,GAAM,OAAQpZ,IAAM,kBAAMrD,GAAOd,GAAUuV,GAAuB,IAAIgI,GAAM,IAAKgB,KAASpa,IAAM,kBAAMrD,GAAOd,GAAUyV,GAAO,IAAI8H,GAAM,GAAI1c,GAAQ,CAAC,IAAI0c,GAAM,GAAI,GAAI,IAAIA,GAAM,GAAI,IAAIF,GAAK,GAAI,OAAQlZ,IAAM,kBAAMrD,GAAOd,GAAUuV,GAAuB,IAAIgI,GAAM,GAAI1c,GAAQ,CAAC,IAAI0c,GAAM,GAAI,IAAIA,GAAM,GAAI,IAAIA,GAAM,OAAQpZ,IAAM,kBAAMrD,GAAOd,GAAUyV,GAAO,IAAI8H,GAAM,GAAIpY,GAAY,IAAIoY,GAAM,OAAQpZ,IAAM,kBAAMrD,GAAOd,GAAUyV,GAAO,IAAI8H,GAAM,GAAI1c,GAAQ,CAAC,IAAI0c,GAAM,IAAK,IAAIA,GAAM,GAAI,OAAQpZ,IAAM,kBAAMrD,GAAOd,GAAUyV,GAAO,IAAI8H,GAAM,GAAI1c,GAAQ,CAAC,IAAI0c,GAAM,IAAK,IAAIA,GAAM,QAASpZ,IAAM,kBAAMrD,GAAOd,GAAUuV,GAAuB,IAAIgI,GAAM,IAAK1c,GAAQ,CAAC,IAAI0c,GAAM,GAAI,aAAc,IAAIA,GAAM,GAAI,kBAAmB,IAAIA,GAAM,GAAI,cAAe,IAAIA,GAAM,GAAI,qBAAsBpZ,IAAM,kBAAMrD,GAAOd,GAAUyV,GAAO,IAAI8H,GAAM,GAAI1c,GAAQ,CAAC,IAAI0c,GAAM,GAAI,IAAIF,GAAK,GAAI,GAAI,IAAIE,GAAM,IAAK,OAAQpZ,IAAM,kBAAMrD,GAAOd,GAAUuV,GAAuB,IAAIgI,GAAM,GAAI1c,GAAQ,CAAC,IAAI0c,GAAM,GAAI,IAAIA,GAAM,OAAQpZ,IAAM,kBAAMrD,GAAOd,GAAUyV,GAAO,IAAI8H,GAAM,GAAI1c,GAAQ,CAAC,IAAI0c,GAAM,GAAI,GAAI,IAAIA,GAAM,GAAI,IAAIF,GAAK,GAAI,OAAQlZ,IAAM,kBAAMnE,GAAUyV,GAAO,IAAI8H,GAAM,GAAIpY,GAAY,IAAIoY,GAAM,oE,uKClFxhD,IAAMqB,GAAb,WACI,WAAYC,EAAO75B,I,4FAAU,SACzB,IAAMklB,EAAQ,IAAIriB,GAAU,MAC5BrH,KAAKwE,SAAWA,EAChBklB,EAAMpb,SAAWtO,KACjBA,KAAKs+B,QAAW,IAAIC,IAAI,IACxBv+B,KAAK,YAAc,EACnB,IAAM+kB,EAAazkB,EAAc+9B,GACjC,IACI,KAAOtZ,EAAW,8CAA8C,CAC5D,IAAMyZ,EAAOzZ,EAAW,0DACxB0Z,GAAuB/U,EAAMpb,SAAUkwB,EAAK,GAAIA,EAAK,KAH7D,QAOIzZ,EAAWzC,W,UAfvB,O,EAAA,G,EAAA,8BAqBW1D,GAEH,OAAOxf,MAAMyd,KADC7c,QAtBtB,KAyBK,+CAzBL,iBA2BQ,OAAOM,EADON,QA1BtB,sCA+BQ,OAAOM,EAAcsF,GADP5F,KACoBs+B,QAAQ17B,aA/BlD,KAiCK5E,OAAOwC,SAjCZ,iBAkCQ,OAAOC,EAAWT,KAAKO,mBAlC/B,KAoCK,oDApCL,eAoC0D0gB,GAElDwd,GADcz+B,KACgBihB,EAAK,GAAIA,EAAK,MAtCpD,KAwCK,iDAxCL,iBA0CQyd,GADc1+B,QAzCtB,KA4CK,yDA5CL,eA4C+DihB,GACvD,IACM1C,EAAaogB,GADL3+B,KACsCihB,EAAK,IAazD,OAXkB,MAAd1C,GACInb,EAAOmb,EAAW,GAAI0C,EAAK,IACD,EAOJ,GAG1B,KAAK,EACD,OAAO,EAEX,KAAK,EACD,OAAO,KAhEvB,KAoEK,2DApEL,eAoEiEuE,EAAOoZ,GAEhEjZ,IAAe,SAACjqB,EAAG2M,GACfmd,EAAMoZ,EAAaljC,GAAK2M,IAFdrI,QArEtB,KA0EK,qDA1EL,iBA4EQ,OAAsC,EAA/B6+B,GADO7+B,QA3EtB,KA8EK,0DA9EL,iBA+EQ,OAAO,IA/Ef,KAiFK,uDAjFL,eAiF6DihB,GACrD,IACM1C,EAAaogB,GADL3+B,KACsCihB,EAAK,IACzD,OAAkB,MAAd1C,IACInb,EAAOmb,EAAW,GAAI0C,EAAK,KAC3B6d,GAJM9+B,KAI0BihB,EAAK,KAElC,KAxFnB,KA8FK,qDA9FL,eA8F2DziB,EAAKN,GAExDugC,GADcz+B,KACgBxB,EAAKN,KAhG3C,KAkGK,4DAlGL,eAkGkEM,GAE1D,OAAOugC,GADO/+B,KAC8BxB,KApGpD,KAsGK,yDAtGL,eAsG+DA,GAEvD,OAAOwgC,GADOh/B,KAC2BxB,KAxGjD,KA0GK,0DA1GL,eA0GgEA,EAAKsE,GAE7Dm8B,GADcj/B,KACqBxB,EAAKsE,KA5GhD,KA8GK,oDA9GL,iBA+GQ,IAAM4mB,EAAQ1pB,KACd,OAAO2f,GAAQgE,IAAM,kBAAM9gB,IAAI,SAAC27B,GAAD,OAAUA,EAAK,KAAI9U,SAhH1D,KAkHK,uDAlHL,eAkH6DlrB,GAErD,OAAOsgC,GADO9+B,KACyBxB,KApH/C,KAsHK,+DAtHL,eAsHqEA,EAAKN,GAClE,IACMqgB,EAAaogB,GADL3+B,KACsCxB,GACpD,GAAkB,MAAd+f,EAAoB,CACpB,IAAMigB,EAAOjgB,EAEb,OADArgB,EAAMoQ,SAAWkwB,EAAK,IACf,EAGP,OAAO,IA/HnB,KAkIK,sDAlIL,iBAmIQ,IAAM9U,EAAQ1pB,KACd,OAAO2f,GAAQgE,IAAM,kBAAM9gB,IAAI,SAAC27B,GAAD,OAAUA,EAAK,KAAI9U,SApI1D,8BA4IQgV,GADc1+B,QA3ItB,6BA8IWqK,GAEH,OAAOy0B,GADO9+B,KACyBqK,KAhJ/C,gCAoJQ,OAAOxH,IAAI,SAAChE,GAAD,MAAO,CAACA,EAAE,GAAIA,EAAE,MADbmB,QAnJtB,0BAsJQqK,GAEA,OAAO20B,GADOh/B,KAC2BqK,KAxJjD,0BA0JQA,GAEA,OAAO00B,GADO/+B,KAC8BqK,KA5JpD,6BAgKQ,OAAOxH,IAAI,SAAChE,GAAD,OAAOA,EAAE,KADNmB,QA/JtB,0BAkKQqK,EAAGvH,GAGH,OADAm8B,GADcj/B,KACqBqK,EAAGvH,GADxB9C,OAnKtB,+BAyKQ,OAAO6C,IAAI,SAAChE,GAAD,OAAOA,EAAE,KADNmB,QAxKtB,8BA2KYsF,EAAGslB,GACP,IAAMlB,EAAQ1pB,KACdggB,IAAQ,SAACnhB,GACLyG,EAAEzG,EAAE,GAAIA,EAAE,GAAI6qB,KACfA,KA/KX,KAkBS1rB,OAAOC,YAlBhB,eAmBQ,MAAO,eAnBf,2BAwIQ,OAAsC,EAA/B4gC,GADO7+B,W,6BAvItB,KA2LA,SAASk/B,GAA+BxV,EAAOrf,GAC3C,IACIkU,EADEzc,EAAoC,EAAhC4nB,EAAMllB,SAAS/E,YAAY4K,GAEjC80B,EAAS,KAIb,OAHA5gB,EAAa,CAAC0X,GAAYvM,EAAM4U,QAASx8B,EAAG,IAAIuF,IAAU,kBAAM83B,KAAQ,SAACr8B,GACrEq8B,EAASr8B,MACRq8B,IACU,GACJ,EAAC,EAAMr9B,EAAGyc,EAAW,GAAG7U,WAAU,SAAC80B,GAAD,OAAU9U,EAAMllB,SAASnB,OAAOgH,EAAGm0B,EAAK,QAG1E,EAAC,EAAO18B,GAAI,GAIpB,SAAS68B,GAA0BjV,EAAOrf,GAC7C,IAAMkU,EAAa2gB,GAA+BxV,EAAOrf,GAazD,OAXIkU,EAAW,IACPA,EAAW,IAAM,EACS,EAOJ,GAG1B,KAAK,EACD,OAAO2X,GAAgBxM,EAAM4U,QAAS/f,EAAW,IAAIA,EAAW,IAEpE,KAAK,EACD,QASL,SAASmgB,GAAkBhV,GAC9BA,EAAM4U,QAAQc,QAGX,SAASP,GAAsBnV,GAClC,IAAI9nB,EAAQ,EACRmjB,EAAazkB,EAAcopB,EAAM4U,QAAQ17B,UAC7C,IACI,KAAOmiB,EAAW,8CAA8C,CAE5DnjB,EAAUA,EADImjB,EAAW,0DACDnpB,OAAU,GAH1C,QAOImpB,EAAWzC,UAEf,OAAe,EAAR1gB,EAGJ,SAASo9B,GAA2BtV,EAAOrf,GAC9C,IAAMkU,EAAaogB,GAA0BjV,EAAOrf,GACpD,GAAkB,MAAdkU,EACA,OAAOA,EAAW,GAGlB,MAAO,IAAIle,MAAM,wCAIlB,SAAS4+B,GAA4BvV,EAAOrf,EAAGvH,GAClD,IAAMyb,EAAa2gB,GAA+BxV,EAAOrf,GAazD,OAXIkU,EAAW,IACPA,EAAW,IAAM,EACS,EAOJ,GAG1B,KAAK,EACD2X,GAAgBxM,EAAM4U,QAAS/f,EAAW,IAAIA,EAAW,IAAM,CAAClU,EAAGvH,GACnE,MAEJ,KAAK,EACD,GAAIyb,EAAW,GACS2X,GAAgBxM,EAAM4U,QAAS/f,EAAW,IAAIriB,KAAK,CAACmO,EAAGvH,SAG3E4mB,EAAM4U,QAAQ38B,IAAI4c,EAAW,GAAI,CAAC,CAAClU,EAAGvH,MAO/C,SAAS27B,GAAuB/U,EAAOrf,EAAGvH,GAC7C,IAAMyb,EAAa2gB,GAA+BxV,EAAOrf,GAazD,OAXIkU,EAAW,IACPA,EAAW,IAAM,EACS,EAOJ,GAG1B,KAAK,EACD,IAAM8gB,EAAMpnB,GAAO,6DAA8D5N,GACjF,MAAO,IAAIhK,MAAMg/B,GAGrB,KAAK,EACD,GAAI9gB,EAAW,GACS2X,GAAgBxM,EAAM4U,QAAS/f,EAAW,IAAIriB,KAAK,CAACmO,EAAGvH,SAG3E4mB,EAAM4U,QAAQ38B,IAAI4c,EAAW,GAAI,CAAC,CAAClU,EAAGvH,MAO/C,SAASi8B,GAA8BrV,EAAOrf,GACjD,IAAMkU,EAAa2gB,GAA+BxV,EAAOrf,GAazD,OAXIkU,EAAW,IACPA,EAAW,IAAM,EACS,EAOJ,GAG1B,KAAK,EACD,OAAO,EAEX,KAAK,EACD,OAAO,GAKZ,SAASugB,GAAyBpV,EAAOrf,GAC5C,IAAMkU,EAAa2gB,GAA+BxV,EAAOrf,GAazD,OAXIkU,EAAW,IACPA,EAAW,IAAM,EACS,EAOJ,GAG1B,KAAK,EAED,OADA2X,GAAgBxM,EAAM4U,QAAS/f,EAAW,IAAIzhB,OAAOyhB,EAAW,GAAI,IAC7D,EAEX,KAAK,EACD,OAAO,GC5TZ,SAAS+gB,GAAQC,EAAY3iB,EAAIpY,GACpC,OAAOmf,IAAM,WACT,IAAM6b,EAAO,IAAIpB,GAAW,GAAI55B,GAC1Bf,EAAO,GACPshB,EAAazkB,EAAcsc,GACjC,IACI,IADA,iBAEI,IAAMzd,EAAI4lB,EAAW,0DACfvmB,EAAM+gC,EAAWpgC,GACnBof,OAAU,EACV4gB,EAAS,MACb5gB,EAAa,CAAC0X,GAAYuJ,EAAMhhC,EAAK,IAAI6I,IAAU,kBAAM83B,KAAQ,SAACr8B,GAC9Dq8B,EAASr8B,MACRq8B,IACU,GACL5gB,EAAW,GAAGriB,KAAKiD,KP0BtC,SAAmBqgC,EAAMn1B,EAAGvH,GAC/B,GAAI08B,EAAK99B,IAAI2I,GACT,MAAM,IAAIhK,MAAM,0DAA4DgK,GAEhFm1B,EAAK79B,IAAI0I,EAAGvH,GO3BI28B,CAAUD,EAAMhhC,EAAK,CAACW,IAChBsE,EAAKvH,KAAKsC,KAbjBumB,EAAW,8CAA8C,IADpE,QAmBIA,EAAWzC,UAEf,OAAOzf,IAAI,SAAC68B,GAAD,MAAW,CAACA,EAAOxJ,GAAgBsJ,EAAME,MAASj8B,M,o0FCnF9D,IAAMk8B,GAAb,WACI,aAA+B,IAAnBC,EAAmB,mEAC3B5/B,KAAK6/B,IAAM,EACX7/B,KAAK8/B,WAAaF,EAClB5/B,KAAK+/B,WAAa,IAAIxB,IAJ9B,4CAUQ,IAAKv+B,KAAK8/B,WAAY,CAClB9/B,KAAK8/B,YAAa,EADA,Q,8nBAAA,CAES9/B,KAAK+/B,YAFd,IAElB,2BAA4C,EACxCC,EADwC,qBAF1B,kCAV9B,kCAiBgB16B,GACR,IAAMvC,EAAK/C,KAAK6/B,IAEhB,OADA7/B,KAAK+/B,WAAWp+B,IAAI3B,KAAK6/B,MAAOv6B,GACzBvC,IApBf,qCAsBmBA,GACX,OAAO/C,KAAK+/B,WAAL,OAAuBh9B,KAvBtC,+BAyBauC,EAAGwa,GACR,IAAMmgB,EAAIjgC,KACJ+C,EAAK/C,KAAKkgC,YAAqB,MAATpgB,EAAgBxa,EAAI,kBAAMA,EAAEwa,KACxD,MAAO,CAAEwC,QAAF,WAAc2d,EAAEE,eAAep9B,OA5B9C,kCAOQ,OAAO/C,KAAK8/B,eAPpB,KA+BaM,GAAb,a,mOAAA,U,IAAA,G,EAAA,E,uJACI,aAAc,wBACV,cAAM,8BACNvkC,OAAOwkC,eAAP,MAA4BD,EAAuBtkC,WAFzC,EADlB,aAA4CuE,QAqBrC,SAASigC,GAAch7B,GAC1B,OAAO,SAACi7B,GACJ,GAAIA,EAAIC,YAAYC,YAChBF,EAAIG,SAAS,IAAIN,SAEhB,GAAIG,EAAII,WAAWC,oBACpBL,EAAII,WAAWE,QAAO,WAClB,IACIv7B,EAAEi7B,GAEN,MAAOO,GACHP,EAAIQ,QAAQD,YAKpB,IACIx7B,EAAEi7B,GAEN,MAAOO,GACHP,EAAIQ,QAAQD,KAKrB,SAASE,GAAcC,EAAaC,GACvC,OAAOZ,IAAc,SAACC,GAClBU,EAAY,CACRE,UAAW,SAAChiC,GACR,IACI+hC,EAAO/hC,EAAP+hC,CAAUX,GAEd,MAAOa,GACHb,EAAIQ,QAAQK,KAGpBL,QAASR,EAAIQ,QACbL,SAAUH,EAAIG,SACdF,YAAaD,EAAIC,YACjBG,WAAYJ,EAAII,gBAIrB,SAASU,GAAgBnjC,GAC5B,OAAOoiC,IAAc,SAACC,GAAD,OAASA,EAAIY,UAAUjjC,MAgFvB,IA9EzB,2EACS+iC,EAAaC,GACd,OAAOF,GAAcC,EAAaC,KAF1C,8BAIYI,EAAcC,GAClB,OAAOvhC,KAAKwhC,KAAKF,GAAc,kBAAMC,OAL7C,4BAOU3d,GACF,OAAO0c,IAAc,SAACC,GAAD,OAAS3c,IAAY2c,QARlD,0BAUQkB,EAAUC,GACV,IAAM3hC,EAAO0hC,EAASzjC,OAAOwC,YACzBN,EAAMH,EAAKI,OACf,OAAOH,KAAK2hC,OAAM,kBAAOzhC,EAAIE,OAAMJ,KAAK4hC,OAAM,WAC1C,IAAMp8B,EAAMk8B,EAAKxhC,EAAIhC,OAErB,OADAgC,EAAMH,EAAKI,OACJqF,QAhBnB,6BAmBWtH,GACH,OAAOmjC,GAAgBnjC,KApB/B,iCAsBe+iC,GACP,OAAOA,IAvBf,iCAyBeA,EAAaY,GACpB,OAAOvB,IAAc,SAACC,GAClBU,EAAY,CACRE,UAAW,SAAChiC,GACR0iC,IACAtB,EAAIY,UAAUhiC,IAElB4hC,QAAS,SAAC5hC,GACN0iC,IACAtB,EAAIQ,QAAQ5hC,IAEhBuhC,SAAU,SAACvhC,GACP0iC,IACAtB,EAAIG,SAASvhC,IAEjBqhC,YAAaD,EAAIC,YACjBG,WAAYJ,EAAII,kBAzChC,8BA6CYM,EAAaa,GACjB,OAAOxB,IAAc,SAACC,GAClBU,EAAY,CACRE,UAAWZ,EAAIY,UACfT,SAAUH,EAAIG,SACdF,YAAaD,EAAIC,YACjBG,WAAYJ,EAAII,WAChBI,QAAS,SAACK,GACN,IACIU,EAAaV,EAAbU,CAAiBvB,GAErB,MAAOwB,GACHxB,EAAIQ,QAAQgB,YAzDpC,4BA+DUC,EAAUd,GACZ,OAAOlhC,KAAKiiC,WAAWf,EAAOc,IAAW,kBAAMA,EAAS1f,eAhEhE,4BAkEU4f,EAAOjB,GAAa,WACtB,OAAIiB,IACOliC,KAAKwhC,KAAKP,GAAa,kBAAM,EAAKU,MAAMO,EAAOjB,MAG/CjhC,KAAKmiC,YAAO,KAvE/B,6BA2EQ,OAAO7B,IAAc,SAACC,GAAD,OAASA,EAAIY,eAAU,UA3EpD,MCdwC,IAAIxB,GChFrC,SAASyC,GAAYC,EAAMjB,GAC9BkB,QAAQC,MAAMtlB,GAAKolB,GAAOjB,GCAvB,SAASoB,GAASzB,EAAS0B,EAAUC,GACxC1iB,IAAQ,SAAChkB,GACL,IACIA,EAAKymC,GAET,MAAOrB,GACHL,EAAQK,MAEbsB,GAGA,SAASC,KACZ,OAAOpjB,KAGJ,SAASqjB,GAAQt9B,EAAGo9B,GACvB,OAAO7/B,IAAI,SAACggC,GAAD,OAAQ,SAACC,GAChBD,GAAE,SAACl9B,GACCm9B,EAAMx9B,EAAEK,UAEZ+8B,GAGD,SAASK,GAAUC,GACtB,OvBwgBG,SAAgBC,GACnB,IAAMxiB,EAAOzB,KACT0B,EAAOD,EACLR,EAAS,SAACrD,GACZ8D,EAAOd,IAAK,SAACG,EAAK5gB,GACd,IAAMhB,EAAI,IAAI4f,GAAW5e,OAAG,GAE5B,OADA4gB,EAAI9B,KAAO9f,EACJA,IACRuiB,EAAM9D,IAEb,GAAI1d,EAAY+jC,GACZA,EAAMC,QAAQjjB,QAEb,GAAIgjB,aAAiBllB,GACtBiC,GAAQC,EAAQgjB,OAEf,CACD,IAAMle,EAAazkB,EAAc2iC,GACjC,IACI,KAAOle,EAAW,8CACd9E,EAAO8E,EAAW,2DAF1B,QAMIA,EAAWzC,WAGnB,IAAM6gB,EAAOziB,EACPG,EAAM7B,KAEZ,OADAmkB,EAAKllB,KAAO4C,EACLvB,GAAqBmB,GuBtiBrB7a,CAAOo9B,GAGX,SAASI,GAAU53B,GACtB,OAAOgU,GAAUhU,GAmCd,SAAS63B,GAAkBhE,GAC9B,OAAO7f,IAAU,SAACijB,GACdA,EAASpD,M,8PC5DV,SAASiE,GAAgCC,EAAUC,GACtD,OAAOC,QAAWD,EAAQD,G,+FCLvB,IAAMG,GACT,aAAc,YAadA,GAAMh0B,MAAS,IAAI6uB,ICwXhB,IAAMoF,GAAmBF,KCrOzB,SAASG,GAAqBC,GACjC,OAAOF,GAAiBG,OAAOD,GA4FWE,YA2DuBA,Y,gtDCxS9D,IAAMC,GAAb,gCACI,WAAYr9B,GAAgB,kBACxB,gBACKA,IAAa,EAANA,EAFY,2BAARjC,EAAQ,iCAARA,EAAQ,yBAGxB,EAAKA,OAASA,EAHU,EADhC,2CAOQ,MAAO,CAAC,iBAAkB,cAPlC,GAAsC4B,GAe/B,IAAM29B,GAAb,gCACI,WAAYxmC,EAAM0/B,EAAgBC,EAAK8G,EAAavG,EAAev/B,GAAM,yBACrE,gBACKX,KAAOA,EACZ,EAAK0/B,eAAiBA,EACtB,EAAKC,IAAMA,EACX,EAAK8G,YAAcA,EACnB,EAAKvG,cAAgBA,EACrB,EAAKv/B,KAAOA,EAPyD,EAD7E,UAAuCgJ,IAYhC,SAAS+8B,KACZ,OAAOrtB,GAAY,4BAA6B,GAAImtB,IAAmB,iBAAM,CAAC,CAAC,OAAQzsB,IAAc,CAAC,iBAAkBA,IAAc,CAAC,MAAOylB,MAAmB,CAAC,cAAe1lB,GAAUN,GAAWS,GAAYL,GAAYylB,SAAuB,CAAC,gBAAiBvlB,GAAUG,KAAc,CAAC,OAhBzRX,GAAW,2BAA4B,GAAIitB,IAAkB,iBAAM,CAAC,CAAC,CAAC,MAAOtsB,IAAa,CAAC,MAAOA,KAAc,YAmBpH,SAAS0sB,GAAuBF,GACnC,OAAO5Y,GAAOzoB,IAAI,SAACylB,GAAD,MAAe,CAACA,EAAU,GAAI1I,IAAK,SAACqC,EAAKoiB,GAAN,OAAepiB,EAAMoiB,IAAM,EAAGxhC,IAAI,SAACyhC,GAAD,OAAaA,EAAQ,KAAIhc,EAAU,QToEvH,SAAsBiX,EAAY3iB,EAAIpY,GACzC,OAAOqgB,GAAOhiB,IAAI,SAACylB,GAAD,MAAe,CAACA,EAAU,GAAIzD,GAAOyD,EAAU,OAAMgX,GAAQC,EAAY3iB,EAAIpY,KSrEkC+/B,EAAa,SAACC,GAAD,OAAWA,EAAM,M5Bo1B5Il/B,E4Bp1BuJ,SAACqlB,GACvK,OAAgB,MAAZA,EAAM,GACC,CAACA,EAAM,GAAIA,EAAM,SAGxB,G5B+0Bc/N,E4B70BnBsnB,E5B80BGzjB,EAAOzB,KACP0B,EAAOd,IAAK,SAACG,EAAK5gB,GACpB,IAAMof,EAAajZ,EAAEnG,GACrB,GAAkB,MAAdof,EACA,OAAOwB,EAGP,IAAM5hB,EAAI,IAAI4f,GAAWmF,GAAQ3E,QAAa,GAE9C,OADAwB,EAAI9B,KAAO9f,EACJA,IAEZsiB,EAAM7D,GACHiE,EAAM7B,KACZ0B,EAAKzC,KAAO4C,EACLvB,GAAqBmB,I4B51BX,CACbpd,OAAQ,SAAClE,EAAGQ,GAAJ,OAAUyD,EAAOjE,EAAGQ,IAC5BF,YAAa,SAACN,GAAD,OAAO6D,EAAS7D,Q5B20B9B,IAAgBmG,EAAGsX,EAChB6D,EACAC,EAWAG,E4Bp1BH,SAAS4jB,GAAoBC,GAChC,IACI1L,EAAyB2L,EAAKC,EAAKC,EAAKC,EAAKhkC,EAAKikC,EjBsDhCC,EAAO5P,EAAOC,EAAOT,EACvCvnB,EiBxDEkR,EAAa6lB,GAAuBM,EAAMR,aAE1Ce,EAA2BnZ,GAAuB,IAAI+Q,GAAK,GAAIte,GACrE,GAAgC,MAA5B0mB,EAAkC,CAClC,IAAMC,EAA2BpZ,GAAuB,IAAI+Q,GAAK,GAAIte,GACrE,GAAgC,MAA5B2mB,EAAkC,CAClC,IAAMC,EAA2BrZ,GAAuB,IAAI+Q,GAAK,GAAIte,GACrE,GAAgC,MAA5B4mB,EAAkC,CAClC,IAAMC,EAA2BtZ,GAAuB,IAAI+Q,GAAK,GAAIte,GACrE,GAAgC,MAA5B6mB,EAAkC,CAClC,IAAMC,EAA2BvZ,GAAuB,IAAI+Q,GAAK,GAAIte,GACrE,GAAgC,MAA5B8mB,EAAkC,CAClC,IAAMC,EAA2BxZ,GAAuB,IAAI+Q,GAAK,GAAIte,GACrC,MAA5B+mB,GACAtM,EAA0B,EAC1B2L,EAAMW,EACNV,EAAMO,EACNN,EAAMK,EACNJ,EAAMM,EACNtkC,EAAMmkC,EACNF,EAAMM,GAGNrM,EAA0B,OAI9BA,EAA0B,OAI9BA,EAA0B,OAI9BA,EAA0B,OAI9BA,EAA0B,OAI9BA,EAA0B,EAE9B,OAAQA,GACJ,KAAK,EACD,OAAO,IAAIkE,GAAewH,EAAMjnC,KAAMinC,EAAMvH,eAAgBuH,EAAMtH,IAAKt8B,EAAK+jC,EAAKD,EAAKE,EAAKC,EAAKJ,EAAKD,EAAM/G,ejBQ7FqH,EiBRsH,SAACzZ,GAAD,Of+pDzI,SAAgBA,EAAU/mB,GAC7B,OAAOk3B,GAAgBl3B,EAAUw2B,GAAoBx2B,EAAU+mB,IehqD2Fga,CAASha,EAAU,CACjKhK,QAAS,SAACpiB,EAAGQ,GAAJ,OAAUwE,EAAQhF,EAAGQ,OjBOby1B,EiBNjBA,GjBMwBC,EiBNjB7V,GAAU,IAAIud,GAAM,IjBMInI,EiBNCrV,KjBOxClS,GAAU,EACP,IAAIsnB,GAAUC,EAAUoQ,EAAMQ,IAAU,SAACrmC,GAAD,OAAOA,IAAGg2B,IAAU,SAAC7M,GAChE,IAAMuN,EAAgBvN,EAAU,GAChC,OAAIA,EAAU,GAAGgM,gBAAkB14B,GAAOi6B,GAC/BA,OAGPxoB,GAAU,KAGf+nB,EAAOR,EAAUS,KAAUhoB,KiBf1B,KAAK,EACD,QAKL,IAAMo4B,GAAgB,SAACtmC,GAAD,OtB5GtB,SAAcA,GACjB,OAAO,EAAI0F,EAAW,EAAG1F,GsB2GOumC,CAAKvmC,IAElC,SAASwmC,GAAoBjB,GAChC,IACI1L,EAAyB2L,EAAKC,EAAKC,EAAKC,EAAKhkC,EAAKikC,EADhDxmB,EAAammB,EAAMR,YA4CzB,OA1CKzkB,GAAQlB,IACJkB,GAAQxB,GAAKM,KACTkB,GAAQxB,GAAKA,GAAKM,MACdkB,GAAQxB,GAAKA,GAAKA,GAAKM,OACnBkB,GAAQxB,GAAKA,GAAKA,GAAKA,GAAKM,QACxBkB,GAAQxB,GAAKA,GAAKA,GAAKA,GAAKA,GAAKM,QAmCtDya,EAA0B,EAlCFvZ,GAAQxB,GAAKA,GAAKA,GAAKA,GAAKA,GAAKA,GAAKM,UACtCya,EAA0B,EAC1B2L,EAAM3mB,GAAKC,GAAKA,GAAKA,GAAKA,GAAKA,GAAKM,QAAiB,GACrDqmB,EAAM5mB,GAAKC,GAAKA,GAAKM,KAAc,GACnCsmB,EAAM7mB,GAAKC,GAAKM,IAAa,GAC7BumB,EAAM9mB,GAAKC,GAAKA,GAAKA,GAAKM,MAAe,GACzCzd,EAAMkd,GAAKO,GAAY,GACvBwmB,EAAM/mB,GAAKC,GAAKA,GAAKA,GAAKA,GAAKM,OAAgB,IAG/Cya,EAA0B,EA0B9CA,GACJ,KAAK,EACD,OAAO,IAAIiL,GAAkBS,EAAMjnC,KAAMinC,EAAMvH,eAAgBuH,EAAMtH,IAAKv6B,IAAI,SAACylB,GAAD,MAAe,CAACA,EAAU,GAAIA,EAAU,MAAKjI,GAAQ,CAAC,CAACvf,EAAK,IAAI+7B,GAAK,IAAK,CAACgI,EAAK,IAAIhI,GAAK,IAAK,CAAC+H,EAAK,IAAI/H,GAAK,IAAK,CAACiI,EAAK,IAAIjI,GAAK,IAAK,CAACkI,EAAK,IAAIlI,GAAK,IAAK,CAAC8H,EAAK,IAAI9H,GAAK,OAAQ6H,EAAM/G,cAAe+G,EAAMtmC,MAE9R,KAAK,EACD,OAAOsmC,GA+JZ,SAASkB,GAAmBC,GAC/B,IAAMpd,EX7MH,SAASqd,IACZ,IAAM1I,EAAM1R,GAAa,CAAC,IAAIsR,GAAI,GAAI,IAAIA,GAAI,KACxC+I,EAAiBra,GAAa,CAAC,cAAoB,SAAU,UAAW,QAAS,YAAa,UAAW,WACzGsa,EAAkB,SAACvU,GAErB,OAAa,CACT,IAAM9G,EAAQ8G,EACd,GAAIhS,GAAQkL,GACR,MAAO,GAGP,IAAMpM,EAAa8M,GAAQ,CAAC0a,EAAgB/nB,GAAK2M,IAASiS,IAC1D,GAAkB,MAAdre,EAKA,OAAOmN,GAAanN,GAJpBkT,EAAYxT,GAAK0M,KAU3Bsb,EAAYD,EAAgBrhB,GAAY5jB,EAASq8B,KACvD,GAAkB,KAAd6I,EACA,OAAOH,IAGP,IAAMI,EAAW,SAACzoC,GACd,IAAM0oC,EAAUH,EAAgB3lB,GAAQ,CAAC,OAAD,kBAAoB+c,GAApB,cAAkCA,MAC1E,MAAO,UAAI3/B,EAAJ,YAAY0oC,GAAWC,QAE5B54B,EAAS,SAAC64B,GAAD,MAAY,UAAI3a,GAAa,CAAC,WAAY,QAAS,YAAa,SAAU,aAA9D,YAA8E2a,GAAUD,QAC7GE,EAAQ,SAACC,GAAD,MAAY,UAAIA,EAAJ,aAAe7a,GAAa,CAAC,uBAAwB,yBAA0B,eAAgB,UAAW,iBAAmB0a,QACvJ,MAAO,CAAChJ,EAAK2I,EAAgBra,GAAa,CAACle,EAAQ04B,EAAU,SAACM,GAAD,OAAWF,EAAMJ,EAASM,KAAS,SAAC1D,GAAD,OAAWwD,EAAMJ,EAAS14B,EAAOs1B,OAApGpX,CAA+Gua,IW2K3HH,GACrB,OAAOD,GAAO,SAACY,GAAD,OAAY,IAAIxC,GAAkBxb,EAAa,GAAIA,EAAa,GAAIA,EAAa,GAAI5lB,IAAI,SAAC1D,GAAD,MAAO,CAACA,OAAG,KAASsnC,GAAQA,EAAO,IAAIzC,GAAiB,OAG5J,IAAM0C,GAAb,gCACI,WAAY//B,GAAgB,kBACxB,gBACKA,IAAa,EAANA,EAFY,2BAARjC,EAAQ,iCAARA,EAAQ,yBAGxB,EAAKA,OAASA,EAHU,EADhC,2CAOQ,MAAO,CAAC,iBAAkB,YAAa,kBAAmB,iBAAkB,aAAc,sBAPlG,GAAwC4B,GAWjC,SAASqgC,KACZ,OAAO5vB,GAAW,6BAA8B,GAAI2vB,IAAoB,iBAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,OAGhG,IAAME,GAAb,gCACI,WAAYjgC,GAAgB,kBACxB,gBACKA,IAAa,EAANA,EAFY,2BAARjC,EAAQ,iCAARA,EAAQ,yBAGxB,EAAKA,OAASA,EAHU,EADhC,2CAOQ,MAAO,CAAC,kBAPhB,GAAqC4B,GAe9B,SAASugC,KACZ,OAAOxmB,GAAQ,CAAC,IAAIqmB,GAAmB,GAAI,IAAIA,GAAmB,GAAI,IAAIA,GAAmB,GAAI,IAAIA,GAAmB,GAAI,IAAIA,GAAmB,GAAI,IAAIA,GAAmB,KAG3K,SAASI,GAA6Bpd,GACzC,IAAMpB,EAA2B,IAAdoB,EAAM/iB,IAAa,CAAC,kBAAmB,SAACogC,GAAD,OAAoCA,EA1LhFliB,GAAOlB,IAAM,kBAAMnD,IAAQ,SAACjC,GAAD,OAAgBoG,GAAYnD,GAAII,GAAK,EAAGN,GAAe3D,GAAW,GAAG,SAACqpB,GAAD,OAAgBxb,GAAOia,GAAe,MAAiB,CACjKlkB,QAAS,SAACpiB,EAAGQ,GAAJ,OAAUoE,EAAkB5E,EAAGQ,OACvC,CACDgiB,QAAS,kBAAM,GACfD,IAAK,SAACO,EAAKoiB,GAAN,OAAepiB,EAAMoiB,QACzBpQ,GAAY,EAAG,EAAG,WAqLoG,IAAdvK,EAAM/iB,IAAa,CAAC,uBAAwB,SAACsgC,GAAD,OAjLnJ/R,EAiL6L+R,EAjLxKpiB,GAAOlB,IAAM,kBAAMnD,IAAQ,SAACjC,GAAD,OAAgBoG,GAAY8gB,GAAc,MAAKxR,GAAY,EAAG,EAAG,SAChH,IAAIgQ,GAAkB/O,EAAYz3B,KAAMy3B,EAAYiI,eAAgBjI,EAAYkI,IAAKlI,EAAYgP,YAAahP,EAAYyI,cAAe,IAAIqG,GAAiB,EAAG,EAAG,KAFxK,IACG9O,IAiL0N,IAAdxL,EAAM/iB,IAAa,CAAC,mBAAoB,SAACugC,GAAD,OA5KnPvB,GA4K4RuB,EA5KjQriB,GAAOlB,IAAM,kBAAMnD,IAAQ,SAACjC,GAAD,OAAgBoG,GAAY,EAAInD,GAAI7D,GAAW,GAAG,SAACqpB,GAAD,OAAgBxb,GAAOia,GAAe,MAAiB,CAClK9jB,QAAS,kBAAM,GACfD,IAAK,SAACviB,EAAGQ,GAAJ,OAAWR,EAAIQ,QACnBs0B,GAAY,EAAG,EAAG,YAyKyS,IAAdvK,EAAM/iB,IAAa,CAAC,2BAA4B,SAACwgC,GAAD,OAAqCA,EArKzXtiB,GAAOlB,IAAM,kBAAMnD,IAAQ,SAACjC,GAAD,OAAgBoG,GAAYnD,GAAII,GAAK,EAAGN,GAAe3D,GAAW,GAAG,SAACqpB,GAAD,OAAgBxb,GAAOia,GAAe,MAAiB,CACjKlkB,QAAS,SAACpiB,EAAGQ,GAAJ,OAAUoE,EAAkB5E,EAAGQ,OACvC,CACDgiB,QAAS,kBAAM,GACfD,IAAK,SAACO,EAAKoiB,GAAN,OAAepiB,EAAMoiB,QACzBpQ,GAAY,EAAG,EAAG,WAgK6Y,IAAdvK,EAAM/iB,IAAa,CAAC,oBAAqB,SAACygC,GAAD,OA5JzblS,EA4JkekS,EA5J7cviB,GAAOlB,IAAM,kBAAMnD,IAAQ,SAACjC,GAAD,OAAgBoG,GAAY8gB,GAAc,MAAKxR,GAAY,EAAG,EAAG,UAChH,IAAIgQ,GAAkB/O,EAAYz3B,KAAMy3B,EAAYiI,eAAgBjI,EAAYkI,IAAKlI,EAAYgP,YAAahP,EAAYyI,cAAe,IAAIqG,GAAiB,EAAG,GAAI,KAFzK,IACG9O,IA4J+e,CAAC,eAAgB,SAACmS,GAAD,OAlMngB,SAAoCA,GACvC,OAAO1B,GAAoB0B,EAAOxiB,GAAOlB,IAAM,kBAAMnD,IAAQ,SAACjC,GAAD,OAAgBoG,GAAYnD,GAAI7D,GAAW,GAAG,SAACqpB,GAAD,OAAgBxb,GAAOia,GAAe,MAAiB,CAC9J9jB,QAAS,kBAAM,GACfD,IAAK,SAACviB,EAAGQ,GAAJ,OAAWR,EAAIQ,QACnBs0B,GAAY,EAAG,EAAG,UA8L2fqT,CAA2BD,KAC7iB,OAAO,IAAIT,GAAgB,EAAGte,EAAU,GAAIA,EAAU,IAOnD,SAASif,GAA+B7d,GAC3C,OAAOA,EAAMhlB,OAAO,GAGjB,IAAM8iC,GAAb,gCACI,WAAY9C,EAAO+C,EAAS5B,GAAQ,yBAChC,gBACKnB,MAAQA,EACb,SAAc+C,EACd,EAAK5B,OAASA,EAJkB,EADxC,UAAgCz+B,IAazB,IAAMsgC,GAAb,gCACI,WAAY/gC,GAAgB,kBACxB,gBACKA,IAAa,EAANA,EAFY,2BAARjC,EAAQ,iCAARA,EAAQ,yBAGxB,EAAKA,OAASA,EAHU,EADhC,2CAOQ,MAAO,CAAC,OAAQ,SAAU,SAAU,YAAa,aAAc,qBAPvE,GAA8B4B,GAevB,SAASqhC,GAAUhd,GACtB,MAAO,CAAC,IAAI6c,QAAW,OAAQ,EAAQxpB,GAAK6oB,OAAgCxD,GAAkB,IAAIqE,GAAS,KAGxG,SAASE,GAAYzkB,EAAQkc,EAAKwI,GACrC,OAAQxI,EAAI14B,KACR,KAAK,EACD,MAAO,CAACkhC,EAAO1kB,EAAOkc,EAAI36B,OAAO,KAErC,KAAK,EACD,IAAMojC,EAASlC,GAA0CkB,GAA6Be,EAAMhC,QA7CvFnhC,OAAO,IA8CZ,MAAO,CAAC,IAAI8iC,GAAWM,EAAQrD,GAAoBqD,GAASD,EAAMhC,QAAS7c,MAE/E,KAAK,EACD,MAAO,CAAC,IAAIwe,GAAWK,EAAMnD,MAAOmD,EAAK,OAASxI,EAAI36B,OAAO,IAAKskB,MAEtE,KAAK,EACD,MAAO,CAAC,IAAIwe,GAAWtd,IAAM,SAACwa,GAAD,OAtLlC,SAA4BqD,EAAWC,EAAMtD,GAChD,IAAIR,EAAa3lB,EAAY+W,EAC7B,OAAO,IAAI2O,GAAkBS,EAAMjnC,KAAMinC,EAAMvH,eAAgBuH,EAAMtH,KAAM8G,EAAcpjB,IAAW,SAACplB,EAAGusC,GACpG,IAAIjrC,EAQIg8B,EAPFkP,EAAcD,EACd/pC,EAAQgqC,EAAY,GACpBC,EAAcD,EAAY,GAChC,GAAIxsC,IAAMqsC,EACN,MAAO,CAAC7pC,EAAO8pC,GAef,OAXmB,MAAfG,GACKnrC,EAAImrC,EACLnP,EADkB51B,EAAOshC,EAAMtmC,KAAM,IAAI4lC,GAAiB,KAAO5gC,EAAO4kC,EAAMhrC,GACpD,EAGA,GAI9Bg8B,EAA0B,EAEtBA,GACJ,KAAK,EACD,MAAO,CAAC96B,OAAO,GAEnB,KAAK,EACD,OAAOgqC,KAIpBxD,EAAMR,aAA4D,KAA7C3lB,EAAammB,EAAMtmC,MAAkBuI,KAAe2uB,EAAS,SAAC8S,EAAYzS,EAAIhL,GAClG,GAAKlL,GAAQkL,GA+CT,OAAO3B,KA9CP,GAAI2M,IAAOoS,EACP,OAAO7hC,GAAK8X,GAAK2M,GAAQ2K,EAAM8S,EAAYzS,EAAK,EAAG1X,GAAK0M,KAGxD,IAAI2O,EAA2B+O,EAAqBC,EAAatS,EAqBjE,OApBKvW,GAAQkL,GAkBT2O,EAA4B,EAjBN,MAAlBtb,GAAK2M,GAAO,IACRvnB,EAAO4a,GAAK2M,GAAO,GAAIqd,IACvB1O,EAA4B,EAC5B+O,EAASpqB,GAAK0M,GACA3M,GAAK2M,GAAO,GAC1B2d,EAActqB,GAAK2M,GACnBqL,EAAUhY,GAAK2M,GAAO,IAO1B2O,EAA4B,EAM5BA,GACJ,KAAK,EACD,OAAK8O,EAAapS,GAAYzX,EAAW7Z,OAAO,GACrCwB,GAAKoiC,EAAahT,EAAM8S,EAAapS,EAASL,EAAK,EAAG0S,IAGtDniC,GAAK,CAAC8vB,OAAS,GAASV,EAAM8S,EAAYzS,EAAK,EAAG0S,IAGjE,KAAK,EACD,GAAK5oB,GAAQkL,GAIT,MAAO,IAAItqB,MAAM,iBAHjB,OAAO6F,GAAK8X,GAAK2M,GAAQ2K,EAAM8S,EAAYzS,EAAK,EAAG1X,GAAK0M,QAYtEpM,EAAW7Z,OAAO,GAAKuc,GAAK8mB,EAAW7D,GAAa,GAAI,EAAGA,GAAiBA,GAAeQ,EAAM/G,cAAe+G,EAAMtmC,MAoGhFmqC,CAAmBlJ,EAAI36B,OAAO,GAAI26B,EAAI36B,OAAO,GAAIggC,KAAQmD,EAAMnD,OAAQmD,EAAK,OAASA,EAAMhC,QAAS7c,MAEhJ,KAAK,EACD,MAAO,CAAC,IAAIwe,GAAWtd,IAAM,SAACse,GAAD,OApNJR,EAoNsC3I,EAAI36B,OAAO,GAnN3E,IAAIu/B,IAD4BS,EAoN+C8D,GAnNnD/qC,KAAMinC,EAAMvH,eAAgBuH,EAAMtH,IAAKv6B,IAAI,SAAC8nB,GAC3E,IAAIqO,EAAyByP,EAc7B,OAbgB,MAAZ9d,EAAM,IACFvnB,EAAOunB,EAAM,GAAIqd,IACjBhP,EAA0B,EAC1ByP,EAAO9d,EAAM,GACCA,EAAM,IAOxBqO,EAA0B,EAEtBA,GACJ,KAAK,EACD,MAAO,CAACyP,OAAM,GAElB,KAAK,EACD,OAAO9d,KAGhB+Z,EAAMR,aAAcQ,EAAM/G,cAAe+G,EAAMtmC,MAxB/C,IAA8B4pC,EAAMtD,IAoNyDmD,EAAMnD,OAAQmD,EAAK,OAASA,EAAMhC,QAAS7c,MAEvI,QACI,MAAO,CAAC6e,EAAO1kB,OAAO,KAK3B,IACGulB,GACAC,GHpZqCnF,GAAQoF,GAAaC,GAAaC,GAASC,GAA0CC,GGkZvHC,IACHP,GAA2B7jB,GAAOlB,IAAM,kBAAMnD,IAAQ,SAACrhB,GAAD,OAAOqhB,IAAQ,SAAC7gB,GAAD,OAAOupC,IAAM,SAACjZ,GAAD,OAAS9wB,EAAIQ,EAAKswB,IAAIgE,GAAY,EAAG,EAAG,MAAKA,GAAY,EAAG,EAAG,MAAKA,GAAY,EAAG,EAAG,QACxK0U,GAAsB,IAAIpK,IAAI1Z,GAAOlB,IAAM,kBAAMnD,IAAQ,SAACyB,GAAD,OAAS0C,GAAY,CAAC1C,EAAKrmB,GAAO2pB,IAAO,SAACyiB,GAAD,OAAWA,GAAQ/lB,IAAMymB,KAA6B9iB,GAAS8iB,QAA6BzU,GAAY,EAAG,EAAG,UAC/M,SAACkV,GAAD,OAAejT,GAAgByS,GAAqBQ,KAGlDC,IHxZkC5F,GGwZS,SAAC79B,GACrD,IAAMkiC,EAAQliC,EAAIkiC,MACZpF,EAAW98B,EAAI88B,SAMf4G,GALatqC,OAAOuqC,WACV1F,QAAqB,GACrBA,QAAqB,GACnBA,QAAqB,GAEpB,SAACt+B,EAAGikC,EAAWC,GAAf,OAA4BlkC,EAAE+a,GAAQ,CAAC,CAAC,YAAakpB,GAAY,CAAC,WAAY5F,GAAiB8F,SAAS9pB,QAAQvgB,MAAMyd,KAAK2sB,UAC1IE,OAAa,EACjB,OAAOL,GAAW,SAACM,GAAD,OAAWC,yBAAc,MAAOnlC,EAAUklC,MAAS,UAAW9kB,GAAOlB,IAAM,kBAAMrD,GAAOqE,GAAY0kB,GAAW,SAACQ,GAAD,OAAaD,yBAAc,MAAOnlC,EAAUolC,MAAW,QAASrqB,GAAU,yBAA0BmE,IAAM,WACvO,IAAIpF,EAAY6E,EAAcshB,EAAOoF,EAC/BC,EAAkB,SAAC/B,EAAM3/B,GAC3BqhC,EAAa1B,EACb3/B,EAAE2hC,kBAEAC,EAAmB,SAAC3kB,GACtBA,EAAI0kB,kBAEF7B,EAAc,SAAC+B,EAAQf,GACzB,GAAiB,MAAbA,EACA,OAAOS,yBAAc,OAAQ,CACzBJ,SAAU,GAAF,OAAKU,EAAL,SACRC,WAAYrkC,EAAa,EAAGikC,EAAiB,CAACG,IAC9CE,YAAaH,IAIjB,IAAMI,EAAcC,GAASnB,GAC7B,OAAOS,yBAAc,OAAQ,CACzBJ,SAAU,GAAF,OAAKU,EAAL,YAAeG,GACvBF,WAAYrkC,EAAa,EAAGikC,EAAiB,CAACG,IAC9CE,YAAaH,EACbM,QAAS,SAAC5f,GACN8X,EAAS,IAAIiF,GAAS,EAAGwC,QAKnCM,EAAW,SAACC,EAAQC,GACtB,IAAMC,EAAuB,IAAfF,EAAO9jC,IAAa,SAA4B,IAAf8jC,EAAO9jC,IAAa,UAA6B,IAAf8jC,EAAO9jC,IAAa,UAA6B,IAAf8jC,EAAO9jC,IAAa,QAA2B,IAAf8jC,EAAO9jC,IAAa,mBAAqB,WAC5L,OAAO88B,iBAAoBA,YAAgB,GAAI0E,EAAYsC,EAAQC,GAAcd,yBAAc,OAAQ,CACnGJ,SAAUxtB,GAAOH,GAAY,oCAAqC,CAAC8uB,EAAwC,IAAlC1B,GAAmByB,MAC5FP,WAAYrkC,EAAa,EAAGikC,EAAiB,CAACU,IAC9CL,YAAaH,MAGrB,OAAO3pB,GAAkD,OAA1C/B,EAAaspB,EAAK,QAA+E,OAA7CzkB,EAAeykB,EAAMnD,OAAkC3O,KAAsCpR,GAAY0kB,GAAW,SAACuB,GAAD,OAAahB,yBAAc,MAAOnlC,EAAUmmC,MAAW,SAAUvqB,GAAQ,CAACgpB,GAAW,SAACwB,GAAD,OAAajB,yBAAc,MAAOnlC,EAAUomC,MAAW,kBAAmBrrB,GAAU,GAAD,QAArNklB,EAAQthB,GAAuN3lB,KAAV,iBAAuBinC,EAAMvH,eAA7B,aAAgDuH,EAAMtH,IAAtD,OAAgEiM,GAAW,SAACyB,GAAD,OAAalB,yBAAc,MAAOnlC,EAAUqmC,MAAW,gBAAiBjmB,GAAOlB,IAAM,WAC3f,IAAMonB,EAAc3G,GAAuBM,EAAMR,aACjD,OAAO1jB,IAAQ,SAACwqB,GACZ,IAASloC,EACL0kB,EACED,EAAe,CAAC8D,GAAQ2f,EAAQD,GAAcrG,EAAMtmC,MAE1D,OAAwB,OADxBopB,EAAoC,MAAnBD,EAAa,GAAwC,IAAxBA,EAAa,GAAG5gB,IAAwC,EAAlB4gB,EAAa,IAAmBzkB,EAAuB,EAAlBykB,EAAa,GAASA,EAAa,GAAG7iB,OAAO,GAAK5B,GAAiC,IAAxBykB,EAAa,GAAG5gB,SAAc,EAAU4gB,EAAa,GAAG7iB,OAAO,IACnN4b,GAAOqE,GAAYwjB,EAAY6C,OAAQ,IAAUrnB,IAAM,kBAAMgB,GAAYilB,yBAAc,OAAQ,SAASjlB,GAAY6lB,EAASQ,EAAQxjB,MX5d1KnH,GAAQ,CAAC,IAAIwc,GAAK,GAAI,IAAIA,GAAK,GAAI,IAAIA,GAAK,GAAI,IAAIA,GAAK,GAAI,IAAIA,GAAK,GAAI,IAAIA,GAAK,WW8dhFwM,GAAW,SAAC4B,GAAD,OAAarB,yBAAc,MAAOnlC,EAAUwmC,MAAW,YAAapmB,GAAOlB,IAAM,kBAAMrD,GAAOqE,GAAYilB,yBAAc,OAAQ,CAC7IJ,SAAU,gCACT7lB,IAAM,kBAAMnD,IAAQ,SAAC6Y,GAAD,OAA0C,MAAtBA,EAAa,GAAG,GAAc1U,GAAYilB,yBAAc,OAAQ,CACzGsB,WAAW,EACX3B,UAAW,UACT5kB,GAAYilB,yBAAc,OAAQ,CACpCL,UAAW,OACXC,SAAU7F,GAAiB8F,SAAS9pB,QAAQ,CAACiqB,yBAAc,OAAQ,CAC/DJ,SAAUnQ,EAAa,GAAG,GAC1B6R,WAAW,EACXC,UAAW,SAACC,GACU,MAAd1B,GAGAjH,EAAS,IAAIiF,GAAS,EAAGrO,EAAa,GAAIqQ,KAGlD2B,YAAa,SAACC,GACVA,EAAIC,aAAaC,QAAQ,YAAa,mBAG5C1qB,IAAW,SAAC3hB,EAAGQ,GAAJ,OAAU8rB,GAAOtsB,EAAGQ,KAAI+kC,EAAMR,2BAAkDvf,GAAY0kB,GAAW,SAACoC,GAAD,OAAa7B,yBAAc,MAAOnlC,EAAUgnC,MAAW,SAAUprB,GAAQ,CAACgpB,GAAW,SAACqC,GAAD,OAAa9B,yBAAc,MAAOnlC,EAAUinC,MAAW,kBAAmBlsB,IAAzMsqB,EAAOvrB,GAAiN9gB,OAAQ4rC,GAAW,SAACsC,GAAD,OAAa/B,yBAAc,MAAOnlC,EAAUknC,MAAW,gBAAiBtrB,GAAQ,CAACmqB,EAAS,IAAI3N,GAAK,GAAIiN,EAAKzM,KAAMmN,EAAS,IAAI3N,GAAK,GAAIiN,EAAKxM,KAAMkN,EAAS,IAAI3N,GAAK,GAAIiN,EAAKvM,KAAMiN,EAAS,IAAI3N,GAAK,GAAIiN,EAAKtM,KAAMgN,EAAS,IAAI3N,GAAK,GAAIiN,EAAKrM,KAAM+M,EAAS,IAAI3N,GAAK,GAAIiN,EAAKpM,YAAgB/Z,IAAM,kBAAMgB,GAAY0kB,GAAW,SAACuC,GAAD,OAAahC,yBAAc,MAAOnlC,EAAUmnC,MAAW,SAAU/mB,GAAOlB,IAAM,kBAAMrD,GAAOqE,GAAYilB,yBAAc,SAAU,CACxvBJ,SAAU,SACVe,QAAS,SAACsB,GACNpJ,EAAS,IAAIiF,GAAS,QAEzB/jB,IAAM,kBAAMnD,IAAQ,SAACqZ,GAAiB,MACnCiS,EACEjG,EAAShM,EAAa,GAC5B,OAAOlV,IAAamnB,EAAazrB,GAAQ,CAACupB,yBAAc,SAAD,GACnDmC,KAAM,SAD6C,KAElD,eAAiB3oC,EAAOykC,EAAMhC,OAAQA,IAFY,eAG1CziC,EAAOykC,EAAMhC,OAAQA,IAHqB,UAI/C0B,GAA+BT,GAA6BjB,KAJb,gBAK1C,SAACmG,GACNvJ,EAAS,IAAIiF,GAAS,EAAG7B,OANsB,iBAQzC,GARyC,IASnD+D,yBAAc,QAAS,CACvBqC,QAAS1E,GAA+BT,GAA6BjB,IACrE2D,SAAUjC,GAA+BT,GAA6BjB,QACpE+D,yBAAc,MAAO,CACvBJ,SAAU7F,GAAiB8F,SAAS9pB,QAAQvgB,MAAMyd,KAAKivB,UAE5DhrB,IAAW,SAACplB,EAAGumB,GAAJ,MAAY,CAACvmB,EAAGumB,KAAM4kB,+BH5fW+B,QG8fpD,EH9fiEC,GG8fzD,SAACqD,EAAK7H,GAAN,OJ3hBJ,SAAoCllC,EAAGQ,GAC1C,GAAIR,IAAMQ,EACN,OAAO,EAEN,GAAkB,WAAb,GAAOR,IAAmBA,EAAEnB,OAAOwC,WAAsB,MAALb,EAc1D,OAAOyD,EAAOjE,EAAGQ,GATjB,IAJA,IAAM8D,EAAO5H,OAAO4H,KAAKtE,GACnBvD,EAAuB,EAAd6H,EAAK7H,OAChBF,EAAI,EACJe,GAAS,EACLf,EAAIE,GAAWa,GAAQ,CAC3B,IAAM+B,EAAMiF,EAAK/H,GACjBA,EAAMA,EAAI,EAAK,EACf,IAAMywC,EAAShtC,EAAEX,GACjB/B,EAA6B,mBAAX0vC,GAAgC/oC,EAAO+oC,EAAQxsC,EAAEnB,IAEvE,OAAO/B,EI4gBU2vC,CAA2BF,EAAK7H,IH9fwByE,QG8flB,EH9f2BC,GG8fnB,OH9f6DC,GG8fQ,IHlhBrI,SAAkCxqC,EAAK6tC,GAC1C,GAAI3I,GAAMh0B,MAAMhO,IAAIlD,GAChB,OAAOklC,GAAMh0B,MAAM5R,IAAIU,GAGvB,IAAMsE,EAAIupC,EAAa7tC,GAEvB,OADAklC,GAAMh0B,MAAM/N,IAAInD,EAAKye,GAAKna,IACnBA,EAcJwpC,CAA0BppB,GG6f0C,6DH7fX,KAAQ5hB,EAAc4hB,GAAQ8lB,MAAuB,SAACre,GAClH,IAEI3U,EAFEu2B,EAAgBrvB,GAAW0rB,GAAa1lB,GAAQ6lB,KAGtD,GAFAvF,GAAOoF,YAAc2D,EAEQ,MAAzB1mC,EAAM,EAAGgjC,IACT7yB,EAAWwtB,OAEV,CACD,IAAMgJ,EAAclJ,GAAgCuF,GAAarF,IACjEgJ,EAAY5D,YAAgB,QAAU2D,EAAiB,IACvDv2B,EAAWw2B,EAEf,OAAO,SAACC,GACJ,IAAIzc,EACJ,OAAOyT,iBAAoBztB,GAAsB,MAAX8yB,KAA6B9Y,EAAM8Y,GAAU2D,EAAMjuC,IAAMwxB,EAAIyc,IAA1CA,S,qzCIlD9D,IAAMC,GAAb,a,mOAAA,U,MAAA,QACI,WAAY/lC,GAAgB,kBACxB,gBACKA,IAAa,EAANA,EAFY,2BAARjC,EAAQ,iCAARA,EAAQ,yBAGxB,EAAKA,OAASA,EAHU,EADhC,O,EAAA,G,EAAA,+BAOQ,MAAO,CAAC,WAAY,qB,6BAP5B,GAAiC4B,GAe1B,IAAMqmC,GACT,WAAY/7B,GAAM,WACd5Q,KAAK8f,MAAS,IAAI4sB,GAAY,EAAGnvB,GAAK,IAAIne,MAAMmF,GAAI,SAACpF,EAAGQ,GAAJ,OAAUoE,EAAkB5E,EAAGQ,KAAIiR,EAAM,KAAM,EAAGrM,GAAI,SAACpF,EAAGQ,GAAJ,OAAUoE,EAAkB5E,EAAGQ,KAAIiR,EAAM,IAAK,MAAO,IAgChK,SAASg8B,GAAyBC,EAAI5rB,GACzC,IAAM1C,EAAasuB,EAAG/sB,MACtB,GAAuB,IAAnBvB,EAAW5X,IAAW,CACtB,IAAMmmC,EAA+B,EAAvBvuB,EAAW7Z,OAAO,GAC1BqoC,EAA6B,EAAvBxuB,EAAW7Z,OAAO,GACxBsoC,EAAUzuB,EAAW7Z,OAAO,GAClCsoC,EAAQF,GAAS7rB,EACjB,IAAMgsB,GAAaH,EAAQ,GAAKE,EAAQpxC,OAAU,EAE9CixC,EAAG/sB,MADHmtB,IAAaF,EACD,IAAIL,GAAY,EAexC,SAAkChjB,EAAOiM,EAAIuX,GACzC,OAAO9tC,MAAMyd,KAAK8G,IAAM,kBAAMrD,GAAOuF,GAAK8P,EAAIuX,GAAQvpB,IAAM,kBAAMrD,IzB8mCjD1e,EyB9mC6D+zB,EzB8mCtD/Y,EyB9mC0DswB,EzB+mC3E/nB,IAAgB,kBAAMzB,GAAM9G,MAAK,SAAClhB,EAAG2M,GACxC,GAAI3M,EAAIkG,EAAO,CACX,GAAIyG,EAAE,6CACF,OAAO4U,GAAK5U,EAAE,2DAGd,MAAO,IAAIhI,MAAOyd,oCAM3B,SAACwH,GACAA,EAAIhD,cyB5nCkFqB,IAAM,kBAAMnD,IAAQ,SAACjC,GAAD,OAAgBiB,GAAU,QAAOyU,GAAY,EAAG,EAAGiZ,EAAMtxC,azB8mCpK,IAAcgG,EAAOgb,UyB9nCeuwB,CAAyBN,EAAIE,EAAKC,GAAUA,EAAQpxC,OAAQ,GAG/E,IAAI8wC,GAAY,EAAGM,EAASC,EAAUF,OAGrD,CACD,IAAMpX,EAA4B,EAAvBpX,EAAW7Z,OAAO,GACvBwoC,EAAQ3uB,EAAW7Z,OAAO,GAChCwoC,EAAMvX,GAAM1U,EACZ,IAAMmsB,GAAQzX,EAAK,GAAKuX,EAAMtxC,OAAU,EACxCixC,EAAG/sB,MAAS,IAAI4sB,GAAY,EAAGQ,EAAOE,EAAKzX,I,+iCCnE5C,IAAM0X,GAAb,a,mOAAA,kBACI,WAAYC,EAAMC,EAAQC,EAAWC,EAAMC,EAAU3M,EAAS4M,GAAc,a,4FAAA,UACxE,gBACKL,KAAOA,EACZ,EAAKC,OAASA,EACd,EAAKC,UAAYA,EACjB,EAAKC,KAAOA,EACZ,EAAKC,SAAWA,EAChB,EAAK3M,QAAUA,EACf,EAAK4M,aAAeA,EARoD,EADhF,UAA+BvmC,IAyExB,SAASwmC,GAA2BF,EAAUG,GACjD,OAAO,IAAIR,GAAUQ,EAAQP,KAAMO,EAAQN,OAAQM,EAAQL,UAAWK,EAAQJ,KAAMC,EAAUG,EAAQ9M,QAAS8M,EAAQF,cAOpH,SAASG,GAAmBD,GAC/B,OAAOhoC,EAAM,EAAGgoC,EAAQJ,MAerB,SAASM,GAAsBpoC,EAAKkoC,GACvC,IAAMplB,EAAeolB,EAAQP,KAAK3nC,GAC5BkiC,EAAQpf,EAAa,GACrBulB,ED5EC,IAAIrB,GC4E6B,IACpCsB,GAAY,EACZnuB,EAAQ+nB,EA2BN8F,EAAe7nC,EAAa,EAAG+nC,EAAQF,aAAc,CA1B1C,SAACtO,GACd,GAAI4O,EACArB,GAAyBoB,EAAI3O,OAE5B,CACD4O,GAAY,EAEZ,IADA,IAAIC,EAAUjxB,GAAKoiB,GAFlB,aAIG,IAAM8O,EAAQjrB,GAAQgrB,GACtB,IACI,IAAMre,EAAiBge,EAAQN,OAAOY,EAAOruB,GACvCsuB,EAAave,EAAe,GAClCge,EAAQH,SAASU,EAAYT,GAC7BnL,IAAS,SAACpB,GACNyM,EAAQ9M,QAAQ,CAAC/kB,GAAOtB,GAAO,uCAAdsB,CAAsDmyB,GAAQ/M,MAChFuM,EAAc9d,EAAe,IAChC/P,EAAQsuB,EAEZ,MAAOC,GACHR,EAAQ9M,QAAQ,CAAC/kB,GAAOtB,GAAO,qCAAdsB,CAAoDmyB,GAAQE,IAEjFH,EDjGT,SAA2BrB,GAC9B,IAAMtuB,EAAasuB,EAAG/sB,MACtB,GAAuB,IAAnBvB,EAAW5X,IAAW,CACtB,IAAMymC,EAA6B,EAAvB7uB,EAAW7Z,OAAO,GACxBqoC,EAA6B,EAAvBxuB,EAAW7Z,OAAO,GACxBwoC,EAAQ3uB,EAAW7Z,OAAO,GAC1B4pC,GAAavB,EAAM,GAAKG,EAAMtxC,OAAU,EAO9C,OALIixC,EAAG/sB,MADHwuB,IAAalB,EACD,IAAIV,GAAY,EAAGQ,EAAOE,GAG1B,IAAIV,GAAY,EAAGQ,EAAOE,EAAKkB,GAExCrxB,GAAKiwB,EAAMH,KCoFAwB,CAAkBP,IAdd,MAAXE,GAAiB,IAgBxBD,GAAY,MAIpBJ,EAAQH,SAAS7F,EAAO8F,GACxBnL,IAAS,SAACgM,GACNX,EAAQ9M,QAAQ,CAAC,uBAAwByN,MAC1Cb,EAAc5K,GAAU1iB,GAAQ,CAAE,WACjC,IACI,OAAOwtB,EAAQL,UAAU3F,GAE7B,MAAO4G,GAEH,OADAZ,EAAQ9M,QAAQ,CAAC,uBAAwB0N,IAClC9L,MANsB,GAQ/Bla,EAAa,O,qzCCjJhB,IAAMimB,GAAb,a,mOAAA,U,MAAA,QACI,WAAY/nC,GAAgB,kBACxB,gBACKA,IAAa,EAANA,EAFY,2BAARjC,EAAQ,iCAARA,EAAQ,yBAGxB,EAAKA,OAASA,EAHU,EADhC,O,EAAA,G,EAAA,+BAOQ,MAAO,CAAC,SAAU,gB,6BAP1B,GAAiC4B,GAkCjC,IAAIqoC,GAAqC,SAAChkB,GACtC,MAAO,IAAItqB,MAAM,oHAyDd,SAASuuC,GAAuCC,EAAQC,EAAWjB,EAASkB,GAC/E,IAAMlsC,EAAM,SAACylB,GAAD,MAAe,CAACA,EAAU,GAAIsa,IAAQ,SAACoM,GAAD,OAAW,IAAIN,GAAY,EAAGM,KAAQ1mB,EAAU,MAClG,ODDG,SAA2B2mB,EAASC,EAAWC,EAASC,EAAaC,EAAcxB,GACtF,IAAMP,EAAOxnC,EAAa,EAAGmpC,EAAS,CAACpB,EAAQP,OACzCC,EAASznC,EAAa,EAAGopC,EAAW,CAACrB,EAAQN,SAC7CE,EAAO3nC,EAAa,EAAGqpC,EAAS,CAACtB,EAAQJ,OACzCC,EAAW5nC,EAAa,EAAGspC,EAAa,CAACvB,EAAQH,WACvD,OAAO,IAAIL,GAAUC,EAAMloC,EAAQ,EAAGmoC,GAASznC,EAAa,EAAGupC,EAAc,CAACxB,EAAQL,YAAapoC,EAAQ,EAAGqoC,GAAOroC,EAAQ,EAAGsoC,GAAWG,EAAQ9M,QAAS37B,EAAQ,GAAG,SAACjG,GAAD,OAAOA,MCJvKmwC,EAAkB,SAACC,EAAUC,GAAX,OAAwB3sC,EAAI0sC,EAASV,EAAO9vC,OAAO0wC,eAAa,SAACC,EAAYrQ,EAAKsQ,GAAlB,OAA8B9sC,EAAiB,IAAZw8B,EAAI14B,IAAa+oC,EAAWrQ,EAAI36B,OAAO,GAAIirC,GAAWb,EAAUD,EAAOxP,EAAI36B,OAAO,IAAKirC,OAAW,SAACC,EAAUC,EAASC,GAApB,OAAmCF,EAASC,GAAS,SAAC/M,GAAD,OAAWgN,EAAW,IAAIpB,GAAY,EAAG5L,UAAU,SAACiN,EAAcC,EAASvN,GAAxB,OAAqCsN,EAAaC,GAAS,SAACrqC,GAAD,OAAS88B,EAAS,IAAIiM,GAAY,EAAG/oC,UAAQ,SAACsqC,EAAeC,GAAhB,OAA4BnN,GAAU1iB,GAAQ,CAACb,GAAUuvB,GAAmBnM,IAAQ,SAACuN,GAAD,OAAa,IAAIzB,GAAY,EAAGyB,KAAUF,EAAcC,SAAcrC,G,2hDCzFrkB,IAAMuC,GAAb,wB,MAAA,QACI,WAAYzpC,GAAgB,kBACxB,gBACKA,IAAa,EAANA,EAFY,2BAARjC,EAAQ,iCAARA,EAAQ,yBAGxB,EAAKA,OAASA,EAHU,EADhC,O,EAAA,G,EAAA,+BAOQ,MAAO,CAAC,UAAW,a,6BAP3B,GAAiC4B,GAe1B,IAAM+pC,GAAb,gCACI,WAAY11B,EAAO21B,EAAQC,EAASC,GAAiB,yBACjD,gBACK71B,MAAQA,EACb,EAAK21B,OAASA,EACd,EAAKC,QAAUA,EACf,EAAKC,gBAAkBA,EAL0B,EADzD,UAA+BppC,IAcxB,SAASqpC,GAAyB91B,EAAO61B,GAC5C,MAAO,CAAC,IAAIH,GAAU11B,EAAO,IAAItT,InBssDf7C,EmBtsD+B,CAC7C+c,QAAS,SAACpiB,EAAGQ,GAAJ,OAAUqE,EAAc7E,EAAGQ,KnBssDjCi8B,GAAgBp3B,KmBrsDlB,IAAI6C,GAAU2hB,MAAYwnB,GAAkB,GnBosD9C,IAAehsC,EmBpqDf,IACC9I,GADKg1C,IACLh1C,GAAI,EACD,WAEH,OAAW,GADXA,GAAMA,GAAI,EAAK,KAKhB,SAASi1C,GAAKC,GACjB,IAAM7tC,EAAgB,EAAX2tC,KACX,OAAO,SAAC/1B,GACJ,IAAMk2B,EAAiB,EAAXl2B,EAAM,GACZ4lB,EAAM5lB,EAAM,GAEZnc,GADc+hC,EAAI+P,OAAOhiC,SACnB,CAACuiC,EAAK9tC,IAClBw9B,EAAI+P,OAAOhiC,SAAWwtB,GAAkByE,EAAI+P,OAAOhiC,SAAU9P,GAC7D,IAAM+f,EAAa4M,GAAmBoV,EAAIgQ,QAAQjiC,SAAU9P,GAC5D,GAAkB,MAAd+f,EAAoB,CACpB,IAAMgyB,EAAUhQ,EAAIgQ,QAAQjiC,SACtBgiC,EAAS/P,EAAI+P,OAAOhiC,SAC1BiyB,EAAI+P,OAAOhiC,SAAWutB,GAAeyU,EAAQ9xC,GAC7C+hC,EAAIgQ,QAAQjiC,SAAW0c,GAAeulB,EAAS/xC,EAAK,IAAI4xC,GAAY,IACpE,IAAMU,EAAaF,EAAK,CAACrQ,EAAKsQ,IACxBE,GAAoBtV,GAAoB8E,EAAI+P,OAAOhiC,SAAU9P,GACnE+hC,EAAI+P,OAAOhiC,SAAWwtB,GAAkByE,EAAI+P,OAAOhiC,SAAU9P,GAC7D,IAAMwyC,EAAS,SAACC,EAAMC,GAClB,IA6DM3pB,EA7DO,SAAC4pB,EAAYC,GAEtBC,EACA,OAAa,CACT,IAAMC,EAASH,EAAYI,EAAYH,EACvC7Q,EAAIgQ,QAAQjiC,SAAWijC,EACvB,IAAMnuB,EAAe,CAACkuB,EAAQV,EAAK,CAACrQ,EAAKsQ,KACrC7X,OAAuB,EAAEwY,OAAQ,EAAEC,OAAG,EAAEC,OAAQ,EAAuBC,OAAG,EA0B9E,OAzBuB,MAAnBvuB,EAAa,GACU,MAAnBA,EAAa,IACFA,EAAa,GAAG,GAAYA,EAAa,GAAIA,EAAa,GAAG,GAAG,GAAKA,EAAa,GAAG,IAC5F4V,EAA0B,EAC1B0Y,EAAWtuB,EAAa,GAAG,GAAG,GAChBA,EAAa,GAAG,GACrBA,EAAa,GACtBuuB,EAAMvuB,EAAa,GAAG,IAGtB4V,EAA0B,GAI9BA,EAA0B,EAGN,MAAnB5V,EAAa,IAClB4V,EAA0B,EAC1BwY,EAAWpuB,EAAa,GAAG,GAAG,GAC9BquB,EAAMruB,EAAa,GAAG,IAGtB4V,EAA0B,EAEtBA,GACJ,KAAK,EACDmY,EAAa,CAACM,EAAKD,GACnBJ,EAAgBnlC,GAAIzN,EAAK,IAAI4xC,GAAY,EAAGqB,EAAKD,GAAWD,GAC5D,SAASF,EAEb,KAAK,EACDF,EAAa,CAACQ,EAAKD,GACnBN,EAAgBnlC,GAAIzN,EAAK,IAAI4xC,GAAY,EAAGuB,EAAKD,GAAWH,GAC5D,SAASF,EAEb,KAAK,EACD,GAAuB,MAAnBjuB,EAAa,GAAY,CACzB,GAAuB,MAAnBA,EAAa,GACb,OAGA,MAAO,IAAI/iB,MAAM,uDAIrB,MAAO,CAAC+iB,EAAa,GAAG,GAAIA,EAAa,GAAG,IAIxD,OAGaiuB,CAAKJ,EAAMC,GAChC,GAAoB,MAAhB3pB,EAAJ,CAKI,IAAMqqB,EAAMrqB,EAAa,GACnBsqB,EAA6B,EAAlBtqB,EAAa,GAE9B,OADAgZ,EAAIgQ,QAAQjiC,SAAWrC,GAAIzN,EAAK,IAAI4xC,GAAY,EAAGwB,EAAKC,GAAWX,GAC5D,CAACU,EAAK,CAACrR,EAAKsR,IAPnBtR,EAAIgQ,QAAQjiC,SAAWrC,GAAIzN,EAAK,IAAI4xC,GAAY,GAAIc,IAU5D,GAAkB,MAAdJ,EAAoB,CACpB,IAAMgB,EAAMhB,EAAW,GACjBiB,EAASjB,EAAW,GACpBkB,EAA4B,EAAnBlB,EAAW,GAAG,GACvBmB,EAAQnB,EAAW,GAAG,GAC5B,OAAIC,EACOC,EAAO,CAACc,EAAKE,GAAS/lC,GAAIzN,EAAK,IAAI4xC,GAAY,EAAG0B,EAAKE,GAASzB,KAGvE0B,EAAM1B,QAAQjiC,SAAWrC,GAAIzN,EAAK,IAAI4xC,GAAY,EAAG0B,EAAKE,GAASC,EAAM1B,QAAQjiC,UAC1E,CAACwjC,EAAKC,IAGhB,OAAIhB,EACEC,OAAO,EAAQ/kC,GAAIzN,EAAK,IAAI4xC,GAAY,GAAIG,SAGnDhQ,EAAIgQ,QAAQjiC,SAAWrC,GAAIzN,EAAK,IAAI4xC,GAAY,GAAI7P,EAAIgQ,QAAQjiC,WAInE,GAAuB,IAAnBiQ,EAAW5X,IAAf,CAID,IAAMurC,EAAgC,EAAvB3zB,EAAW7Z,OAAO,GAEjC,MAAO,CADG6Z,EAAW7Z,OAAO,GACjB,CAAC67B,EAAK2R,MAWtB,SAASC,GAAoBC,EAASC,GACzC,IAAM1nB,EAAQ,CAACynB,EAASC,GACxB,OAAI1nB,EAAM,KAAOA,EAAM,GAAGhQ,MAAM/e,OACrBqhB,QAAK,QAGZ,EAID,SAASq1B,GAAoBxxC,EAAKsxC,EAASC,GAC9C,IAAM1nB,EAAQ,CAACynB,EAASC,GAClB1c,EAAgB,EAAXhL,EAAM,GACX4V,EAAM5V,EAAM,GAClB,OAAMgL,EAAK70B,EAAIlF,QAAW2kC,EAAI5lB,MAAM/e,QAAsE,IAA1DuI,GAAQ8E,GAAUs3B,EAAI5lB,MAAOgb,EAAI70B,EAAIlF,QAASkF,EAAK,GACxF,CAACy/B,EAAK5K,EAAK70B,EAAIlF,aAGtB,EAwCD,IAAM22C,GAAQxW,GAAsBrY,GAAMmB,GAAOqP,GAAU,IAAK,MAAO,CAC1E3S,QAAS,SAACpiB,EAAGQ,GAAJ,OAAUoE,EAAkB5E,EAAGQ,MACxC+jB,GAAMmB,GAAOqP,GAAU,IAAK,MAAO,CACnC3S,QAAS,SAACU,EAAKoiB,GAAN,OAActgC,EAAkBke,EAAKoiB,OAGrCmO,GAAU9uB,GAAMmB,GAAOqP,GAAU,IAAK,MAAO,CACtD3S,QAAS,SAACpiB,EAAGQ,GAAJ,OAAUoE,EAAkB5E,EAAGQ,MAG/B8yC,GAAa/uB,GAAM,CAAC,IAAK,KAAM,KAAM,MAAO,CACrDnC,QAAS,SAACpiB,EAAGQ,GAAJ,OAAUoE,EAAkB5E,EAAGQ,MAG/B+yC,GAAe3W,GAAsBwW,GAAOC,IAE1BzW,GAAsBwW,GAAOE,IAcrD,SAASE,GAAsBC,EAAUR,EAASC,GACrD,IAAM1nB,EAAQ,CAACynB,EAASC,GAClB1c,EAAgB,EAAXhL,EAAM,GACX4V,EAAM5V,EAAM,GAeZpM,EAAwB,EAdjB,SAACG,GAEV,OAAa,CACT,IAAMhjB,EAAIgjB,EACV,KAAKhjB,EAAI6kC,EAAI5lB,MAAM/e,QAAWugC,GAASoE,EAAI5lB,MAAMjf,GAAIk3C,IAKjD,OAAW,EAAJl3C,EAJPgjB,EAAShjB,EAAI,GASNm3C,CAAKld,GACxB,GAAIpX,EAAaoX,EAAI,CACjB,IAAMmd,EAAwB,EAAbv0B,EACjB,MAAO,CAACtV,GAAUs3B,EAAI5lB,MAAOgb,EAAImd,EAAWnd,GAAK,CAAC4K,EAAKuS,KA2FxD,SAASC,GAAcX,EAASC,GACnC,IAAM1nB,EAAQ,CAACynB,EAASC,GAClB9R,EAAM5V,EAAM,GAelB,MAAO,CAAC4V,EAdK,SAAC7hB,GAEV,OAAa,CACT,IAAMhjB,EAAIgjB,EACV,KAAKhjB,EAAI6kC,EAAI5lB,MAAM/e,QAAWugC,GAASoE,EAAI5lB,MAAMjf,GAAI+2C,KAKjD,OAAW,EAAJ/2C,EAJPgjB,EAAShjB,EAAI,GASZm3C,CAAKloB,EAAM,KA2CmBgmB,IAAK,SAAChmB,GACjD,IAAMqoB,EAA2BL,GAAsBH,GAAS7nB,EAAM,GAAIA,EAAM,IAChF,GAAgC,MAA5BqoB,EAAkC,CAClC,IAEIz0B,EAFE0K,EAAO+pB,EAAyB,GAChClwC,EAAIkwC,EAAyB,GAE/B7T,EAAS,EAIb,OAHA5gB,EAAa,CAACnQ,GAAStL,EAAG,KAAK,EAAO,GAAI,IAAIuE,IAAU,kBAAM83B,KAAQ,SAAC8T,GACnE9T,EAAgB,EAAN8T,MACT9T,IACa,GAAK,CAAC5gB,EAAW,GAAI0K,QAAS,MAOrB0nB,IAAK,SAAChmB,GACrC,IAAMuoB,EAA2BH,GAAcpoB,EAAM,GAAIA,EAAM,IACzDwoB,EAA2BR,GAAsBH,GAASU,EAAyB,GAAIA,EAAyB,IACtH,GAAgC,MAA5BC,EAAkC,CAClC,IAAIC,EACE9qB,EAAY6qB,EAAyB,GAC3CC,EAA2BL,GAAczqB,EAAU,GAAIA,EAAU,IACjE,IACI/J,EADEzb,EAAIqwC,EAAyB,GAE/BhU,EAAS,EAIb,OAHA5gB,EAAa,CAACnQ,GAAStL,EAAG,KAAK,EAAO,GAAI,IAAIuE,IAAU,kBAAM83B,KAAQ,SAAC8T,GACnE9T,EAAgB,EAAN8T,MACT9T,IACa,GAAK,CAAC5gB,EAAW,GAAI60B,QAA6B,MA9BrE,IAqCMC,GAAuB1C,IAAK,SAAChmB,GACtC,IAAI2oB,EAA0BC,EAA0BC,EAA0BlrB,EAClF,OAAQgrB,EAA2BP,GAAcpoB,EAAM,GAAIA,EAAM,IAA6J,OAAvJ4oB,EAA2BZ,GAAsBD,GAAcY,EAAyB,GAAIA,EAAyB,MAA4CE,EAAsET,IAAzCzqB,EAAYirB,EAAyB,IAA4B,GAAIjrB,EAAU,IAAyC,CAA7BirB,EAAyB,GAAQC,SAAgC,KAkB9Z,IAlUCluC,MAAI,SAACqlB,KACTrlB,GAAIqrC,GAAK7qC,EAAa,GAiUmB,SAAC2tC,EAAyB9oB,GACnE,IAAI+oB,EAA0BC,EAA0BC,EAAO3qB,EAAM4qB,EAA0BC,EAC/F,OAAgG,OAAxFJ,EAA2BD,EAAwB9oB,KAA0J,OAA3GgpB,EAA2BN,GAAqBK,EAAyB,MAA4CE,EAA0C,EAAjCD,EAAyB,GAAG,GAAU1qB,EAAO0qB,EAAyB,GAAI,CAAC1qC,GAAU0hB,EAAM,GAAGhQ,MAAOgQ,EAAM,GAAIipB,EAAQjpB,EAAM,IAAIyb,OAAQnd,IAA2S,OAArF4qB,EAA2BR,GAAqB1oB,KAA+CmpB,EAASD,EAAyB,GAAsC,CAA7BA,EAAyB,GAAQC,SAAc,IAnU5tB,CAAC,SAAC30C,GAAD,OAAOmG,GAAEnG,O,uiDC1M3C,IAAM40C,GAAb,gCACI,WAAYlM,EAAOrE,EAAQwQ,GAAO,yBAC9B,gBACKnM,MAAQA,EACb,EAAKrE,OAASA,EACd,EAAKwQ,MAAQA,EAJiB,EADtC,UAAiC5sC,IAa1B,IAAM6sC,GAAb,wB,MAAA,QACI,WAAYxH,GAAO,8BACTA,GAFd,O,EAAA,G,EAAA,6CAI0ByH,EAAWC,GAE7B,OADcn0C,KACCysC,MAAOuH,MADRh0C,KACqBysC,MAAO5E,MAAOqM,EAAUrM,SANnE,+BAUQ,OADc7nC,KACAysC,MAAOjJ,c,6BAV7B,GAA2C4Q,cA0BpC,SAASC,GAAqBL,EAAOvG,EAAM3tB,EAAO2iB,GACrD,OAAOgB,iBAAoBwQ,GAAuB,IAAIF,GAAYj0B,GAAO,kBAAM2tB,EAAK3tB,EAAO2iB,KAAWuR,ICzCnG,SAASM,GAAuCC,EAAeC,EAAe3G,GACjF,IAAI4G,OAAc,EAClB,OAAO7G,IAA2B,SAAC/F,EAAOpF,GACnB,MAAfgS,GACA11C,OAAO21C,qBAAqBD,GAEhCA,EAAc11C,OAAO41C,uBAAsB,SAAChqB,GACxCiqB,UAAiBL,GAAc,SAACp1C,EAAGQ,GAAJ,OAAWR,IAAMQ,IAAIyF,EAAQ,EAAG0oC,GAAmBD,IAAWhG,EAAOpF,GAAWoS,SAASC,eAAeN,SAE5I3G,G,ulDCIA,IAAMkH,GAAb,gCACI,WAAYpuC,GAAgB,kBACxB,gBACKA,IAAa,EAANA,EAFY,2BAARjC,EAAQ,iCAARA,EAAQ,yBAGxB,EAAKA,OAASA,EAHU,EADhC,2CAOQ,MAAO,CAAC,eAPhB,GAA8B4B,GAWvB,SAAS0uC,KACZ,OAAOj+B,GAAW,eAAgB,GAAIg+B,IAAU,iBAAM,CAAC,CAAC,CAAC,OPiXlDj+B,GAAY,qBAAsB,GAAI0wB,IAAY,iBAAM,CAAC,CAAC,QAASnwB,GAAY8sB,OAAkC,CAAC,SAAU9sB,GAAYwmB,OAA+B,CAAC,SAAU8I,gBO9WtL,IAAMsO,GAAb,gCACI,WAAYrsB,EAAO2Z,EAAO2S,GAAM,yBAC5B,gBACKtsB,MAAQA,EACb,EAAK2Z,MAAQA,EACb,EAAK2S,KAAOA,EAJgB,EADpC,UAA+B9tC,IASxB,SAAS+tC,KACZ,OAAOr+B,GAAY,gBAAiB,GAAIm+B,IAAW,iBAAM,CAAC,CAAC,QAAS19B,GAAUy9B,OAAyB,CAAC,QAAS39B,GAAYG,KAAe,CAAC,OAAQH,GAAYwmB,WAG9J,IAAMuX,GAAb,gCACI,WAAYzuC,GAAgB,kBACxB,gBACKA,IAAa,EAANA,EAFY,2BAARjC,EAAQ,iCAARA,EAAQ,yBAGxB,EAAKA,OAASA,EAHU,EADhC,2CAOQ,MAAO,CAAC,QAAS,YAAa,UAAW,OAAQ,WAPzD,GAA6B4B,GAWtB,SAAS+uC,KACZ,OAAOt+B,GAAW,cAAe,GAAIq+B,IAAS,iBAAM,CAAC,CAAC,CAAC,MAAO59B,KAAe,CAAC,CAAC,OAAQN,GAAYi+B,KAAwBA,QAA2B,CAAC,CAAC,OPoWjJp+B,GAAW,mBAAoB,GAAI2wB,IAAU,iBAAM,CAAC,CAAC,CAAC,OAAQ7J,OAA+B,GAAI,GAAI,CAAC,CAAC,OAAQ8I,OAAmC,CAAC,CAAC,KAAMjvB,IAAa,CAAC,OAAQolB,OAAqB,CAAC,CAAC,OAAQA,aOpW7B,CAAC,CAAC,OAAQkY,OAAyB,OAGzN,SAASM,GAASC,GACrB,MAAO,CAAC,IAAIN,GAAU11B,UAAS,OAAQ,GAASwjB,GAAUwS,IAGvD,SAASC,GAAWnW,EAAKwI,GAC5B,IAAI3S,EAEA8D,EAAyBmV,EAAO7oC,EAAGmwC,EAAcC,EAAOzsB,EAAM6qB,EAAQ6B,EAAM/sB,EAD1ErK,EAAa,CAAC8gB,EAAKwI,EAAMjf,OAwC/B,OAtC0B,IAAtBrK,EAAW,GAAG5X,KACdqyB,EAA0B,EAC1B1zB,EAAIiZ,EAAW,GAAG7Z,OAAO,IAEE,IAAtB6Z,EAAW,GAAG5X,IACd8Y,GAAQlB,EAAW,IAOpBya,EAA0B,GAN1BA,EAA0B,EAC1Byc,EAAez3B,GAAKO,EAAW,IAAI7Z,OAAO,GAC1CgxC,EAAQn3B,EAAW,GAAG7Z,OAAO,GAC7BukB,EAAOhL,GAAKM,EAAW,KAMA,IAAtBA,EAAW,GAAG5X,IACd8Y,GAAQlB,EAAW,IAUpBya,EAA0B,EATtBvZ,GAAQxB,GAAKM,EAAW,KACxBya,EAA0B,GAG1BA,EAA0B,EAC1B8a,EAAS71B,GAAKM,EAAW,KAON,IAAtBA,EAAW,GAAG5X,KACnBqyB,EAA0B,EAC1B2c,EAAOp3B,EAAW,GAAG7Z,OAAO,GAC5BkkB,EAAQrK,EAAW,KAGnBya,EAA0B,EAC1BmV,EAAQ5vB,EAAW,GAAG7Z,OAAO,IAEzBs0B,GACJ,KAAK,EACD,MAAO,CAAC,IAAIic,GAAUpN,EAAMjf,MAAOulB,EAAOtG,EAAMqN,MAAO31B,MAE3D,KAAK,EACD,MAAO,EAAE2V,EAAc5vB,EAAEuiC,GAAQ,IAAIoN,GAAU/f,EAAYtM,WAAO,EAAQsM,EAAYggB,OAAQ31B,MAElG,KAAK,EACD,IAAMkJ,EAAemf,IAAY,SAACjd,GAC9B,GAAa,MAATA,EACA,OAAO0Y,GAAkB,IAAI+R,GAAQ,IAGrC,IAAMQ,EAAYjrB,EAClB,OAAOyY,IAAU,SAACX,GACdA,EAAS,IAAI2S,GAAQ,GAAG,SAACp4C,GAAD,OAAQ,IAAIi4C,GAAUj4C,EAAE4rB,MAAO5rB,EAAEulC,MAAOqT,OAChEnT,EAAS,IAAI2S,GAAQ,SAG9BM,EAAOD,GACV,MAAO,CAAC,IAAIR,GAAU/uC,GAAK,IAAI6uC,GAAS,EAAGtsB,EAAa,IAAKQ,GAAO4e,EAAMtF,MAAOsF,EAAMqN,MAAOzsB,EAAa,IAE/G,KAAK,EACsBkf,KACvB,MAAO,CAAC,IAAIsN,GAAU11B,KAASsoB,EAAMtF,MAAOsF,EAAMqN,MAAO31B,MAE7D,KAAK,EACD,MAAO,CAAC,IAAI01B,GAAUnB,EAAQjM,EAAMtF,MAAOsF,EAAMqN,MAAO31B,MAE5D,KAAK,EACD,MAAO,CAAC,IAAI01B,GAAU/uC,GAAKyvC,EAAM/sB,GAAQif,EAAMtF,MAAOsF,EAAMqN,MAAO31B,MAEvE,KAAK,EACD,MAAO,CAACsoB,EAAOxE,GAAkB,IAAI+R,GAAQ,EAAZ,mBAA2B/V,EAA3B,+CAAqE3f,GAAQmoB,EAAMjf,OAAnF,UAKtC,SAASitB,GAAShO,EAAOpF,GAC5B,IAAMqJ,EAAajnB,GAAOlB,IAAM,WAC5B,IAAIpF,EACJ,OAAO+B,GAAOd,GAAUoqB,yBAAc,MAAO,CACzCJ,SAAU7F,GAAiB8F,SAAS9pB,QAAQ,EAAEpB,EAAaspB,EAAMtF,MAAsB,MAAdhkB,EAAsB,2BAA6BA,KAC5HjR,MAAO,CACHwoC,aAAc,OAEjBnyB,IAAM,WACP,IAAI6lB,EACEpmB,EAAeykB,EAAMjf,MAC3B,OAASnJ,GAAQ2D,GAKX5D,IAAWgqB,EAAW7kB,GAAYilB,yBAAc,SAAU,CAC5DJ,SAAU,qBACVuM,KAAM,WACNxL,QAAS,SAAC8H,GJzInB,IAA2B2D,EI0Idh4B,IJ1Icg4B,EI0IS,WJzIhCx2B,IAAU,SAACmL,GACdsrB,QAAQC,eAAU,EAAQ,GAAIF,GAC9Bj3C,OAAOo3C,cAAc,IAAIC,YAAY,uBIuIzBp4B,CAAoCykB,OAEvCmH,yBAAc,MAAO,CACtBJ,SAAU7F,GAAiB8F,SAAS9pB,QAAQvgB,MAAMyd,KAAK2sB,QAZzBhqB,GAAU4pB,GAAU,CAClD3G,SAAU,SAAC98B,GACP88B,EAAS,IAAI2S,GAAQ,EAAGzvC,KAE5BkiC,MAAO7pB,GAAKoF,GAAc1e,OAAO,cAY7C,OAAOklC,yBAAc,MAAO,CACxBJ,SAAU7F,GAAiB8F,SAAS9pB,QAAQvgB,MAAMyd,KAAKivB,MAIxD,SAASuK,GAAyBC,EAAmBC,GACxD,IAAIjuB,EAEA0Q,EAAyBl2B,EADvByb,EAAakyB,GAAyB8F,EAAIC,MAE1CC,EAA2BnE,GAAoB,IAAK/zB,EAAW,GAAIA,EAAW,IACpF,GAAgC,MAA5Bk4B,EAAkC,CAClC,IAAMC,EAA2BJ,EAAkBG,GACnB,MAA5BC,GACoG,MAArDvE,IAAzC7pB,EAAYouB,EAAyB,IAAkC,GAAIpuB,EAAU,KACvF0Q,EAA0B,EAC1Bl2B,EAAI4zC,EAAyB,IAOjC1d,EAA0B,OAI9BA,EAA0B,EAE9B,OAAQA,GACJ,KAAK,EACD,OAAOl2B,EAEX,KAAK,EACD,OAAOyc,MAKZ,SAASo3B,GAA+BvE,EAASC,GACpD,IAAM1nB,EAAQ,CAACynB,EAASC,GAClBuE,EAA2BtE,GAAoB,kBAAmB3nB,EAAM,GAAIA,EAAM,IACxF,GAAgC,MAA5BisB,EAAkC,CAClC,IAAMrW,EAAMqW,EACNnuB,EAAekf,KACrB,MAAO,CAACtnB,GAAQ,CAACgjB,GAAkB,IAAI+R,GAAQ,EAAG,IAAIL,GAAS,EAAGtsB,EAAa,MAAO4a,GAAkB,IAAI+R,GAAQ,EAAG,IAAI1N,GAAS,EAAG,IAAIhB,GAAmB,MAAO9D,IAAQ,SAACuN,GAAD,OAAa,IAAIiF,GAAQ,EAAGjF,KAAU1nB,EAAa,MAAO8X,GAGvO,IAAMsW,EAA2BvE,GAAoB,UAAW3nB,EAAM,GAAIA,EAAM,IAChF,GAAgC,MAA5BksB,EAAkC,CAClC,IAAM5E,EAAQ4E,EACRhnB,EAAiB8X,KACvB,MAAO,CAACtnB,GAAQ,CAACgjB,GAAkB,IAAI+R,GAAQ,EAAG,IAAIL,GAAS,EAAGllB,EAAe,MAAO+S,IAAQ,SAACkU,GAAD,OAAa,IAAI1B,GAAQ,EAAG0B,KAAUjnB,EAAe,MAAOoiB,IAQjK,IL5LwCzE,GAAWK,GAhBlBP,GAAMC,GAAQE,GK4MzCsJ,GAAiB,SAACR,GAAD,OAASF,IAAyB,SAAC/tB,GAAD,OAAequB,GAA+BruB,EAAU,GAAIA,EAAU,MAAKiuB,IAEpI,SAASS,GAAUT,GACtB,OAAOQ,GAAeR,GAGnB,SAASU,GAAWjU,EAAM6E,GAC7B,MAAO,CAACA,EAAO9E,GAAUC,KLpFtB,SAA2B6K,GAC9BE,QAAsB,EAAQF,GKsFlCqJ,CDpNO,SAAkC1C,EAAe3G,GACpD,OAAOyG,IAAuC,SAACN,EAAOvG,EAAM3tB,EAAO2iB,GAArB,OAAkC4R,GAAqBL,EAAOvG,EAAM3tB,EAAO2iB,KAAW+R,EAAe3G,GCmNrIsJ,CAAyB,YJ1IpC,SAAmCtI,EAAQC,EAAWjB,GACzD,OAAOe,GAAuCC,EAAQC,EAAWjB,GAAS,SAACpL,IA5DxE,SAA0CA,GAC7C,IAAI2U,EAAMC,EAAQC,EACdC,OAAe,EACnB5I,GAAsC,SAAChkB,GAcnC,OAXoB,MAAhB4sB,GACIA,IAAiBx4C,OAAO0wC,SAASsG,KACP,EAOJ,GAG1B,KAAK,OACQ,EACT,MAEJ,KAAK,EACDwB,EAAex4C,OAAO0wC,SAASsG,KACvBtT,EAAS,IAAIiM,GAAY,EAAG3vC,OAAO0wC,aAMvD1wC,OAAOy4C,iBAAiB,YAAaJ,EAAOzI,GAAoC,SAAC8I,GAC7EL,EAAKK,MAET14C,OAAOy4C,iBAAiB,cAAeH,EAAS1I,GAAoC,SAAC+I,GACjFL,EAAOK,MAEX34C,OAAOy4C,iBAAiB,kBAAmBF,EAAS3I,GAAoC,SAACgJ,GACrFL,EAAOK,MAwBPC,CAAiCnV,MIwIeoV,EAA0B,SAACtB,GAAD,OAASS,GAAUT,MAAM,SAACvT,EAAMkN,GAAP,OAAmB+G,GAAWjU,EAAMkN,MLtMhG1C,GKsMyI,SAAClwC,GAAD,OAAO8lC,IAAU,SAAC0M,GACtM/wC,OAAO+4C,QAAW,SAAC3J,GACVptC,EAASotC,GAAO1nC,QAAQ,wBAA0B,GAAO,IAC1DqpC,EAAW,IAAIsF,GAAQ,EAAGp5B,GAAOtB,GAAO,aAAdsB,CAA4BmyB,KACtDpvC,OAAOg5C,MAAM96B,GAAK,wBAA0Blc,EAASotC,WL1NzBb,GK6NZ,SAACiI,GAAD,OAAgBD,GAASC,IL7NPhI,GK6NoB,SAAClO,EAAKwI,GAAN,OAAgB2N,GAAWnW,EAAKwI,IL7N5C4F,GK6NoD,SAACkC,EAASlN,GAAV,OAAuBoT,GAASlG,EAASlN,IL7MzFoL,GAf/C,IAAIR,GAAUC,GAAMC,IAAQ,SAAC5iB,GAAD,OAAWgY,OAAY8K,IAAM,SAAC5F,EAAOliC,GACpE8nC,GAAK5F,EAAOliC,MACb,SAAC2iB,GACA8Z,GAAY9Z,EAAU,GAAIA,EAAU,MACrCljB,EAAQ,GAAG,SAACjG,GAAD,OAAOA,MAYd,IAAIkuC,GAAUQ,GAAQP,KAAMO,GAAQN,QAAQ,SAAC1F,GAAD,OAAW9E,GAAU1iB,GAAQ,CAACwtB,GAAQL,UAAU3F,GAAQ2F,GAAU3F,QAAWgG,GAAQJ,KAAMI,GAAQH,SAAUG,GAAQ9M,QAAS8M,GAAQF","file":"app.6459291826ab46ac0389.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([3,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// tslint:disable:ban-types\nexport function isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nexport function isArrayLike(x) {\n    return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nfunction isComparer(x) {\n    return typeof x.Compare === \"function\";\n}\nfunction isComparable(x) {\n    return typeof x.CompareTo === \"function\";\n}\nfunction isEquatable(x) {\n    return typeof x.Equals === \"function\";\n}\nfunction isHashable(x) {\n    return typeof x.GetHashCode === \"function\";\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport function sameConstructor(x, y) {\n    return Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return typeof o.GetEnumerator === \"function\"\n        ? o.GetEnumerator()\n        : new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        [Symbol.iterator]() { return this; },\n        next() {\n            const hasNext = en[\"System.Collections.IEnumerator.MoveNext\"]();\n            const current = hasNext ? en[\"System.Collections.IEnumerator.get_Current\"]() : undefined;\n            return { done: !hasNext, value: current };\n        },\n    };\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (isComparer(comparer)) {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    let str = i.toString(10);\n    while (str.length < lengthLeft) {\n        str = \"0\" + str;\n    }\n    while (str.length < lengthRight) {\n        str = str + \"0\";\n    }\n    return str;\n}\nexport function dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport class ObjectRef {\n    static id(o) {\n        if (!ObjectRef.idMap.has(o)) {\n            ObjectRef.idMap.set(o, ++ObjectRef.count);\n        }\n        return ObjectRef.idMap.get(o);\n    }\n}\nObjectRef.idMap = new WeakMap();\nObjectRef.count = 0;\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function physicalHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    else if (isHashable(x)) {\n        return x.GetHashCode();\n    }\n    else {\n        return physicalHash(x);\n    }\n}\nexport function dateHash(x) {\n    return x.getTime();\n}\nexport function arrayHash(x) {\n    const len = x.length;\n    const hashes = new Array(len);\n    for (let i = 0; i < len; i++) {\n        hashes[i] = structuralHash(x[i]);\n    }\n    return combineHashCodes(hashes);\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (isHashable(x)) {\n                return x.GetHashCode();\n            }\n            else if (isArrayLike(x)) {\n                return arrayHash(x);\n            }\n            else if (x instanceof Date) {\n                return dateHash(x);\n            }\n            else if (Object.getPrototypeOf(x).constructor === Object) {\n                // TODO: check call-stack to prevent cyclic objects?\n                const hashes = Object.values(x).map((v) => structuralHash(v));\n                return combineHashCodes(hashes);\n            }\n            else {\n                // Classes don't implement GetHashCode by default, but must use identity hashing\n                return numberHash(ObjectRef.id(x));\n                // return stringHash(String(x));\n            }\n        }\n    }\n}\n// Intended for custom numeric types, like long or decimal\nexport function fastStructuralHash(x) {\n    return stringHash(String(x));\n}\n// Intended for declared types that may or may not implement GetHashCode\nexport function safeHash(x) {\n    return x == null ? 0 : isHashable(x) ? x.GetHashCode() : numberHash(ObjectRef.id(x));\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\nfunction equalObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return false;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0; i < xKeys.length; i++) {\n        if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (isEquatable(x)) {\n        return x.Equals(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object && equalObjects(x, y);\n    }\n}\nexport function compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nfunction compareObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (isComparable(x)) {\n        return x.CompareTo(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) ? compareArrays(x, y) : -1;\n    }\n    else if (x instanceof Date) {\n        return y instanceof Date ? compareDates(x, y) : -1;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object ? compareObjects(x, y) : -1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function clamp(comparer, value, min, max) {\n    return (comparer(value, min) < 0) ? min : (comparer(value, max) > 0) ? max : value;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value, isSetter) => {\n        if (!isSetter) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nexport function createObj(fields) {\n    const obj = {};\n    for (const kv of fields) {\n        obj[kv[0]] = kv[1];\n    }\n    return obj;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function randomNext(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nexport function randomBytes(buffer) {\n    if (buffer == null) {\n        throw new Error(\"Buffer cannot be null\");\n    }\n    for (let i = 0; i < buffer.length; i += 6) {\n        // Pick random 48-bit number. Fill buffer in 2 24-bit chunks to avoid bitwise truncation.\n        let r = Math.floor(Math.random() * 281474976710656); // Low 24 bits = chunk 1.\n        const rhi = Math.floor(r / 16777216); // High 24 bits shifted via division = chunk 2.\n        for (let j = 0; j < 6 && i + j < buffer.length; j++) {\n            if (j === 3) {\n                r = rhi;\n            }\n            buffer[i + j] = r & 255;\n            r >>>= 8;\n        }\n    }\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    if (isArrayLike(col)) {\n        return col.length;\n    }\n    else {\n        let count = 0;\n        for (const _ of col) {\n            count++;\n        }\n        return count;\n    }\n}\nexport function clear(col) {\n    if (isArrayLike(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nconst CURRIED = Symbol(\"curried\");\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null || f.length > 1) {\n        return f;\n    }\n    const uncurried = (...args) => {\n        let res = f;\n        for (let i = 0; i < arity; i++) {\n            res = res(args[i]);\n        }\n        return res;\n    };\n    uncurried[CURRIED] = f;\n    return uncurried;\n}\nfunction _curry(args, arity, f) {\n    return (arg) => arity === 1\n        ? f(...args.concat([arg]))\n        // Note it's important to generate a new args array every time\n        // because a partially applied function can be run multiple times\n        : _curry(args.concat([arg]), arity - 1, f);\n}\nexport function curry(arity, f) {\n    if (f == null || f.length === 1) {\n        return f;\n    }\n    else if (CURRIED in f) {\n        return f[CURRIED];\n    }\n    else {\n        return _curry([], arity, f);\n    }\n}\nexport function checkArity(arity, f) {\n    return f.length > arity\n        ? (...args1) => (...args2) => f.apply(undefined, args1.concat(args2))\n        : f;\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return undefined;\n    }\n    else if (CURRIED in f) {\n        f = f[CURRIED];\n        for (let i = 0; i < args.length; i++) {\n            f = f(args[i]);\n        }\n        return f;\n    }\n    else {\n        return _curry(args, arity, f);\n    }\n}\nexport function mapCurriedArgs(fn, mappings) {\n    function mapArg(fn, arg, mappings, idx) {\n        const mapping = mappings[idx];\n        if (mapping !== 0) {\n            const expectedArity = mapping[0];\n            const actualArity = mapping[1];\n            if (expectedArity > 1) {\n                arg = curry(expectedArity, arg);\n            }\n            if (actualArity > 1) {\n                arg = uncurry(actualArity, arg);\n            }\n        }\n        const res = fn(arg);\n        if (idx + 1 === mappings.length) {\n            return res;\n        }\n        else {\n            return (arg) => mapArg(res, arg, mappings, idx + 1);\n        }\n    }\n    return (arg) => mapArg(fn, arg, mappings, 0);\n}\n","import { combineHashCodes, compare, compareArrays, equalArrays, equals, sameConstructor, numberHash, structuralHash } from \"./Util.js\";\nexport function seqToString(self) {\n    let count = 0;\n    let str = \"[\";\n    for (const x of self) {\n        if (count === 0) {\n            str += toString(x);\n        }\n        else if (count === 100) {\n            str += \"; ...\";\n            break;\n        }\n        else {\n            str += \"; \" + toString(x);\n        }\n        count++;\n    }\n    return str + \"]\";\n}\nexport function toString(x, callStack = 0) {\n    if (x != null && typeof x === \"object\") {\n        if (typeof x.toString === \"function\") {\n            return x.toString();\n        }\n        else if (Symbol.iterator in x) {\n            return seqToString(x);\n        }\n        else { // TODO: Date?\n            const cons = Object.getPrototypeOf(x).constructor;\n            return cons === Object && callStack < 10\n                // Same format as recordToString\n                ? \"{ \" + Object.entries(x).map(([k, v]) => k + \" = \" + toString(v, callStack + 1)).join(\"\\n  \") + \" }\"\n                : cons.name;\n        }\n    }\n    return String(x);\n}\nexport function unionToString(name, fields) {\n    if (fields.length === 0) {\n        return name;\n    }\n    else {\n        let fieldStr = \"\";\n        let withParens = true;\n        if (fields.length === 1) {\n            fieldStr = toString(fields[0]);\n            withParens = fieldStr.indexOf(\" \") >= 0;\n        }\n        else {\n            fieldStr = fields.map((x) => toString(x)).join(\", \");\n        }\n        return name + (withParens ? \" (\" : \" \") + fieldStr + (withParens ? \")\" : \"\");\n    }\n}\nexport class Union {\n    get name() {\n        return this.cases()[this.tag];\n    }\n    toJSON() {\n        return this.fields.length === 0 ? this.name : [this.name].concat(this.fields);\n    }\n    toString() {\n        return unionToString(this.name, this.fields);\n    }\n    GetHashCode() {\n        const hashes = this.fields.map((x) => structuralHash(x));\n        hashes.splice(0, 0, numberHash(this.tag));\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        if (this === other) {\n            return true;\n        }\n        else if (!sameConstructor(this, other)) {\n            return false;\n        }\n        else if (this.tag === other.tag) {\n            return equalArrays(this.fields, other.fields);\n        }\n        else {\n            return false;\n        }\n    }\n    CompareTo(other) {\n        if (this === other) {\n            return 0;\n        }\n        else if (!sameConstructor(this, other)) {\n            return -1;\n        }\n        else if (this.tag === other.tag) {\n            return compareArrays(this.fields, other.fields);\n        }\n        else {\n            return this.tag < other.tag ? -1 : 1;\n        }\n    }\n}\nfunction recordToJSON(self) {\n    const o = {};\n    const keys = Object.keys(self);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = self[keys[i]];\n    }\n    return o;\n}\nfunction recordToString(self) {\n    return \"{ \" + Object.entries(self).map(([k, v]) => k + \" = \" + toString(v)).join(\"\\n  \") + \" }\";\n}\nfunction recordGetHashCode(self) {\n    const hashes = Object.values(self).map((v) => structuralHash(v));\n    return combineHashCodes(hashes);\n}\nfunction recordEquals(self, other) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameConstructor(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompareTo(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameConstructor(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport class Record {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class FSharpRef {\n    constructor(contentsOrGetter, setter) {\n        if (typeof setter === \"function\") {\n            this.getter = contentsOrGetter;\n            this.setter = setter;\n        }\n        else {\n            this.getter = () => contentsOrGetter;\n            this.setter = (v) => { contentsOrGetter = v; };\n        }\n    }\n    get contents() {\n        return this.getter();\n    }\n    set contents(v) {\n        this.setter(v);\n    }\n}\n// EXCEPTIONS\n// Exception is intentionally not derived from Error, for performance reasons (see #2160)\nexport class Exception {\n    constructor(message) {\n        this.message = message;\n    }\n}\nexport function isException(x) {\n    return x instanceof Exception || x instanceof Error;\n}\nexport class FSharpException extends Exception {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class MatchFailureException extends FSharpException {\n    constructor(arg1, arg2, arg3) {\n        super();\n        this.arg1 = arg1;\n        this.arg2 = arg2 | 0;\n        this.arg3 = arg3 | 0;\n        this.message = \"The match cases were incomplete\";\n    }\n}\nexport class Attribute {\n}\n","export const symbol = Symbol(\"numeric\");\nexport function isNumeric(x) {\n    return typeof x === \"number\" || (x === null || x === void 0 ? void 0 : x[symbol]);\n}\nexport function compare(x, y) {\n    if (typeof x === \"number\") {\n        return x < y ? -1 : (x > y ? 1 : 0);\n    }\n    else {\n        return x.CompareTo(y);\n    }\n}\nexport function multiply(x, y) {\n    if (typeof x === \"number\") {\n        return x * y;\n    }\n    else {\n        return x[symbol]().multiply(y);\n    }\n}\nexport function toFixed(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toFixed(dp);\n    }\n    else {\n        return x[symbol]().toFixed(dp);\n    }\n}\nexport function toPrecision(x, sd) {\n    if (typeof x === \"number\") {\n        return x.toPrecision(sd);\n    }\n    else {\n        return x[symbol]().toPrecision(sd);\n    }\n}\nexport function toExponential(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toExponential(dp);\n    }\n    else {\n        return x[symbol]().toExponential(dp);\n    }\n}\nexport function toHex(x) {\n    if (typeof x === \"number\") {\n        return (Number(x) >>> 0).toString(16);\n    }\n    else {\n        return x[symbol]().toHex();\n    }\n}\n","// Adapted from https://github.com/MikeMcl/big.js/blob/0f94dc9110d55c4f324a47ba6a2e832ce23ac589/big.mjs\n/* tslint:disable */\nimport { combineHashCodes } from \"../Util.js\";\nimport { symbol } from \"../Numeric.js\";\n// The shared prototype object.\nvar P = {\n    GetHashCode() { return combineHashCodes([this.s, this.e].concat(this.c)); },\n    Equals(x) { return !this.cmp(x); },\n    CompareTo(x) { return this.cmp(x); },\n    [symbol]() {\n        const _this = this;\n        return {\n            multiply: y => _this.mul(y),\n            toPrecision: sd => _this.toPrecision(sd),\n            toExponential: dp => _this.toExponential(dp),\n            toFixed: dp => _this.toFixed(dp),\n            toHex: () => (Number(_this) >>> 0).toString(16),\n        };\n    }\n};\n/*\n *  big.js v6.0.3\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\n *  Copyright (c) 2020 Michael Mclaughlin\n *  https://github.com/MikeMcl/big.js/LICENCE.md\n */\n/************************************** EDITABLE DEFAULTS *****************************************/\n// The default values below must be integers within the stated ranges.\n/*\n * The maximum number of decimal places (DP) of the results of operations involving division:\n * div and sqrt, and pow with negative exponents.\n */\nvar DP = 28, // 0 to MAX_DP\n/*\n * The rounding mode (RM) used when rounding to the above decimal places.\n *\n *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\n *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\n *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\n *  3  Away from zero.                                  (ROUND_UP)\n */\nRM = 1, // 0, 1, 2 or 3\n// The maximum value of DP and Big.DP.\nMAX_DP = 1E6, // 0 to 1000000\n// The maximum magnitude of the exponent argument to the pow method.\nMAX_POWER = 1E6, // 1 to 1000000\n/*\n * The negative exponent (NE) at and beneath which toString returns exponential notation.\n * (JavaScript numbers: -7)\n * -1000000 is the minimum recommended exponent value of a Big.\n */\nNE = -29, // 0 to -1000000\n/*\n * The positive exponent (PE) at and above which toString returns exponential notation.\n * (JavaScript numbers: 21)\n * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.\n */\nPE = 29, // 0 to 1000000\n/*\n * When true, an error will be thrown if a primitive number is passed to the Big constructor,\n * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a\n * primitive number without a loss of precision.\n */\nSTRICT = false, // true or false\n/**************************************************************************************************/\n// Error messages.\nNAME = '[big.js] ', INVALID = NAME + 'Invalid ', INVALID_DP = INVALID + 'decimal places', INVALID_RM = INVALID + 'rounding mode', DIV_BY_ZERO = NAME + 'Division by zero', UNDEFINED = void 0, NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n/*\n * Create and return a Big constructor.\n */\nfunction _Big_() {\n    /*\n     * The Big constructor and exported function.\n     * Create and return a new instance of a Big number object.\n     *\n     * n {number|string|Big} A numeric value.\n     */\n    function Big(n) {\n        var x = this;\n        // Enable constructor usage without new.\n        if (!(x instanceof Big))\n            return n === UNDEFINED ? _Big_() : new Big(n);\n        // Duplicate.\n        if (n instanceof Big) {\n            x.s = n.s;\n            x.e = n.e;\n            x.c = n.c.slice();\n            normalize(x);\n        }\n        else {\n            if (typeof n !== 'string') {\n                if (Big.strict === true) {\n                    throw TypeError(INVALID + 'number');\n                }\n                // Minus zero?\n                n = n === 0 && 1 / n < 0 ? '-0' : String(n);\n            }\n            parse(x, n);\n        }\n        // Retain a reference to this Big constructor.\n        // Shadow Big.prototype.constructor which points to Object.\n        x.constructor = Big;\n    }\n    Big.prototype = P;\n    Big.DP = DP;\n    Big.RM = RM;\n    Big.NE = NE;\n    Big.PE = PE;\n    Big.strict = STRICT;\n    return Big;\n}\nfunction normalize(x) {\n    // x = round(x, DP, 0);\n    if (x.c.length > 1 && !x.c[0]) {\n        let i = x.c.findIndex(x => x);\n        x.c = x.c.slice(i);\n        x.e = x.e - i;\n    }\n}\n/*\n * Parse the number or string value passed to a Big constructor.\n *\n * x {Big} A Big number instance.\n * n {number|string} A numeric value.\n */\nfunction parse(x, n) {\n    var e, i, nl;\n    if (!NUMERIC.test(n)) {\n        throw Error(INVALID + 'number');\n    }\n    // Determine sign.\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\n    // Decimal point?\n    if ((e = n.indexOf('.')) > -1)\n        n = n.replace('.', '');\n    // Exponential form?\n    if ((i = n.search(/e/i)) > 0) {\n        // Determine exponent.\n        if (e < 0)\n            e = i;\n        e += +n.slice(i + 1);\n        n = n.substring(0, i);\n    }\n    else if (e < 0) {\n        // Integer.\n        e = n.length;\n    }\n    nl = n.length;\n    // Determine leading zeros before decimal point.\n    for (i = 0; i < e && i < nl && n.charAt(i) == '0';)\n        ++i;\n    // original version (ignores decimal point).\n    // // Determine leading zeros.\n    // for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\n    if (i == nl) {\n        // Zero.\n        x.c = [x.e = 0];\n    }\n    else {\n        x.e = e - i - 1;\n        x.c = [];\n        // Convert string to array of digits without leading zeros\n        for (e = 0; i < nl;)\n            x.c[e++] = +n.charAt(i++);\n        // older version (doesn't keep trailing zeroes).\n        // // Determine trailing zeros.\n        // for (; nl > 0 && n.charAt(--nl) == '0';);\n        // // Convert string to array of digits without leading/trailing zeros.\n        // for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\n    }\n    x = round(x, Big.DP + 1, Big.RM);\n    return x;\n}\n/*\n * Round Big x to a maximum of sd significant digits using rounding mode rm.\n *\n * x {Big} The Big to round.\n * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.\n * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n * [more] {boolean} Whether the result of division was truncated.\n */\nfunction round(x, sd, rm, more) {\n    var xc = x.c;\n    if (rm === UNDEFINED)\n        rm = Big.RM;\n    if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {\n        throw Error(INVALID_RM);\n    }\n    if (sd < 1) {\n        more =\n            rm === 3 && (more || !!xc[0]) || sd === 0 && (rm === 1 && xc[0] >= 5 ||\n                rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED)));\n        xc.length = 1;\n        if (more) {\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n            x.e = x.e - sd + 1;\n            xc[0] = 1;\n        }\n        else {\n            // Zero.\n            xc[0] = x.e = 0;\n        }\n    }\n    else if (sd < xc.length) {\n        // xc[sd] is the digit after the digit that may be rounded up.\n        const isZero = xc.findIndex((xci, idx) => idx >= sd && xci > 0) < 0;\n        more =\n            rm === 1 && xc[sd] >= 5 ||\n                rm === 2 && (xc[sd] > 5 || xc[sd] === 5 &&\n                    (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) ||\n                rm === 3 && (more || !isZero);\n        // Remove any digits after the required precision.\n        xc.length = sd--;\n        // Round up?\n        if (more) {\n            // Rounding up may mean the previous digit has to be rounded up.\n            for (; ++xc[sd] > 9;) {\n                xc[sd] = 0;\n                if (!sd--) {\n                    ++x.e;\n                    xc.unshift(1);\n                }\n            }\n        }\n        // Remove trailing zeros.\n        for (sd = xc.length; !xc[--sd];)\n            xc.pop();\n    }\n    return x;\n}\n/*\n * Return a string representing the value of Big x in normal or exponential notation.\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\n */\nfunction stringify(x, doExponential, isNonzero) {\n    var e = x.e, s = x.c.join(''), n = s.length;\n    // Exponential notation?\n    if (doExponential) {\n        s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\n        // Normal notation.\n    }\n    else if (e < 0) {\n        for (; ++e;)\n            s = '0' + s;\n        s = '0.' + s;\n    }\n    else if (e > 0) {\n        if (++e > n) {\n            for (e -= n; e--;)\n                s += '0';\n        }\n        else if (e < n) {\n            s = s.slice(0, e) + '.' + s.slice(e);\n        }\n    }\n    else if (n > 1) {\n        s = s.charAt(0) + '.' + s.slice(1);\n    }\n    return x.s < 0 && isNonzero ? '-' + s : s;\n}\n// Prototype/instance methods\n/*\n * Return a new Big whose value is the absolute value of this Big.\n */\nP.abs = function () {\n    var x = new this.constructor(this);\n    x.s = 1;\n    return x;\n};\n/*\n * Return 1 if the value of this Big is greater than the value of Big y,\n *       -1 if the value of this Big is less than the value of Big y, or\n *        0 if they have the same value.\n */\nP.cmp = function (y) {\n    var isneg, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, i = x.s, j = y.s, k = x.e, l = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0])\n        return !xc[0] ? !yc[0] ? 0 : -j : i;\n    // Signs differ?\n    if (i != j)\n        return i;\n    isneg = i < 0;\n    // Compare exponents.\n    if (k != l)\n        return k > l ^ isneg ? 1 : -1;\n    // Compare digit by digit.\n    j = Math.max(xc.length, yc.length);\n    for (i = 0; i < j; i++) {\n        k = i < xc.length ? xc[i] : 0;\n        l = i < yc.length ? yc[i] : 0;\n        if (k != l)\n            return k > l ^ isneg ? 1 : -1;\n    }\n    return 0;\n    // original version (doesn't compare well trailing zeroes, e.g. 1.0 with 1.00)\n    // j = (k = xc.length) < (l = yc.length) ? k : l;\n    // // Compare digit by digit.\n    // for (i = -1; ++i < j;) {\n    //   if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\n    // }\n    // // Compare lengths.\n    // return k == l ? 0 : k > l ^ isneg ? 1 : -1;\n};\n/*\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.div = function (y) {\n    var Big = this.constructor, x = new Big(this), y = new Big(y), a = x.c, // dividend\n    b = y.c, // divisor\n    k = x.s == y.s ? 1 : -1, dp = Big.DP;\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\n        throw Error(INVALID_DP);\n    }\n    // Divisor is zero?\n    if (!b[0]) {\n        throw Error(DIV_BY_ZERO);\n    }\n    // Dividend is 0? Return +-0.\n    if (!a[0]) {\n        y.s = k;\n        y.c = [y.e = 0];\n        return y;\n    }\n    var bl, bt, n, cmp, ri, bz = b.slice(), ai = bl = b.length, al = a.length, r = a.slice(0, bl), // remainder\n    rl = r.length, q = y, // quotient\n    qc = q.c = [], qi = 0, p = dp + (q.e = x.e - y.e) + 1; // precision of the result\n    q.s = k;\n    k = p < 0 ? 0 : p;\n    // Create version of divisor with leading zero.\n    bz.unshift(0);\n    // Add zeros to make remainder as long as divisor.\n    for (; rl++ < bl;)\n        r.push(0);\n    do {\n        // n is how many times the divisor goes into current remainder.\n        for (n = 0; n < 10; n++) {\n            // Compare divisor and remainder.\n            if (bl != (rl = r.length)) {\n                cmp = bl > rl ? 1 : -1;\n            }\n            else {\n                for (ri = -1, cmp = 0; ++ri < bl;) {\n                    if (b[ri] != r[ri]) {\n                        cmp = b[ri] > r[ri] ? 1 : -1;\n                        break;\n                    }\n                }\n            }\n            // If divisor < remainder, subtract divisor from remainder.\n            if (cmp < 0) {\n                // Remainder can't be more than 1 digit longer than divisor.\n                // Equalise lengths using divisor with extra leading zero?\n                for (bt = rl == bl ? b : bz; rl;) {\n                    if (r[--rl] < bt[rl]) {\n                        ri = rl;\n                        for (; ri && !r[--ri];)\n                            r[ri] = 9;\n                        --r[ri];\n                        r[rl] += 10;\n                    }\n                    r[rl] -= bt[rl];\n                }\n                for (; !r[0];)\n                    r.shift();\n            }\n            else {\n                break;\n            }\n        }\n        // Add the digit n to the result array.\n        qc[qi++] = cmp ? n : ++n;\n        // Update the remainder.\n        if (r[0] && cmp)\n            r[rl] = a[ai] || 0;\n        else\n            r = [a[ai]];\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\n    if (!qc[0] && qi != 1) {\n        // There can't be more than one zero.\n        qc.shift();\n        q.e--;\n        p--;\n    }\n    // Round?\n    if (qi > p)\n        round(q, p, Big.RM, r[0] !== UNDEFINED);\n    return q;\n};\n/*\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\n */\nP.eq = function (y) {\n    return this.cmp(y) === 0;\n};\n/*\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\n * false.\n */\nP.gt = function (y) {\n    return this.cmp(y) > 0;\n};\n/*\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\n * return false.\n */\nP.gte = function (y) {\n    return this.cmp(y) > -1;\n};\n/*\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\n */\nP.lt = function (y) {\n    return this.cmp(y) < 0;\n};\n/*\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\n * return false.\n */\nP.lte = function (y) {\n    return this.cmp(y) < 1;\n};\n/*\n * Return a new Big whose value is the value of this Big minus the value of Big y.\n */\nP.minus = P.sub = function (y) {\n    var i, j, t, xlty, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.plus(y);\n    }\n    var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        if (yc[0]) {\n            y.s = -b;\n        }\n        else if (xc[0]) {\n            y = new Big(x);\n        }\n        else {\n            y.s = 1;\n        }\n        return y;\n    }\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\n    if (a = xe - ye) {\n        if (xlty = a < 0) {\n            a = -a;\n            t = xc;\n        }\n        else {\n            ye = xe;\n            t = yc;\n        }\n        t.reverse();\n        for (b = a; b--;)\n            t.push(0);\n        t.reverse();\n    }\n    else {\n        // Exponents equal. Check digit by digit.\n        j = ((xlty = xc.length < yc.length) ? xc : yc).length;\n        for (a = b = 0; b < j; b++) {\n            if (xc[b] != yc[b]) {\n                xlty = xc[b] < yc[b];\n                break;\n            }\n        }\n    }\n    // x < y? Point xc to the array of the bigger number.\n    if (xlty) {\n        t = xc;\n        xc = yc;\n        yc = t;\n        y.s = -y.s;\n    }\n    /*\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\n     * needs to start at yc.length.\n     */\n    if ((b = (j = yc.length) - (i = xc.length)) > 0)\n        for (; b--;)\n            xc[i++] = 0;\n    // Subtract yc from xc.\n    for (b = i; j > a;) {\n        if (xc[--j] < yc[j]) {\n            for (i = j; i && !xc[--i];)\n                xc[i] = 9;\n            --xc[i];\n            xc[j] += 10;\n        }\n        xc[j] -= yc[j];\n    }\n    // Remove trailing zeros.\n    for (; xc[--b] === 0;)\n        xc.pop();\n    // Remove leading zeros and adjust exponent accordingly.\n    for (; xc[0] === 0;) {\n        xc.shift();\n        --ye;\n    }\n    if (!xc[0]) {\n        // n - n = +0\n        y.s = 1;\n        // Result must be zero.\n        xc = [ye = 0];\n    }\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\n */\nP.mod = function (y) {\n    var ygtx, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    if (!y.c[0]) {\n        throw Error(DIV_BY_ZERO);\n    }\n    x.s = y.s = 1;\n    ygtx = y.cmp(x) == 1;\n    x.s = a;\n    y.s = b;\n    if (ygtx)\n        return new Big(x);\n    a = Big.DP;\n    b = Big.RM;\n    Big.DP = Big.RM = 0;\n    x = x.div(y);\n    Big.DP = a;\n    Big.RM = b;\n    return this.minus(x.times(y));\n};\n/*\n * Return a new Big whose value is the value of this Big plus the value of Big y.\n */\nP.plus = P.add = function (y) {\n    var e, k, t, Big = this.constructor, x = new Big(this), y = new Big(y);\n    // Signs differ?\n    if (x.s != y.s) {\n        y.s = -y.s;\n        return x.minus(y);\n    }\n    var xe = x.e, xc = x.c, ye = y.e, yc = y.c;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        if (!yc[0]) {\n            if (xc[0]) {\n                y = new Big(x);\n            }\n            else {\n                y.s = x.s;\n            }\n        }\n        return y;\n    }\n    xc = xc.slice();\n    // Prepend zeros to equalise exponents.\n    // Note: reverse faster than unshifts.\n    if (e = xe - ye) {\n        if (e > 0) {\n            ye = xe;\n            t = yc;\n        }\n        else {\n            e = -e;\n            t = xc;\n        }\n        t.reverse();\n        for (; e--;)\n            t.push(0);\n        t.reverse();\n    }\n    // Point xc to the longer array.\n    if (xc.length - yc.length < 0) {\n        t = yc;\n        yc = xc;\n        xc = t;\n    }\n    e = yc.length;\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\n    for (k = 0; e; xc[e] %= 10)\n        k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n    if (k) {\n        xc.unshift(k);\n        ++ye;\n    }\n    // Remove trailing zeros.\n    for (e = xc.length; xc[--e] === 0;)\n        xc.pop();\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a Big whose value is the value of this Big raised to the power n.\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\n * mode Big.RM.\n *\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\n */\nP.pow = function (n) {\n    var Big = this.constructor, x = new Big(this), y = new Big('1'), one = new Big('1'), isneg = n < 0;\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\n        throw Error(INVALID + 'exponent');\n    }\n    if (isneg)\n        n = -n;\n    for (;;) {\n        if (n & 1)\n            y = y.times(x);\n        n >>= 1;\n        if (!n)\n            break;\n        x = x.times(x);\n    }\n    return isneg ? one.div(y) : y;\n};\n/*\n * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd\n * significant digits using rounding mode rm, or Big.RM if rm is not specified.\n *\n * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.prec = function (sd, rm) {\n    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\n        throw Error(INVALID + 'precision');\n    }\n    return round(new this.constructor(this), sd, rm);\n};\n/*\n * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places\n * using rounding mode rm, or Big.RM if rm is not specified.\n * If dp is negative, round to an integer which is a multiple of 10**-dp.\n * If dp is not specified, round to 0 decimal places.\n *\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.round = function (dp, rm) {\n    if (dp === UNDEFINED)\n        dp = 0;\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {\n        throw Error(INVALID_DP);\n    }\n    return round(new this.constructor(this), dp + this.e + 1, rm);\n};\n/*\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.sqrt = function () {\n    var r, c, t, Big = this.constructor, x = new Big(this), s = x.s, e = x.e, half = new Big('0.5');\n    // Zero?\n    if (!x.c[0])\n        return new Big(x);\n    // Negative?\n    if (s < 0) {\n        throw Error(NAME + 'No square root');\n    }\n    // Estimate.\n    s = Math.sqrt(x + '');\n    // Math.sqrt underflow/overflow?\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\n    if (s === 0 || s === 1 / 0) {\n        c = x.c.join('');\n        if (!(c.length + e & 1))\n            c += '0';\n        s = Math.sqrt(c);\n        e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\n        r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\n    }\n    else {\n        r = new Big(s + '');\n    }\n    e = r.e + (Big.DP += 4);\n    // Newton-Raphson iteration.\n    do {\n        t = r;\n        r = half.times(t.plus(x.div(t)));\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\n    return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);\n};\n/*\n * Return a new Big whose value is the value of this Big times the value of Big y.\n */\nP.times = P.mul = function (y) {\n    var c, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, a = xc.length, b = yc.length, i = x.e, j = y.e;\n    // Determine sign of result.\n    y.s = x.s == y.s ? 1 : -1;\n    // Return signed 0 if either 0.\n    if (!xc[0] || !yc[0]) {\n        y.c = [y.e = 0];\n        return y;\n    }\n    // Initialise exponent of result as x.e + y.e.\n    y.e = i + j;\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\n    if (a < b) {\n        c = xc;\n        xc = yc;\n        yc = c;\n        j = a;\n        a = b;\n        b = j;\n    }\n    // Initialise coefficient array of result with zeros.\n    for (c = new Array(j = a + b); j--;)\n        c[j] = 0;\n    // Multiply.\n    // i is initially xc.length.\n    for (i = b; i--;) {\n        b = 0;\n        // a is yc.length.\n        for (j = a + i; j > i;) {\n            // Current sum of products at this digit position, plus carry.\n            b = c[j] + yc[i] * xc[j - i - 1] + b;\n            c[j--] = b % 10;\n            // carry\n            b = b / 10 | 0;\n        }\n        c[j] = b;\n    }\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\n    if (b)\n        ++y.e;\n    else\n        c.shift();\n    // Remove trailing zeros.\n    for (i = c.length; !c[--i];)\n        c.pop();\n    y.c = c;\n    return y;\n};\n/*\n * Return a string representing the value of this Big in exponential notation rounded to dp fixed\n * decimal places using rounding mode rm, or Big.RM if rm is not specified.\n *\n * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.toExponential = function (dp, rm) {\n    var x = this, n = x.c[0];\n    if (dp !== UNDEFINED) {\n        if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\n            throw Error(INVALID_DP);\n        }\n        x = round(new x.constructor(x), ++dp, rm);\n        for (; x.c.length < dp;)\n            x.c.push(0);\n    }\n    return stringify(x, true, !!n);\n};\n/*\n * Return a string representing the value of this Big in normal notation rounded to dp fixed\n * decimal places using rounding mode rm, or Big.RM if rm is not specified.\n *\n * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n *\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n */\nP.toFixed = function (dp, rm) {\n    var x = this, n = x.c[0];\n    if (dp !== UNDEFINED) {\n        if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\n            throw Error(INVALID_DP);\n        }\n        x = round(new x.constructor(x), dp + x.e + 1, rm);\n        // x.e may have changed if the value is rounded up.\n        for (dp = dp + x.e + 1; x.c.length < dp;)\n            x.c.push(0);\n    }\n    return stringify(x, false, !!n);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Omit the sign for negative zero.\n */\nP.toJSON = P.toString = function () {\n    var x = this, Big = x.constructor;\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);\n};\n/*\n * Return the value of this Big as a primitve number.\n */\nP.toNumber = function () {\n    var n = Number(stringify(this, true, true));\n    if (this.constructor.strict === true && !this.eq(n.toString())) {\n        throw Error(NAME + 'Imprecise conversion');\n    }\n    return n;\n};\n/*\n * Return a string representing the value of this Big rounded to sd significant digits using\n * rounding mode rm, or Big.RM if rm is not specified.\n * Use exponential notation if sd is less than the number of digits necessary to represent\n * the integer part of the value in normal notation.\n *\n * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.toPrecision = function (sd, rm) {\n    var x = this, Big = x.constructor, n = x.c[0];\n    if (sd !== UNDEFINED) {\n        if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\n            throw Error(INVALID + 'precision');\n        }\n        x = round(new Big(x), sd, rm);\n        for (; x.c.length < sd;)\n            x.c.push(0);\n    }\n    return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Include the sign for negative zero.\n */\nP.valueOf = function () {\n    var x = this, Big = x.constructor;\n    if (Big.strict === true) {\n        throw Error(NAME + 'valueOf disallowed');\n    }\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);\n};\n// Export\nexport var Big = _Big_();\n/// <reference types=\"https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/master/types/big.js/index.d.ts\" />\nexport default Big;\n","import Decimal from \"./lib/big.js\";\nimport { FSharpRef } from \"./Types.js\";\nexport default Decimal;\nexport const get_Zero = new Decimal(0);\nexport const get_One = new Decimal(1);\nexport const get_MinusOne = new Decimal(-1);\nexport const get_MaxValue = new Decimal(\"79228162514264337593543950335\");\nexport const get_MinValue = new Decimal(\"-79228162514264337593543950335\");\nexport function compare(x, y) {\n    return x.cmp(y);\n}\nexport function equals(x, y) {\n    return !x.cmp(y);\n}\nexport function abs(x) {\n    return x.abs();\n}\nexport function round(x, digits = 0) {\n    return x.round(digits, 2 /* ROUND_HALF_EVEN */);\n}\nexport function truncate(x) {\n    return x.round(0, 0 /* ROUND_DOWN */);\n}\nexport function ceiling(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 3 /* ROUND_UP */ : 0 /* ROUND_DOWN */);\n}\nexport function floor(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 0 /* ROUND_DOWN */ : 3 /* ROUND_UP */);\n}\nexport function pow(x, n) {\n    return x.pow(n);\n}\nexport function sqrt(x) {\n    return x.sqrt();\n}\nexport function op_Addition(x, y) {\n    return x.add(y);\n}\nexport function op_Subtraction(x, y) {\n    return x.sub(y);\n}\nexport function op_Multiply(x, y) {\n    return x.mul(y);\n}\nexport function op_Division(x, y) {\n    return x.div(y);\n}\nexport function op_Modulus(x, y) {\n    return x.mod(y);\n}\nexport function op_UnaryNegation(x) {\n    const x2 = new Decimal(x);\n    x2.s = -x2.s || 0;\n    return x2;\n}\nexport const add = op_Addition;\nexport const subtract = op_Subtraction;\nexport const multiply = op_Multiply;\nexport const divide = op_Division;\nexport const remainder = op_Modulus;\nexport const negate = op_UnaryNegation;\nexport function toString(x) {\n    return x.toString();\n}\nexport function tryParse(str, defValue) {\n    try {\n        defValue.contents = new Decimal(str.trim());\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function parse(str) {\n    const defValue = new FSharpRef(get_Zero);\n    if (tryParse(str, defValue)) {\n        return defValue.contents;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\nexport function toNumber(x) {\n    return +x;\n}\nfunction decimalToHex(dec, bitSize) {\n    const hex = new Uint8Array(bitSize / 4 | 0);\n    let hexCount = 1;\n    for (let d = 0; d < dec.length; d++) {\n        let value = dec[d];\n        for (let i = 0; i < hexCount; i++) {\n            const digit = hex[i] * 10 + value | 0;\n            hex[i] = digit & 0xF;\n            value = digit >> 4;\n        }\n        if (value !== 0) {\n            hex[hexCount++] = value;\n        }\n    }\n    return hex.slice(0, hexCount); // digits in reverse order\n}\nfunction hexToDecimal(hex, bitSize) {\n    const dec = new Uint8Array(bitSize * 301 / 1000 + 1 | 0);\n    let decCount = 1;\n    for (let d = hex.length - 1; d >= 0; d--) {\n        let carry = hex[d];\n        for (let i = 0; i < decCount; i++) {\n            const val = dec[i] * 16 + carry | 0;\n            dec[i] = (val % 10) | 0;\n            carry = (val / 10) | 0;\n        }\n        while (carry > 0) {\n            dec[decCount++] = (carry % 10) | 0;\n            carry = (carry / 10) | 0;\n        }\n    }\n    return dec.slice(0, decCount); // digits in reverse order\n}\nfunction setInt32Bits(hexDigits, bits, offset) {\n    for (let i = 0; i < 8; i++) {\n        hexDigits[offset + i] = (bits >> (i * 4)) & 0xF;\n    }\n}\nfunction getInt32Bits(hexDigits, offset) {\n    let bits = 0;\n    for (let i = 0; i < 8; i++) {\n        bits = bits | (hexDigits[offset + i] << (i * 4));\n    }\n    return bits;\n}\nexport function fromIntArray(bits) {\n    return fromInts(bits[0], bits[1], bits[2], bits[3]);\n}\nexport function fromInts(low, mid, high, signExp) {\n    const isNegative = signExp < 0;\n    const scale = (signExp >> 16) & 0x7F;\n    return fromParts(low, mid, high, isNegative, scale);\n}\nexport function fromParts(low, mid, high, isNegative, scale) {\n    const bitSize = 96;\n    const hexDigits = new Uint8Array(bitSize / 4);\n    setInt32Bits(hexDigits, low, 0);\n    setInt32Bits(hexDigits, mid, 8);\n    setInt32Bits(hexDigits, high, 16);\n    const decDigits = hexToDecimal(hexDigits, bitSize);\n    scale = scale & 0x7F;\n    const big = new Decimal(0);\n    big.c = Array.from(decDigits.reverse());\n    big.e = decDigits.length - scale - 1;\n    big.s = isNegative ? -1 : 1;\n    const d = new Decimal(big);\n    return d;\n}\nexport function getBits(d) {\n    const bitSize = 96;\n    const decDigits = Uint8Array.from(d.c);\n    const hexDigits = decimalToHex(decDigits, bitSize);\n    const low = getInt32Bits(hexDigits, 0);\n    const mid = getInt32Bits(hexDigits, 8);\n    const high = getInt32Bits(hexDigits, 16);\n    const decStr = d.toString();\n    const dotPos = decStr.indexOf(\".\");\n    const scale = dotPos < 0 ? 0 : decStr.length - dotPos - 1;\n    const signExp = ((scale & 0x7F) << 16) | (d.s < 0 ? 0x80000000 : 0);\n    return [low, mid, high, signExp];\n}\n// export function makeRangeStepFunction(step: Decimal, last: Decimal) {\n//   const stepComparedWithZero = step.cmp(get_Zero);\n//   if (stepComparedWithZero === 0) {\n//     throw new Error(\"The step of a range cannot be zero\");\n//   }\n//   const stepGreaterThanZero = stepComparedWithZero > 0;\n//   return (x: Decimal) => {\n//     const comparedWithLast = x.cmp(last);\n//     if ((stepGreaterThanZero && comparedWithLast <= 0)\n//       || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n//       return [x, op_Addition(x, step)];\n//     } else {\n//       return undefined;\n//     }\n//   };\n// }\n","// export type decimal = Decimal;\nexport var NumberStyles;\n(function (NumberStyles) {\n    // None = 0x00000000,\n    // AllowLeadingWhite = 0x00000001,\n    // AllowTrailingWhite = 0x00000002,\n    // AllowLeadingSign = 0x00000004,\n    // AllowTrailingSign = 0x00000008,\n    // AllowParentheses = 0x00000010,\n    // AllowDecimalPoint = 0x00000020,\n    // AllowThousands = 0x00000040,\n    // AllowExponent = 0x00000080,\n    // AllowCurrencySymbol = 0x00000100,\n    NumberStyles[NumberStyles[\"AllowHexSpecifier\"] = 512] = \"AllowHexSpecifier\";\n    // Integer = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign,\n    // HexNumber = AllowLeadingWhite | AllowTrailingWhite | AllowHexSpecifier,\n    // Number = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //          AllowTrailingSign | AllowDecimalPoint | AllowThousands,\n    // Float = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //         AllowDecimalPoint | AllowExponent,\n    // Currency = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //            AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol,\n    // Any = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //       AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol | AllowExponent,\n})(NumberStyles || (NumberStyles = {}));\nfunction validResponse(regexMatch, radix) {\n    const [/*all*/ , sign, prefix, digits] = regexMatch;\n    return {\n        sign: sign || \"\",\n        prefix: prefix || \"\",\n        digits,\n        radix,\n    };\n}\nfunction getRange(unsigned, bitsize) {\n    switch (bitsize) {\n        case 8: return unsigned ? [0, 255] : [-128, 127];\n        case 16: return unsigned ? [0, 65535] : [-32768, 32767];\n        case 32: return unsigned ? [0, 4294967295] : [-2147483648, 2147483647];\n        default: throw new Error(\"Invalid bit size.\");\n    }\n}\nfunction getInvalidDigits(radix) {\n    switch (radix) {\n        case 2: return /[^0-1]/;\n        case 8: return /[^0-7]/;\n        case 10: return /[^0-9]/;\n        case 16: return /[^0-9a-fA-F]/;\n        default:\n            throw new Error(\"Invalid Base.\");\n    }\n}\nfunction getRadix(prefix, style) {\n    if (style & NumberStyles.AllowHexSpecifier) {\n        return 16;\n    }\n    else {\n        switch (prefix) {\n            case \"0b\":\n            case \"0B\": return 2;\n            case \"0o\":\n            case \"0O\": return 8;\n            case \"0x\":\n            case \"0X\": return 16;\n            default: return 10;\n        }\n    }\n}\nexport function isValid(str, style, radix) {\n    const integerRegex = /^\\s*([\\+\\-])?(0[xXoObB])?([0-9a-fA-F]+)\\s*$/;\n    const res = integerRegex.exec(str.replace(/_/g, \"\"));\n    if (res != null) {\n        const [/*all*/ , /*sign*/ , prefix, digits] = res;\n        radix = radix || getRadix(prefix, style);\n        const invalidDigits = getInvalidDigits(radix);\n        if (!invalidDigits.test(digits)) {\n            return validResponse(res, radix);\n        }\n    }\n    return null;\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        let v = Number.parseInt(res.sign + res.digits, res.radix);\n        if (!Number.isNaN(v)) {\n            const [umin, umax] = getRange(true, bitsize);\n            if (!unsigned && res.radix !== 10 && v >= umin && v <= umax) {\n                v = v << (32 - bitsize) >> (32 - bitsize);\n            }\n            const [min, max] = getRange(unsigned, bitsize);\n            if (v >= min && v <= max) {\n                return v;\n            }\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function op_UnaryNegation_Int8(x) {\n    return x === -128 ? x : -x;\n}\nexport function op_UnaryNegation_Int16(x) {\n    return x === -32768 ? x : -x;\n}\nexport function op_UnaryNegation_Int32(x) {\n    return x === -2147483648 ? x : -x;\n}\nexport function divRem(x, y, out) {\n    const div = ~~(x / y);\n    const rem = x % y;\n    if (out != null) {\n        out.contents = rem;\n        return div;\n    }\n    else {\n        return [div, rem];\n    }\n}\n","// Adapted from: https://github.com/dcodeIO/long.js/blob/master/src/long.js\n// Apache License 2.0: https://github.com/dcodeIO/long.js/blob/master/LICENSE\n/* tslint:disable */\nimport { symbol } from \"../Numeric.js\";\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nvar wasm = null;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n    ])), {}).exports;\n}\ncatch (e) {\n    // no wasm support :(\n}\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nexport function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n    this.unsigned = !!unsigned;\n}\nLong.prototype.GetHashCode = function () {\n    let h1 = this.unsigned ? 1 : 0;\n    h1 = ((h1 << 5) + h1) ^ this.high;\n    h1 = ((h1 << 5) + h1) ^ this.low;\n    return h1;\n};\nLong.prototype.Equals = function (x) { return equals(this, x); };\nLong.prototype.CompareTo = function (x) { return compare(this, x); };\nLong.prototype.toString = function (radix) { return toString(this, radix); };\nLong.prototype.toJSON = function () { return toString(this); };\nLong.prototype[symbol] = function () {\n    const x = this;\n    return {\n        multiply: y => multiply(x, y),\n        toPrecision: sd => String(x) + (0).toPrecision(sd).substr(1),\n        toExponential: dp => String(x) + (0).toExponential(dp).substr(1),\n        toFixed: dp => String(x) + (0).toFixed(dp).substr(1),\n        toHex: () => toString(x.unsigned ? x : fromBytes(toBytes(x), true), 16),\n    };\n};\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nexport function isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n}\n/**\n * Tests if the specified object is a Long.\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n */\n// Long.isLong = isLong;\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n    if (unsigned) {\n        value >>>= 0;\n        if (cache = (0 <= value && value < 256)) {\n            cachedObj = UINT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n        if (cache)\n            UINT_CACHE[value] = obj;\n        return obj;\n    }\n    else {\n        value |= 0;\n        if (cache = (-128 <= value && value < 128)) {\n            cachedObj = INT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache)\n            INT_CACHE[value] = obj;\n        return obj;\n    }\n}\n/**\n * Returns a Long representing the given 32 bit integer value.\n * @function\n * @param {number} value The 32 bit integer in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromInt = fromInt;\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromNumber(value, unsigned) {\n    if (isNaN(value))\n        return unsigned ? UZERO : ZERO;\n    if (unsigned) {\n        if (value < 0)\n            return UZERO;\n        if (value >= TWO_PWR_64_DBL)\n            return MAX_UNSIGNED_VALUE;\n    }\n    else {\n        if (value <= -TWO_PWR_63_DBL)\n            return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL)\n            return MAX_VALUE;\n    }\n    if (value < 0)\n        return negate(fromNumber(-value, unsigned));\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n * @function\n * @param {number} value The number in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromNumber = fromNumber;\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n}\n/**\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n *  assumed to use 32 bits.\n * @function\n * @param {number} lowBits The low 32 bits\n * @param {number} highBits The high 32 bits\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromBits = fromBits;\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nexport function fromString(str, unsigned, radix) {\n    if (str.length === 0)\n        throw Error('empty string');\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n        return ZERO;\n    if (typeof unsigned === 'number') {\n        // For goog.math.long compatibility\n        radix = unsigned,\n            unsigned = false;\n    }\n    else {\n        unsigned = !!unsigned;\n    }\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    var p = str.indexOf('-');\n    if (p > 0)\n        throw Error('interior hyphen');\n    else if (p === 0) {\n        return negate(fromString(str.substring(1), unsigned, radix));\n    }\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n    for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n            var power = fromNumber(pow_dbl(radix, size));\n            result = add(multiply(result, power), fromNumber(value));\n        }\n        else {\n            result = multiply(result, radixToPower);\n            result = add(result, fromNumber(value));\n        }\n    }\n    result.unsigned = unsigned;\n    return result;\n}\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @function\n * @param {string} str The textual representation of the Long\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromString = fromString;\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromValue(val, unsigned) {\n    if (typeof val === 'number')\n        return fromNumber(val, unsigned);\n    if (typeof val === 'string')\n        return fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n/**\n * Converts the specified value to a Long using the appropriate from* function for its type.\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long}\n */\n// Long.fromValue = fromValue;\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ZERO = fromInt(0);\n/**\n * Signed zero.\n * @type {!Long}\n */\n// Long.ZERO = ZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UZERO = fromInt(0, true);\n/**\n * Unsigned zero.\n * @type {!Long}\n */\n// Long.UZERO = UZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var ONE = fromInt(1);\n/**\n * Signed one.\n * @type {!Long}\n */\n// Long.ONE = ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UONE = fromInt(1, true);\n/**\n * Unsigned one.\n * @type {!Long}\n */\n// Long.UONE = UONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var NEG_ONE = fromInt(-1);\n/**\n * Signed negative one.\n * @type {!Long}\n */\n// Long.NEG_ONE = NEG_ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * Maximum signed value.\n * @type {!Long}\n */\n// Long.MAX_VALUE = MAX_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * Maximum unsigned value.\n * @type {!Long}\n */\n// Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n/**\n * Minimum signed value.\n * @type {!Long}\n */\n// Long.MIN_VALUE = MIN_VALUE;\n/**\n * @alias Long.prototype\n * @inner\n */\n// var LongPrototype = Long.prototype;\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @this {!Long}\n * @returns {number}\n */\nexport function toInt($this) {\n    return $this.unsigned ? $this.low >>> 0 : $this.low;\n}\n;\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @this {!Long}\n * @returns {number}\n */\nexport function toNumber($this) {\n    if ($this.unsigned)\n        return (($this.high >>> 0) * TWO_PWR_32_DBL) + ($this.low >>> 0);\n    return $this.high * TWO_PWR_32_DBL + ($this.low >>> 0);\n}\n;\n/**\n * Converts the Long to a string written in the specified radix.\n * @this {!Long}\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nexport function toString($this, radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    if (isZero($this))\n        return '0';\n    if (isNegative($this)) { // Unsigned Longs are never negative\n        if (equals($this, MIN_VALUE)) {\n            // We need to change the Long value before it can be negated, so we remove\n            // the bottom-most digit in this base and then recurse to do the rest.\n            var radixLong = fromNumber(radix), div = divide($this, radixLong), rem1 = subtract(multiply(div, radixLong), $this);\n            return toString(div, radix) + toInt(rem1).toString(radix);\n        }\n        else\n            return '-' + toString(negate($this), radix);\n    }\n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 6), $this.unsigned), rem = $this;\n    var result = '';\n    while (true) {\n        var remDiv = divide(rem, radixToPower), intval = toInt(subtract(rem, multiply(remDiv, radixToPower))) >>> 0, digits = intval.toString(radix);\n        rem = remDiv;\n        if (isZero(rem))\n            return digits + result;\n        else {\n            while (digits.length < 6)\n                digits = '0' + digits;\n            result = '' + digits + result;\n        }\n    }\n}\n;\n/**\n * Gets the high 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed high bits\n */\nexport function getHighBits($this) {\n    return $this.high;\n}\n;\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned high bits\n */\nexport function getHighBitsUnsigned($this) {\n    return $this.high >>> 0;\n}\n;\n/**\n * Gets the low 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed low bits\n */\nexport function getLowBits($this) {\n    return $this.low;\n}\n;\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned low bits\n */\nexport function getLowBitsUnsigned($this) {\n    return $this.low >>> 0;\n}\n;\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @this {!Long}\n * @returns {number}\n */\nexport function getNumBitsAbs($this) {\n    if (isNegative($this)) // Unsigned Longs are never negative\n        return equals($this, MIN_VALUE) ? 64 : getNumBitsAbs(negate($this));\n    var val = $this.high != 0 ? $this.high : $this.low;\n    for (var bit = 31; bit > 0; bit--)\n        if ((val & (1 << bit)) != 0)\n            break;\n    return $this.high != 0 ? bit + 33 : bit + 1;\n}\n;\n/**\n * Tests if this Long's value equals zero.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isZero($this) {\n    return $this.high === 0 && $this.low === 0;\n}\n;\n/**\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n * @returns {boolean}\n */\n// LongPrototype.eqz = LongPrototype.isZero;\n/**\n * Tests if this Long's value is negative.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isNegative($this) {\n    return !$this.unsigned && $this.high < 0;\n}\n;\n/**\n * Tests if this Long's value is positive.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isPositive($this) {\n    return $this.unsigned || $this.high >= 0;\n}\n;\n/**\n * Tests if this Long's value is odd.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isOdd($this) {\n    return ($this.low & 1) === 1;\n}\n;\n/**\n * Tests if this Long's value is even.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isEven($this) {\n    return ($this.low & 1) === 0;\n}\n;\n/**\n * Tests if this Long's value equals the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function equals($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if ($this.unsigned !== other.unsigned && ($this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n        return false;\n    return $this.high === other.high && $this.low === other.low;\n}\n;\n/**\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.eq = LongPrototype.equals;\n/**\n * Tests if this Long's value differs from the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function notEquals($this, other) {\n    return !equals($this, /* validates */ other);\n}\n;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.neq = LongPrototype.notEquals;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ne = LongPrototype.notEquals;\n/**\n * Tests if this Long's value is less than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThan($this, other) {\n    return compare($this, /* validates */ other) < 0;\n}\n;\n/**\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lt = LongPrototype.lessThan;\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) <= 0;\n}\n;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lte = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.le = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is greater than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThan($this, other) {\n    return compare($this, /* validates */ other) > 0;\n}\n;\n/**\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gt = LongPrototype.greaterThan;\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) >= 0;\n}\n;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n/**\n * Compares this Long's value with the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nexport function compare($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if (equals($this, other))\n        return 0;\n    var thisNeg = isNegative($this), otherNeg = isNegative(other);\n    if (thisNeg && !otherNeg)\n        return -1;\n    if (!thisNeg && otherNeg)\n        return 1;\n    // At this point the sign bits are the same\n    if (!$this.unsigned)\n        return isNegative(subtract($this, other)) ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return (other.high >>> 0) > ($this.high >>> 0) || (other.high === $this.high && (other.low >>> 0) > ($this.low >>> 0)) ? -1 : 1;\n}\n;\n/**\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\n// LongPrototype.comp = LongPrototype.compare;\n/**\n * Negates this Long's value.\n * @this {!Long}\n * @returns {!Long} Negated Long\n */\nexport function negate($this) {\n    if (!$this.unsigned && equals($this, MIN_VALUE))\n        return MIN_VALUE;\n    return add(not($this), ONE);\n}\n;\n/**\n * Negates this Long's value. This is an alias of {@link Long#negate}.\n * @function\n * @returns {!Long} Negated Long\n */\n// LongPrototype.neg = LongPrototype.negate;\n/**\n * Returns the sum of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nexport function add($this, addend) {\n    if (!isLong(addend))\n        addend = fromValue(addend);\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the difference of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nexport function subtract($this, subtrahend) {\n    if (!isLong(subtrahend))\n        subtrahend = fromValue(subtrahend);\n    return add($this, negate(subtrahend));\n}\n;\n/**\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n * @function\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\n// LongPrototype.sub = LongPrototype.subtract;\n/**\n * Returns the product of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nexport function multiply($this, multiplier) {\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    if (!isLong(multiplier))\n        multiplier = fromValue(multiplier);\n    // use wasm support if present\n    if (wasm) {\n        var low = wasm.mul($this.low, $this.high, multiplier.low, multiplier.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero(multiplier))\n        return $this.unsigned ? UZERO : ZERO;\n    if (equals($this, MIN_VALUE))\n        return isOdd(multiplier) ? MIN_VALUE : ZERO;\n    if (equals(multiplier, MIN_VALUE))\n        return isOdd($this) ? MIN_VALUE : ZERO;\n    if (isNegative($this)) {\n        if (isNegative(multiplier))\n            return multiply(negate($this), negate(multiplier));\n        else\n            return negate(multiply(negate($this), multiplier));\n    }\n    else if (isNegative(multiplier))\n        return negate(multiply($this, negate(multiplier)));\n    // If both longs are small, use float multiplication\n    if (lessThan($this, TWO_PWR_24) && lessThan(multiplier, TWO_PWR_24))\n        return fromNumber(toNumber($this) * toNumber(multiplier), $this.unsigned);\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n * @function\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\n// LongPrototype.mul = LongPrototype.multiply;\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nexport function divide($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    if (isZero(divisor))\n        throw Error('division by zero');\n    // use wasm support if present\n    if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (!$this.unsigned &&\n            $this.high === -0x80000000 &&\n            divisor.low === -1 && divisor.high === -1) {\n            // be consistent with non-wasm code path\n            return $this;\n        }\n        var low = ($this.unsigned ? wasm.div_u : wasm.div_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n    if (!$this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (equals($this, MIN_VALUE)) {\n            if (equals(divisor, ONE) || equals(divisor, NEG_ONE))\n                return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n            else if (equals(divisor, MIN_VALUE))\n                return ONE;\n            else {\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                var halfThis = shiftRight($this, 1);\n                approx = shiftLeft(divide(halfThis, divisor), 1);\n                if (equals(approx, ZERO)) {\n                    return isNegative(divisor) ? ONE : NEG_ONE;\n                }\n                else {\n                    rem = subtract($this, multiply(divisor, approx));\n                    res = add(approx, divide(rem, divisor));\n                    return res;\n                }\n            }\n        }\n        else if (equals(divisor, MIN_VALUE))\n            return $this.unsigned ? UZERO : ZERO;\n        if (isNegative($this)) {\n            if (isNegative(divisor))\n                return divide(negate($this), negate(divisor));\n            return negate(divide(negate($this), divisor));\n        }\n        else if (isNegative(divisor))\n            return negate(divide($this, negate(divisor)));\n        res = ZERO;\n    }\n    else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned)\n            divisor = toUnsigned(divisor);\n        if (greaterThan(divisor, $this))\n            return UZERO;\n        if (greaterThan(divisor, shiftRightUnsigned($this, 1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n            return UONE;\n        res = UZERO;\n    }\n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    rem = $this;\n    while (greaterThanOrEqual(rem, divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(toNumber(rem) / toNumber(divisor)));\n        // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), \n        // Decrease the approximation until it is smaller than the remainder.  Note\n        // that if it is too large, the product overflows and is negative.\n        approxRes = fromNumber(approx), approxRem = multiply(approxRes, divisor);\n        while (isNegative(approxRem) || greaterThan(approxRem, rem)) {\n            approx -= delta;\n            approxRes = fromNumber(approx, $this.unsigned);\n            approxRem = multiply(approxRes, divisor);\n        }\n        // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n        if (isZero(approxRes))\n            approxRes = ONE;\n        res = add(res, approxRes);\n        rem = subtract(rem, approxRem);\n    }\n    return res;\n}\n;\n/**\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\n// LongPrototype.div = LongPrototype.divide;\n/**\n * Returns this Long modulo the specified.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nexport function modulo($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    // use wasm support if present\n    if (wasm) {\n        var low = ($this.unsigned ? wasm.rem_u : wasm.rem_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    return subtract($this, multiply(divide($this, divisor), divisor));\n}\n;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.mod = LongPrototype.modulo;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.rem = LongPrototype.modulo;\n/**\n * Returns the bitwise NOT of this Long.\n * @this {!Long}\n * @returns {!Long}\n */\nexport function not($this) {\n    return fromBits(~$this.low, ~$this.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function and($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low & other.low, $this.high & other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function or($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low | other.low, $this.high | other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function xor($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low ^ other.low, $this.high ^ other.high, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftLeft($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits($this.low << numBits, ($this.high << numBits) | ($this.low >>> (32 - numBits)), $this.unsigned);\n    else\n        return fromBits(0, $this.low << (numBits - 32), $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shl = LongPrototype.shiftLeft;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRight($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits(($this.low >>> numBits) | ($this.high << (32 - numBits)), $this.high >> numBits, $this.unsigned);\n    else\n        return fromBits($this.high >> (numBits - 32), $this.high >= 0 ? 0 : -1, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr = LongPrototype.shiftRight;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRightUnsigned($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    numBits &= 63;\n    if (numBits === 0)\n        return $this;\n    else {\n        var high = $this.high;\n        if (numBits < 32) {\n            var low = $this.low;\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, $this.unsigned);\n        }\n        else if (numBits === 32)\n            return fromBits(high, 0, $this.unsigned);\n        else\n            return fromBits(high >>> (numBits - 32), 0, $this.unsigned);\n    }\n}\n;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits rotated to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateLeft = function rotateLeft(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.low << numBits) | (this.high >>> b)), ((this.high << numBits) | (this.low >>> b)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.high << numBits) | (this.low >>> b)), ((this.low << numBits) | (this.high >>> b)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotl = LongPrototype.rotateLeft;\n/**\n * Returns this Long with bits rotated to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateRight = function rotateRight(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.high << b) | (this.low >>> numBits)), ((this.low << b) | (this.high >>> numBits)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.low << b) | (this.high >>> numBits)), ((this.high << b) | (this.low >>> numBits)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotr = LongPrototype.rotateRight;\n/**\n * Converts this Long to signed.\n * @this {!Long}\n * @returns {!Long} Signed long\n */\nexport function toSigned($this) {\n    if (!$this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, false);\n}\n;\n/**\n * Converts this Long to unsigned.\n * @this {!Long}\n * @returns {!Long} Unsigned long\n */\nexport function toUnsigned($this) {\n    if ($this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, true);\n}\n;\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @this {!Long}\n * @returns {!Array.<number>} Byte representation\n */\nexport function toBytes($this, le) {\n    return le ? toBytesLE($this) : toBytesBE($this);\n}\n;\n/**\n * Converts this Long to its little endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Little endian byte representation\n */\nexport function toBytesLE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        lo & 0xff,\n        lo >>> 8 & 0xff,\n        lo >>> 16 & 0xff,\n        lo >>> 24,\n        hi & 0xff,\n        hi >>> 8 & 0xff,\n        hi >>> 16 & 0xff,\n        hi >>> 24\n    ];\n}\n;\n/**\n * Converts this Long to its big endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Big endian byte representation\n */\nexport function toBytesBE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        hi >>> 24,\n        hi >>> 16 & 0xff,\n        hi >>> 8 & 0xff,\n        hi & 0xff,\n        lo >>> 24,\n        lo >>> 16 & 0xff,\n        lo >>> 8 & 0xff,\n        lo & 0xff\n    ];\n}\n;\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytes(bytes, unsigned, le) {\n    return le ? fromBytesLE(bytes, unsigned) : fromBytesBE(bytes, unsigned);\n}\n;\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] |\n        bytes[1] << 8 |\n        bytes[2] << 16 |\n        bytes[3] << 24, bytes[4] |\n        bytes[5] << 8 |\n        bytes[6] << 16 |\n        bytes[7] << 24, unsigned);\n}\n;\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 |\n        bytes[5] << 16 |\n        bytes[6] << 8 |\n        bytes[7], bytes[0] << 24 |\n        bytes[1] << 16 |\n        bytes[2] << 8 |\n        bytes[3], unsigned);\n}\n;\n","import { isValid } from \"./Int32.js\";\nimport * as LongLib from \"./lib/long.js\";\nexport default LongLib.Long;\nexport const get_Zero = LongLib.ZERO;\nexport const get_One = LongLib.ONE;\nexport const op_Addition = LongLib.add;\nexport const op_Subtraction = LongLib.subtract;\nexport const op_Multiply = LongLib.multiply;\nexport const op_Division = LongLib.divide;\nexport const op_Modulus = LongLib.modulo;\nexport const op_UnaryNegation = LongLib.negate;\nexport const op_LeftShift = LongLib.shiftLeft;\nexport const op_RightShift = LongLib.shiftRight;\nexport const op_RightShiftUnsigned = LongLib.shiftRightUnsigned;\nexport const op_BitwiseAnd = LongLib.and;\nexport const op_BitwiseOr = LongLib.or;\nexport const op_ExclusiveOr = LongLib.xor;\nexport const op_LogicalNot = LongLib.not;\nexport const op_LessThan = LongLib.lessThan;\nexport const op_LessThanOrEqual = LongLib.lessThanOrEqual;\nexport const op_GreaterThan = LongLib.greaterThan;\nexport const op_GreaterThanOrEqual = LongLib.greaterThanOrEqual;\nexport const op_Equality = LongLib.equals;\nexport const op_Inequality = LongLib.notEquals;\nexport const equals = LongLib.equals;\nexport const compare = LongLib.compare;\nexport const fromInt = LongLib.fromInt;\nexport const fromBits = LongLib.fromBits;\nexport const fromBytes = LongLib.fromBytes;\nexport const fromNumber = LongLib.fromNumber;\nexport const fromString = LongLib.fromString;\nexport const fromValue = LongLib.fromValue;\nexport const toInt = LongLib.toInt;\nexport const toBytes = LongLib.toBytes;\nexport const toNumber = LongLib.toNumber;\nexport const toString = LongLib.toString;\nexport const getLowBits = LongLib.getLowBits;\nexport const getHighBits = LongLib.getHighBits;\nexport const getLowBitsUnsigned = LongLib.getLowBitsUnsigned;\nexport const getHighBitsUnsigned = LongLib.getHighBitsUnsigned;\nfunction getMaxValue(unsigned, radix, isNegative) {\n    switch (radix) {\n        case 2: return unsigned ?\n            \"1111111111111111111111111111111111111111111111111111111111111111\" :\n            (isNegative ? \"1000000000000000000000000000000000000000000000000000000000000000\"\n                : \"111111111111111111111111111111111111111111111111111111111111111\");\n        case 8: return unsigned ?\n            \"1777777777777777777777\" :\n            (isNegative ? \"1000000000000000000000\" : \"777777777777777777777\");\n        case 10: return unsigned ?\n            \"18446744073709551615\" :\n            (isNegative ? \"9223372036854775808\" : \"9223372036854775807\");\n        case 16: return unsigned ?\n            \"FFFFFFFFFFFFFFFF\" :\n            (isNegative ? \"8000000000000000\" : \"7FFFFFFFFFFFFFFF\");\n        default: throw new Error(\"Invalid radix.\");\n    }\n}\nexport function abs(x) {\n    if (!x.unsigned && LongLib.isNegative(x)) {\n        return op_UnaryNegation(x);\n    }\n    else {\n        return x;\n    }\n}\nexport function fromInteger(value, unsigned, kind) {\n    let x = value;\n    let xh = 0;\n    switch (kind) {\n        case 0:\n            x = value << 24 >> 24;\n            xh = x;\n            break;\n        case 4:\n            x = value << 24 >>> 24;\n            break;\n        case 1:\n            x = value << 16 >> 16;\n            xh = x;\n            break;\n        case 5:\n            x = value << 16 >>> 16;\n            break;\n        case 2:\n            x = value >> 0;\n            xh = x;\n            break;\n        case 6:\n            x = value >>> 0;\n            break;\n    }\n    return LongLib.fromBits(x, xh >> 31, unsigned);\n}\nexport function parse(str, style, unsigned, _bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        const lessOrEqual = (x, y) => {\n            const len = Math.max(x.length, y.length);\n            return x.padStart(len, \"0\") <= y.padStart(len, \"0\");\n        };\n        const isNegative = res.sign === \"-\";\n        const maxValue = getMaxValue(unsigned || res.radix !== 10, res.radix, isNegative);\n        if (lessOrEqual(res.digits.toUpperCase(), maxValue)) {\n            str = isNegative ? res.sign + res.digits : res.digits;\n            return LongLib.fromString(str, unsigned, res.radix);\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function unixEpochMillisecondsToTicks(ms, offset) {\n    return op_Multiply(op_Addition(op_Addition(LongLib.fromNumber(ms), 62135596800000), offset), 10000);\n}\nexport function ticksToUnixEpochMilliseconds(ticks) {\n    return LongLib.toNumber(op_Subtraction(op_Division(ticks, 10000), 62135596800000));\n}\n// export function makeRangeStepFunction(step: Long, last: Long, unsigned: boolean) {\n//   const stepComparedWithZero = LongLib.compare(step, unsigned ? LongLib.UZERO : LongLib.ZERO);\n//   if (stepComparedWithZero === 0) {\n//     throw new Error(\"The step of a range cannot be zero\");\n//   }\n//   const stepGreaterThanZero = stepComparedWithZero > 0;\n//   return (x: Long) => {\n//     const comparedWithLast = LongLib.compare(x, last);\n//     if ((stepGreaterThanZero && comparedWithLast <= 0)\n//       || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n//       return [x, op_Addition(x, step)];\n//     } else {\n//       return undefined;\n//     }\n//   };\n// }\nexport function divRem(x, y, out) {\n    const div = op_Division(x, y);\n    const rem = op_Modulus(x, y);\n    if (out != null) {\n        out.contents = rem;\n        return div;\n    }\n    else {\n        return [div, rem];\n    }\n}\n","import { Record, Union } from \"./Types.js\";\nimport { combineHashCodes, equalArraysWith, stringHash } from \"./Util.js\";\nimport Decimal from \"./Decimal.js\";\nimport { fromInt as int64FromInt } from \"./Long.js\";\nexport class CaseInfo {\n    constructor(declaringType, tag, name, fields) {\n        this.declaringType = declaringType;\n        this.tag = tag;\n        this.name = name;\n        this.fields = fields;\n    }\n}\nexport class MethodInfo {\n    constructor(name, parameters, returnType) {\n        this.name = name;\n        this.parameters = parameters;\n        this.returnType = returnType;\n    }\n}\nexport class TypeInfo {\n    constructor(fullname, generics, construct, parent, fields, cases, enumCases) {\n        this.fullname = fullname;\n        this.generics = generics;\n        this.construct = construct;\n        this.parent = parent;\n        this.fields = fields;\n        this.cases = cases;\n        this.enumCases = enumCases;\n    }\n    toString() {\n        return fullName(this);\n    }\n    GetHashCode() {\n        return getHashCode(this);\n    }\n    Equals(other) {\n        return equals(this, other);\n    }\n}\nexport class GenericParameter extends TypeInfo {\n    constructor(name) {\n        super(name);\n    }\n}\nexport function getGenerics(t) {\n    return t.generics != null ? t.generics : [];\n}\nexport function getHashCode(t) {\n    const fullnameHash = stringHash(t.fullname);\n    const genHashes = getGenerics(t).map(getHashCode);\n    return combineHashCodes([fullnameHash, ...genHashes]);\n}\nexport function equals(t1, t2) {\n    if (t1.fullname === \"\") { // Anonymous records\n        return t2.fullname === \"\"\n            && equalArraysWith(getRecordElements(t1), getRecordElements(t2), ([k1, v1], [k2, v2]) => k1 === k2 && equals(v1, v2));\n    }\n    else {\n        return t1.fullname === t2.fullname\n            && equalArraysWith(getGenerics(t1), getGenerics(t2), equals);\n    }\n}\nexport function class_type(fullname, generics, construct, parent) {\n    return new TypeInfo(fullname, generics, construct, parent);\n}\nexport function record_type(fullname, generics, construct, fields) {\n    return new TypeInfo(fullname, generics, construct, undefined, fields);\n}\nexport function anonRecord_type(...fields) {\n    return new TypeInfo(\"\", undefined, undefined, undefined, () => fields);\n}\nexport function union_type(fullname, generics, construct, cases) {\n    const t = new TypeInfo(fullname, generics, construct, undefined, undefined, () => {\n        const caseNames = construct.prototype.cases();\n        return cases().map((fields, i) => new CaseInfo(t, i, caseNames[i], fields));\n    });\n    return t;\n}\nexport function tuple_type(...generics) {\n    return new TypeInfo(\"System.Tuple`\" + generics.length, generics);\n}\nexport function delegate_type(...generics) {\n    return new TypeInfo(\"System.Func`\" + generics.length, generics);\n}\nexport function lambda_type(argType, returnType) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpFunc`2\", [argType, returnType]);\n}\nexport function option_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpOption`1\", [generic]);\n}\nexport function list_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Collections.FSharpList`1\", [generic]);\n}\nexport function array_type(generic) {\n    return new TypeInfo(\"[]\", [generic]);\n}\nexport function enum_type(fullname, underlyingType, enumCases) {\n    return new TypeInfo(fullname, [underlyingType], undefined, undefined, undefined, undefined, enumCases);\n}\nexport function measure_type(fullname) {\n    return new TypeInfo(fullname);\n}\nexport function generic_type(name) {\n    return new GenericParameter(name);\n}\nexport const obj_type = new TypeInfo(\"System.Object\");\nexport const unit_type = new TypeInfo(\"Microsoft.FSharp.Core.Unit\");\nexport const char_type = new TypeInfo(\"System.Char\");\nexport const string_type = new TypeInfo(\"System.String\");\nexport const bool_type = new TypeInfo(\"System.Boolean\");\nexport const int8_type = new TypeInfo(\"System.SByte\");\nexport const uint8_type = new TypeInfo(\"System.Byte\");\nexport const int16_type = new TypeInfo(\"System.Int16\");\nexport const uint16_type = new TypeInfo(\"System.UInt16\");\nexport const int32_type = new TypeInfo(\"System.Int32\");\nexport const uint32_type = new TypeInfo(\"System.UInt32\");\nexport const float32_type = new TypeInfo(\"System.Single\");\nexport const float64_type = new TypeInfo(\"System.Double\");\nexport const decimal_type = new TypeInfo(\"System.Decimal\");\nexport function name(info) {\n    if (Array.isArray(info)) {\n        return info[0];\n    }\n    else if (info instanceof TypeInfo) {\n        const elemType = getElementType(info);\n        if (elemType != null) {\n            return name(elemType) + \"[]\";\n        }\n        else {\n            const i = info.fullname.lastIndexOf(\".\");\n            return i === -1 ? info.fullname : info.fullname.substr(i + 1);\n        }\n    }\n    else {\n        return info.name;\n    }\n}\nexport function fullName(t) {\n    const elemType = getElementType(t);\n    if (elemType != null) {\n        return fullName(elemType) + \"[]\";\n    }\n    else if (t.generics == null || t.generics.length === 0) {\n        return t.fullname;\n    }\n    else {\n        return t.fullname + \"[\" + t.generics.map((x) => fullName(x)).join(\",\") + \"]\";\n    }\n}\nexport function namespace(t) {\n    const elemType = getElementType(t);\n    if (elemType != null) {\n        return namespace(elemType);\n    }\n    else {\n        const i = t.fullname.lastIndexOf(\".\");\n        return i === -1 ? \"\" : t.fullname.substr(0, i);\n    }\n}\nexport function isArray(t) {\n    return getElementType(t) != null;\n}\nexport function getElementType(t) {\n    var _a;\n    return t.fullname === \"[]\" && ((_a = t.generics) === null || _a === void 0 ? void 0 : _a.length) === 1 ? t.generics[0] : undefined;\n}\nexport function isGenericType(t) {\n    return t.generics != null && t.generics.length > 0;\n}\nexport function isGenericParameter(t) {\n    return t instanceof GenericParameter;\n}\nexport function isEnum(t) {\n    return t.enumCases != null && t.enumCases.length > 0;\n}\nexport function isSubclassOf(t1, t2) {\n    return t1.parent != null && (t1.parent.Equals(t2) || isSubclassOf(t1.parent, t2));\n}\nfunction isErasedToNumber(t) {\n    return isEnum(t) || [\n        int8_type.fullname,\n        uint8_type.fullname,\n        int16_type.fullname,\n        uint16_type.fullname,\n        int32_type.fullname,\n        uint32_type.fullname,\n        float32_type.fullname,\n        float64_type.fullname,\n    ].includes(t.fullname);\n}\nexport function isInstanceOfType(t, o) {\n    switch (typeof o) {\n        case \"boolean\":\n            return t.fullname === bool_type.fullname;\n        case \"string\":\n            return t.fullname === string_type.fullname;\n        case \"function\":\n            return isFunction(t);\n        case \"number\":\n            return isErasedToNumber(t);\n        default:\n            return t.construct != null && o instanceof t.construct;\n    }\n}\n/**\n * This doesn't replace types for fields (records) or cases (unions)\n * but it should be enough for type comparison purposes\n */\nexport function getGenericTypeDefinition(t) {\n    return t.generics == null ? t : new TypeInfo(t.fullname, t.generics.map(() => obj_type));\n}\nexport function getEnumUnderlyingType(t) {\n    var _a;\n    return (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0];\n}\nexport function getEnumValues(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[1]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function getEnumNames(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[0]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nfunction getEnumCase(t, v) {\n    if (t.enumCases != null) {\n        if (typeof v === \"string\") {\n            for (const kv of t.enumCases) {\n                if (kv[0] === v) {\n                    return kv;\n                }\n            }\n            throw new Error(`'${v}' was not found in ${t.fullname}`);\n        }\n        else {\n            for (const kv of t.enumCases) {\n                if (kv[1] === v) {\n                    return kv;\n                }\n            }\n            // .NET returns the number even if it doesn't match any of the cases\n            return [\"\", v];\n        }\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function parseEnum(t, str) {\n    // TODO: better int parsing here, parseInt ceils floats: \"4.8\" -> 4\n    const value = parseInt(str, 10);\n    return getEnumCase(t, isNaN(value) ? str : value)[1];\n}\nexport function tryParseEnum(t, str, defValue) {\n    try {\n        defValue.contents = parseEnum(t, str);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function getEnumName(t, v) {\n    return getEnumCase(t, v)[0];\n}\nexport function isEnumDefined(t, v) {\n    try {\n        const kv = getEnumCase(t, v);\n        return kv[0] != null && kv[0] !== \"\";\n    }\n    catch (_a) {\n        // supress error\n    }\n    return false;\n}\n// FSharpType\nexport function getUnionCases(t) {\n    if (t.cases != null) {\n        return t.cases();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# union type`);\n    }\n}\nexport function getRecordElements(t) {\n    if (t.fields != null) {\n        return t.fields();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# record type`);\n    }\n}\nexport function getTupleElements(t) {\n    if (isTuple(t) && t.generics != null) {\n        return t.generics;\n    }\n    else {\n        throw new Error(`${t.fullname} is not a tuple type`);\n    }\n}\nexport function getFunctionElements(t) {\n    if (isFunction(t) && t.generics != null) {\n        const gen = t.generics;\n        return [gen[0], gen[1]];\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# function type`);\n    }\n}\nexport function isUnion(t) {\n    return t instanceof TypeInfo ? t.cases != null : t instanceof Union;\n}\nexport function isRecord(t) {\n    return t instanceof TypeInfo ? t.fields != null : t instanceof Record;\n}\nexport function isTuple(t) {\n    return t.fullname.startsWith(\"System.Tuple\");\n}\n// In .NET this is false for delegates\nexport function isFunction(t) {\n    return t.fullname === \"Microsoft.FSharp.Core.FSharpFunc`2\";\n}\n// FSharpValue\nexport function getUnionFields(v, t) {\n    const cases = getUnionCases(t);\n    const case_ = cases[v.tag];\n    if (case_ == null) {\n        throw new Error(`Cannot find case ${v.name} in union type`);\n    }\n    return [case_, v.fields];\n}\nexport function getUnionCaseFields(uci) {\n    return uci.fields == null ? [] : uci.fields;\n}\n// This is used as replacement of `FSharpValue.GetRecordFields`\n// For `FSharpTypes.GetRecordFields` see `getRecordElements`\n// Object.keys returns keys in the order they were added to the object\nexport function getRecordFields(v) {\n    return Object.keys(v).map((k) => v[k]);\n}\nexport function getRecordField(v, field) {\n    return v[field[0]];\n}\nexport function getTupleFields(v) {\n    return v;\n}\nexport function getTupleField(v, i) {\n    return v[i];\n}\nexport function makeUnion(uci, values) {\n    const expectedLength = (uci.fields || []).length;\n    if (values.length !== expectedLength) {\n        throw new Error(`Expected an array of length ${expectedLength} but got ${values.length}`);\n    }\n    return uci.declaringType.construct != null\n        ? new uci.declaringType.construct(uci.tag, ...values)\n        : {};\n}\nexport function makeRecord(t, values) {\n    const fields = getRecordElements(t);\n    if (fields.length !== values.length) {\n        throw new Error(`Expected an array of length ${fields.length} but got ${values.length}`);\n    }\n    return t.construct != null\n        ? new t.construct(...values)\n        : fields.reduce((obj, [key, _t], i) => {\n            obj[key] = values[i];\n            return obj;\n        }, {});\n}\nexport function makeTuple(values, _t) {\n    return values;\n}\nexport function makeGenericType(t, generics) {\n    return new TypeInfo(t.fullname, generics, t.construct, t.parent, t.fields, t.cases);\n}\nexport function createInstance(t, consArgs) {\n    // TODO: Check if consArgs length is same as t.construct?\n    // (Arg types can still be different)\n    if (typeof t.construct === \"function\") {\n        return new t.construct(...(consArgs !== null && consArgs !== void 0 ? consArgs : []));\n    }\n    else if (isErasedToNumber(t)) {\n        return 0;\n    }\n    else {\n        switch (t.fullname) {\n            case obj_type.fullname:\n                return {};\n            case bool_type.fullname:\n                return false;\n            case \"System.Int64\":\n            case \"System.UInt64\":\n                // typeof<int64> and typeof<uint64> get transformed to class_type(\"System.Int64\")\n                // and class_type(\"System.UInt64\") respectively. Test for the name of the primitive type.\n                return int64FromInt(0);\n            case decimal_type.fullname:\n                return new Decimal(0);\n            case char_type.fullname:\n                // Even though char is a value type, it's erased to string, and Unchecked.defaultof<char> is null\n                return null;\n            default:\n                throw new Error(`Cannot access constructor of ${t.fullname}`);\n        }\n    }\n}\nexport function getValue(propertyInfo, v) {\n    return v[propertyInfo[0]];\n}\n// Fable.Core.Reflection\nfunction assertUnion(x) {\n    if (!(x instanceof Union)) {\n        throw new Error(`Value is not an F# union type`);\n    }\n}\nexport function getCaseTag(x) {\n    assertUnion(x);\n    return x.tag;\n}\nexport function getCaseName(x) {\n    assertUnion(x);\n    return x.cases()[x.tag];\n}\nexport function getCaseFields(x) {\n    assertUnion(x);\n    return x.fields;\n}\n","/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long.js\";\nimport { compareDates, dateOffset, padWithZeros } from \"./Util.js\";\nexport function dateOffsetToString(offset) {\n    const isMinus = offset < 0;\n    offset = Math.abs(offset);\n    const hours = ~~(offset / 3600000);\n    const minutes = (offset % 3600000) / 60000;\n    return (isMinus ? \"-\" : \"+\") +\n        padWithZeros(hours, 2) + \":\" +\n        padWithZeros(minutes, 2);\n}\nexport function dateToHalfUTCString(date, half) {\n    const str = date.toISOString();\n    return half === \"first\"\n        ? str.substring(0, str.indexOf(\"T\"))\n        : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction dateToISOString(d, utc) {\n    if (utc) {\n        return d.toISOString();\n    }\n    else {\n        // JS Date is always local\n        const printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n        return padWithZeros(d.getFullYear(), 4) + \"-\" +\n            padWithZeros(d.getMonth() + 1, 2) + \"-\" +\n            padWithZeros(d.getDate(), 2) + \"T\" +\n            padWithZeros(d.getHours(), 2) + \":\" +\n            padWithZeros(d.getMinutes(), 2) + \":\" +\n            padWithZeros(d.getSeconds(), 2) + \".\" +\n            padWithZeros(d.getMilliseconds(), 3) +\n            (printOffset ? dateOffsetToString(d.getTimezoneOffset() * -60000) : \"\");\n    }\n}\nfunction dateToISOStringWithOffset(dateWithOffset, offset) {\n    const str = dateWithOffset.toISOString();\n    return str.substring(0, str.length - 1) + dateOffsetToString(offset);\n}\nfunction dateToStringWithCustomFormat(date, format, utc) {\n    return format.replace(/(\\w)\\1*/g, (match) => {\n        let rep = Number.NaN;\n        switch (match.substring(0, 1)) {\n            case \"y\":\n                const y = utc ? date.getUTCFullYear() : date.getFullYear();\n                rep = match.length < 4 ? y % 100 : y;\n                break;\n            case \"M\":\n                rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                break;\n            case \"d\":\n                rep = utc ? date.getUTCDate() : date.getDate();\n                break;\n            case \"H\":\n                rep = utc ? date.getUTCHours() : date.getHours();\n                break;\n            case \"h\":\n                const h = utc ? date.getUTCHours() : date.getHours();\n                rep = h > 12 ? h % 12 : h;\n                break;\n            case \"m\":\n                rep = utc ? date.getUTCMinutes() : date.getMinutes();\n                break;\n            case \"s\":\n                rep = utc ? date.getUTCSeconds() : date.getSeconds();\n                break;\n            case \"f\":\n                rep = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n                break;\n        }\n        if (Number.isNaN(rep)) {\n            return match;\n        }\n        else {\n            return (rep < 10 && match.length > 1) ? \"0\" + rep : \"\" + rep;\n        }\n    });\n}\nfunction dateToStringWithOffset(date, format) {\n    var _a, _b, _c;\n    const d = new Date(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0));\n    if (typeof format !== \"string\") {\n        return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + dateOffsetToString(((_b = date.offset) !== null && _b !== void 0 ? _b : 0));\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\": return dateToHalfUTCString(d, \"first\");\n            case \"T\":\n            case \"t\": return dateToHalfUTCString(d, \"second\");\n            case \"O\":\n            case \"o\": return dateToISOStringWithOffset(d, ((_c = date.offset) !== null && _c !== void 0 ? _c : 0));\n            default: throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(d, format, true);\n    }\n}\nfunction dateToStringWithKind(date, format) {\n    const utc = date.kind === 1 /* UTC */;\n    if (typeof format !== \"string\") {\n        return utc ? date.toUTCString() : date.toLocaleString();\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\":\n                return utc ? dateToHalfUTCString(date, \"first\") : date.toLocaleDateString();\n            case \"T\":\n            case \"t\":\n                return utc ? dateToHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n            case \"O\":\n            case \"o\":\n                return dateToISOString(date, utc);\n            default:\n                throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(date, format, utc);\n    }\n}\nexport function toString(date, format, _provider) {\n    return date.offset != null\n        ? dateToStringWithOffset(date, format)\n        : dateToStringWithKind(date, format);\n}\nexport function DateTime(value, kind) {\n    const d = new Date(value);\n    d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n    return d;\n}\nexport function fromTicks(ticks, kind) {\n    ticks = fromValue(ticks);\n    kind = kind != null ? kind : 2 /* Local */; // better default than Unspecified\n    let date = DateTime(ticksToUnixEpochMilliseconds(ticks), kind);\n    // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n    // If kind is anything but UTC, that means that the tick number was not\n    // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n    if (kind !== 1 /* UTC */) {\n        date = DateTime(date.getTime() - dateOffset(date), kind);\n    }\n    return date;\n}\nexport function fromDateTimeOffset(date, kind) {\n    var _a;\n    switch (kind) {\n        case 1 /* UTC */: return DateTime(date.getTime(), 1 /* UTC */);\n        case 2 /* Local */: return DateTime(date.getTime(), 2 /* Local */);\n        default:\n            const d = DateTime(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0), kind);\n            return DateTime(d.getTime() - dateOffset(d), kind);\n    }\n}\nexport function getTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), dateOffset(date));\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTime(-62135596800000, 0 /* Unspecified */);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTime(253402300799999, 0 /* Unspecified */);\n}\nexport function parseRaw(input) {\n    function fail() {\n        throw new Error(`The string is not a valid Date: ${input}`);\n    }\n    if (input === null || input.trim() === \"\") {\n        fail();\n    }\n    // ISO dates without TZ are parsed as UTC. Adding time without TZ keeps them local.\n    if (input.length === 10 && input[4] === \"-\" && input[7] === \"-\") {\n        input += \"T00:00:00\";\n    }\n    let date = new Date(input);\n    let offset = null;\n    if (isNaN(date.getTime())) {\n        // Try to check strings JS Date cannot parse (see #1045, #1422)\n        // tslint:disable-next-line:max-line-length\n        const m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*(Z|[+-]([01]?\\d):?([0-5]?\\d)?)?\\s*$/.exec(input);\n        if (m != null) {\n            let baseDate;\n            let timeInSeconds = 0;\n            if (m[2] != null) {\n                const timeParts = m[2].split(\":\");\n                timeInSeconds =\n                    parseInt(timeParts[0], 10) * 3600 +\n                        parseInt(timeParts[1] || \"0\", 10) * 60 +\n                        parseFloat(timeParts[2] || \"0\");\n                if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n                    timeInSeconds += 720;\n                }\n            }\n            if (m[4] != null) { // There's an offset, parse as UTC\n                if (m[1] != null) {\n                    baseDate = new Date(m[1] + \" UTC\");\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n                }\n                if (m[4] === \"Z\") {\n                    offset = \"Z\";\n                }\n                else {\n                    let offsetInMinutes = parseInt(m[5], 10) * 60 + parseInt(m[6] || \"0\", 10);\n                    if (m[4][0] === \"-\") {\n                        offsetInMinutes *= -1;\n                    }\n                    offset = offsetInMinutes;\n                    timeInSeconds -= offsetInMinutes * 60;\n                }\n            }\n            else {\n                if (m[1] != null) {\n                    baseDate = new Date(m[1]);\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate());\n                }\n            }\n            date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n            // correct for daylight savings time\n            date = new Date(date.getTime() + (date.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000);\n        }\n        else {\n            fail();\n        }\n        // Check again the date is valid after transformations, see #2229\n        if (isNaN(date.getTime())) {\n            fail();\n        }\n    }\n    return [date, offset];\n}\nexport function parse(str, detectUTC = false) {\n    const [date, offset] = parseRaw(str);\n    // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n    // Newtonsoft.Json uses UTC if the offset is \"Z\"\n    const kind = offset != null\n        ? (detectUTC && offset === \"Z\" ? 1 /* UTC */ : 2 /* Local */)\n        : 0 /* Unspecified */;\n    return DateTime(date.getTime(), kind);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexport function create(year, month, day, h = 0, m = 0, s = 0, ms = 0, kind) {\n    const dateValue = kind === 1 /* UTC */\n        ? Date.UTC(year, month - 1, day, h, m, s, ms)\n        : new Date(year, month - 1, day, h, m, s, ms).getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    const date = DateTime(dateValue, kind);\n    if (year <= 99) {\n        date.setFullYear(year, month - 1, day);\n    }\n    return date;\n}\nexport function now() {\n    return DateTime(Date.now(), 2 /* Local */);\n}\nexport function utcNow() {\n    return DateTime(Date.now(), 1 /* UTC */);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function daysInMonth(year, month) {\n    return month === 2\n        ? (isLeapYear(year) ? 29 : 28)\n        : (month >= 8 ? (month % 2 === 0 ? 31 : 30) : (month % 2 === 0 ? 30 : 31));\n}\nexport function toUniversalTime(date) {\n    return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\nexport function toLocalTime(date) {\n    return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\nexport function specifyKind(d, kind) {\n    return create(year(d), month(d), day(d), hour(d), minute(d), second(d), millisecond(d), kind);\n}\nexport function timeOfDay(d) {\n    return hour(d) * 3600000\n        + minute(d) * 60000\n        + second(d) * 1000\n        + millisecond(d);\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nexport function day(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nexport function hour(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nexport function millisecond(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nexport function month(d) {\n    return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nexport function year(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nexport function dayOfYear(d) {\n    const _year = year(d);\n    const _month = month(d);\n    let _day = day(d);\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    const newDate = DateTime(d.getTime() + ts, d.kind);\n    if (d.kind === 2 /* Local */) {\n        const oldTzOffset = d.getTimezoneOffset();\n        const newTzOffset = newDate.getTimezoneOffset();\n        return oldTzOffset !== newTzOffset\n            ? DateTime(newDate.getTime() + (newTzOffset - oldTzOffset) * 60000, d.kind)\n            : newDate;\n    }\n    else {\n        return newDate;\n    }\n}\nexport function addDays(d, v) {\n    return add(d, v * 86400000);\n}\nexport function addHours(d, v) {\n    return add(d, v * 3600000);\n}\nexport function addMinutes(d, v) {\n    return add(d, v * 60000);\n}\nexport function addSeconds(d, v) {\n    return add(d, v * 1000);\n}\nexport function addMilliseconds(d, v) {\n    return add(d, v);\n}\nexport function addYears(d, v) {\n    const newMonth = month(d);\n    const newYear = year(d) + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function addMonths(d, v) {\n    let newMonth = month(d) + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = year(d) + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\"\n        ? add(d, -that)\n        : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport const compare = compareDates;\nexport const compareTo = compareDates;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function isDaylightSavingTime(x) {\n    const jan = new Date(x.getFullYear(), 0, 1);\n    const jul = new Date(x.getFullYear(), 6, 1);\n    return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n    return Math.min(janOffset, julOffset) === tOffset;\n}\nexport default DateTime;\n","import { toString as dateToString } from \"./Date.js\";\nimport { compare as numericCompare, isNumeric, multiply, toExponential, toFixed, toHex, toPrecision } from \"./Numeric.js\";\nimport { escape } from \"./RegExp.js\";\nimport { toString } from \"./Types.js\";\nconst fsFormatRegExp = /(^|[^%])%([0+\\- ]*)(\\*|\\d+)?(?:\\.(\\d+))?(\\w)/g;\nconst interpolateRegExp = /(?:(^|[^%])%([0+\\- ]*)(\\d+)?(?:\\.(\\d+))?(\\w))?%P\\(\\)/g;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g;\nfunction isLessThan(x, y) {\n    return numericCompare(x, y) < 0;\n}\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(c);\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function interpolate(str, values) {\n    let valIdx = 0;\n    let strIdx = 0;\n    let result = \"\";\n    interpolateRegExp.lastIndex = 0;\n    let match = interpolateRegExp.exec(str);\n    while (match) {\n        // The first group corresponds to the no-escape char (^|[^%]), the actual pattern starts in the next char\n        // Note: we don't use negative lookbehind because some browsers don't support it yet\n        const matchIndex = match.index + (match[1] || \"\").length;\n        result += str.substring(strIdx, matchIndex).replace(/%%/g, \"%\");\n        const [, , flags, padLength, precision, format] = match;\n        result += formatReplacement(values[valIdx++], flags, padLength, precision, format);\n        strIdx = interpolateRegExp.lastIndex;\n        // Likewise we need to move interpolateRegExp.lastIndex one char behind to make sure we match the no-escape char next time\n        interpolateRegExp.lastIndex -= 1;\n        match = interpolateRegExp.exec(str);\n    }\n    result += str.substring(strIdx).replace(/%%/g, \"%\");\n    return result;\n}\nfunction continuePrint(cont, arg) {\n    return typeof arg === \"string\" ? cont(arg) : arg.cont(cont);\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return continuePrint((x) => console.log(x), arg);\n}\nexport function toConsoleError(arg) {\n    return continuePrint((x) => console.error(x), arg);\n}\nexport function toText(arg) {\n    return continuePrint((x) => x, arg);\n}\nexport function toFail(arg) {\n    return continuePrint((x) => {\n        throw new Error(x);\n    }, arg);\n}\nfunction formatReplacement(rep, flags, padLength, precision, format) {\n    let sign = \"\";\n    flags = flags || \"\";\n    format = format || \"\";\n    if (isNumeric(rep)) {\n        if (format.toLowerCase() !== \"x\") {\n            if (isLessThan(rep, 0)) {\n                rep = multiply(rep, -1);\n                sign = \"-\";\n            }\n            else {\n                if (flags.indexOf(\" \") >= 0) {\n                    sign = \" \";\n                }\n                else if (flags.indexOf(\"+\") >= 0) {\n                    sign = \"+\";\n                }\n            }\n        }\n        precision = precision == null ? null : parseInt(precision, 10);\n        switch (format) {\n            case \"f\":\n            case \"F\":\n                precision = precision != null ? precision : 6;\n                rep = toFixed(rep, precision);\n                break;\n            case \"g\":\n            case \"G\":\n                rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                break;\n            case \"e\":\n            case \"E\":\n                rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                break;\n            case \"x\":\n                rep = toHex(rep);\n                break;\n            case \"X\":\n                rep = toHex(rep).toUpperCase();\n                break;\n            default: // AOid\n                rep = String(rep);\n                break;\n        }\n    }\n    else if (rep instanceof Date) {\n        rep = dateToString(rep);\n    }\n    else {\n        rep = toString(rep);\n    }\n    padLength = typeof padLength === \"number\" ? padLength : parseInt(padLength, 10);\n    if (!isNaN(padLength)) {\n        const zeroFlag = flags.indexOf(\"0\") >= 0; // Use '0' for left padding\n        const minusFlag = flags.indexOf(\"-\") >= 0; // Right padding\n        const ch = minusFlag || !zeroFlag ? \" \" : \"0\";\n        if (ch === \"0\") {\n            rep = padLeft(rep, padLength - sign.length, ch, minusFlag);\n            rep = sign + rep;\n        }\n        else {\n            rep = padLeft(sign + rep, padLength, ch, minusFlag);\n        }\n    }\n    else {\n        rep = sign + rep;\n    }\n    return rep;\n}\nfunction createPrinter(cont, _strParts, _matches, _result = \"\", padArg = -1) {\n    return (...args) => {\n        // Make copies of the values passed by reference because the function can be used multiple times\n        let result = _result;\n        const strParts = _strParts.slice();\n        const matches = _matches.slice();\n        for (const arg of args) {\n            const [, , flags, _padLength, precision, format] = matches[0];\n            let padLength = _padLength;\n            if (padArg >= 0) {\n                padLength = padArg;\n                padArg = -1;\n            }\n            else if (padLength === \"*\") {\n                if (arg < 0) {\n                    throw new Error(\"Non-negative number required\");\n                }\n                padArg = arg;\n                continue;\n            }\n            result += strParts[0];\n            result += formatReplacement(arg, flags, padLength, precision, format);\n            strParts.splice(0, 1);\n            matches.splice(0, 1);\n        }\n        if (matches.length === 0) {\n            result += strParts[0];\n            return cont(result);\n        }\n        else {\n            return createPrinter(cont, strParts, matches, result, padArg);\n        }\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        fsFormatRegExp.lastIndex = 0;\n        const strParts = [];\n        const matches = [];\n        let strIdx = 0;\n        let match = fsFormatRegExp.exec(str);\n        while (match) {\n            // The first group corresponds to the no-escape char (^|[^%]), the actual pattern starts in the next char\n            // Note: we don't use negative lookbehind because some browsers don't support it yet\n            const matchIndex = match.index + (match[1] || \"\").length;\n            strParts.push(str.substring(strIdx, matchIndex).replace(/%%/g, \"%\"));\n            matches.push(match);\n            strIdx = fsFormatRegExp.lastIndex;\n            // Likewise we need to move fsFormatRegExp.lastIndex one char behind to make sure we match the no-escape char next time\n            fsFormatRegExp.lastIndex -= 1;\n            match = fsFormatRegExp.exec(str);\n        }\n        if (strParts.length === 0) {\n            return cont(str.replace(/%%/g, \"%\"));\n        }\n        else {\n            strParts.push(str.substring(strIdx).replace(/%%/g, \"%\"));\n            return createPrinter(cont, strParts, matches);\n        }\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (_, idx, padLength, format, precision, pattern) => {\n        let rep = args[idx];\n        if (isNumeric(rep)) {\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"p\":\n                case \"P\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(multiply(rep, 100), precision) + \" %\";\n                    break;\n                case \"d\":\n                case \"D\":\n                    rep = precision != null ? padLeft(String(rep), precision, \"0\") : String(rep);\n                    break;\n                case \"x\":\n                case \"X\":\n                    rep = precision != null ? padLeft(toHex(rep), precision, \"0\") : toHex(rep);\n                    if (format === \"X\") {\n                        rep = rep.toUpperCase();\n                    }\n                    break;\n                default:\n                    if (pattern) {\n                        let sign = \"\";\n                        rep = pattern.replace(/(0+)(\\.0+)?/, (_, intPart, decimalPart) => {\n                            if (isLessThan(rep, 0)) {\n                                rep = multiply(rep, -1);\n                                sign = \"-\";\n                            }\n                            rep = toFixed(rep, decimalPart != null ? decimalPart.length - 1 : 0);\n                            return padLeft(rep, (intPart || \"\").length - sign.length + (decimalPart != null ? decimalPart.length : 0), \"0\");\n                        });\n                        rep = sign + rep;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern || format);\n        }\n        else {\n            rep = toString(rep);\n        }\n        padLength = parseInt((padLength || \" \").substring(1), 10);\n        if (!isNaN(padLength)) {\n            rep = padLeft(String(rep), Math.abs(padLength), \" \", padLength < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function concat(...xs) {\n    return xs.map((x) => String(x)).join(\"\");\n}\nexport function join(delimiter, xs) {\n    if (Array.isArray(xs)) {\n        return xs.join(delimiter);\n    }\n    else {\n        return Array.from(xs).join(delimiter);\n    }\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n    const endIndexPlusOne = startIndex + count;\n    if (endIndexPlusOne > xs.length) {\n        throw new Error(\"Index and count must refer to a location within the buffer.\");\n    }\n    return xs.slice(startIndex, endIndexPlusOne).join(delimiter);\n}\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function padLeft(str, len, ch, isRight) {\n    ch = ch || \" \";\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padRight(str, len, ch) {\n    return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input[index];\n}\nexport function split(str, splitters, count, options) {\n    count = typeof count === \"number\" ? count : undefined;\n    options = typeof options === \"number\" ? options : 0;\n    if (count && count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    const removeEmpty = (options & 1) === 1;\n    const trim = (options & 2) === 2;\n    splitters = splitters || [];\n    splitters = splitters.filter(x => x).map(escape);\n    splitters = splitters.length > 0 ? splitters : [\"\\\\s\"];\n    const splits = [];\n    const reg = new RegExp(splitters.join(\"|\"), \"g\");\n    let findSplits = true;\n    let i = 0;\n    do {\n        const match = reg.exec(str);\n        if (match === null) {\n            const candidate = trim ? str.substring(i).trim() : str.substring(i);\n            if (!removeEmpty || candidate.length > 0) {\n                splits.push(candidate);\n            }\n            findSplits = false;\n        }\n        else {\n            const candidate = trim ? str.substring(i, match.index).trim() : str.substring(i, match.index);\n            if (!removeEmpty || candidate.length > 0) {\n                if (count != null && splits.length + 1 === count) {\n                    splits.push(trim ? str.substring(i).trim() : str.substring(i));\n                    findSplits = false;\n                }\n                else {\n                    splits.push(candidate);\n                }\n            }\n            i = reg.lastIndex;\n        }\n    } while (findSplits);\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n    return x.split(\"\").filter((c) => pred(c)).join(\"\");\n}\nexport function substring(str, startIndex, length) {\n    if ((startIndex + (length || 0) > str.length)) {\n        throw new Error(\"Invalid startIndex and/or length\");\n    }\n    return length != null ? str.substr(startIndex, length) : str.substr(startIndex);\n}\nexport function fmt(strs, ...args) {\n    return ({ strs, args });\n}\nexport function fmtWith(fmts) {\n    return (strs, ...args) => ({ strs, args, fmts });\n}\nexport function getFormat(s) {\n    return s.fmts\n        ? s.strs.reduce((acc, newPart, index) => acc + `{${String(index - 1) + s.fmts[index - 1]}}` + newPart)\n        : s.strs.reduce((acc, newPart, index) => acc + `{${index - 1}}` + newPart);\n}\n","import { compare, equals, structuralHash } from \"./Util.js\";\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    toJSON() {\n        return this.value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n    toString() {\n        return String(this.value);\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        if (other == null) {\n            return false;\n        }\n        else {\n            return equals(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n    CompareTo(other) {\n        if (other == null) {\n            return 1;\n        }\n        else {\n            return compare(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n}\nexport function some(x) {\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x) {\n    if (x == null) {\n        throw new Error(\"Option has no value\");\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function ofNullable(x) {\n    // This will fail with unit probably, an alternative would be:\n    // return x === null ? undefined : (x === undefined ? new Some(x) : x);\n    return x == null ? undefined : x;\n}\nexport function toNullable(x) {\n    return x == null ? null : value(x);\n}\nexport function flatten(x) {\n    return x == null ? undefined : value(x);\n}\nexport function toArray(opt) {\n    return (opt == null) ? [] : [value(opt)];\n}\nexport function defaultArg(opt, defaultValue) {\n    return (opt != null) ? value(opt) : defaultValue;\n}\nexport function defaultArgWith(opt, defThunk) {\n    return (opt != null) ? value(opt) : defThunk();\n}\nexport function filter(predicate, opt) {\n    return (opt != null) ? (predicate(value(opt)) ? opt : undefined) : opt;\n}\nexport function map(mapping, opt) {\n    return (opt != null) ? some(mapping(value(opt))) : undefined;\n}\nexport function map2(mapping, opt1, opt2) {\n    return (opt1 != null && opt2 != null) ? mapping(value(opt1), value(opt2)) : undefined;\n}\nexport function map3(mapping, opt1, opt2, opt3) {\n    return (opt1 != null && opt2 != null && opt3 != null) ? mapping(value(opt1), value(opt2), value(opt3)) : undefined;\n}\nexport function bind(binder, opt) {\n    return opt != null ? binder(value(opt)) : undefined;\n}\nexport function tryOp(op, arg) {\n    try {\n        return some(op(arg));\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\n","import { value as value_2, defaultArg, some } from \"./Option.js\";\r\nimport { min as min_1, getEnumerator, comparePrimitives, max as max_1 } from \"./Util.js\";\r\n\r\nexport function Helpers_allocateArrayFromCons(cons, len) {\r\n    if ((typeof cons) === \"function\") {\r\n        return new cons(len);\r\n    }\r\n    else {\r\n        return new Array(len);\r\n    }\r\n}\r\n\r\nfunction indexNotFound() {\r\n    throw (new Error(\"An index satisfying the predicate was not found in the collection.\"));\r\n}\r\n\r\nfunction differentLengths() {\r\n    throw (new Error(\"Arrays had different lengths\"));\r\n}\r\n\r\nexport function append(array1, array2, cons) {\r\n    const len1 = array1.length | 0;\r\n    const len2 = array2.length | 0;\r\n    const newArray = Helpers_allocateArrayFromCons(cons, len1 + len2);\r\n    for (let i = 0; i <= (len1 - 1); i++) {\r\n        newArray[i] = array1[i];\r\n    }\r\n    for (let i_1 = 0; i_1 <= (len2 - 1); i_1++) {\r\n        newArray[i_1 + len1] = array2[i_1];\r\n    }\r\n    return newArray;\r\n}\r\n\r\nexport function filter(predicate, array) {\r\n    return array.filter(predicate);\r\n}\r\n\r\nexport function fill(target, targetIndex, count, value) {\r\n    const start = targetIndex | 0;\r\n    return target.fill(value, start, (start + count));\r\n}\r\n\r\nexport function getSubArray(array, start, count) {\r\n    const start_1 = start | 0;\r\n    return array.slice(start_1, (start_1 + count));\r\n}\r\n\r\nexport function last(array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    return array[array.length - 1];\r\n}\r\n\r\nexport function tryLast(array) {\r\n    if (array.length === 0) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(array[array.length - 1]);\r\n    }\r\n}\r\n\r\nexport function mapIndexed(f, source, cons) {\r\n    const len = source.length | 0;\r\n    const target = Helpers_allocateArrayFromCons(cons, len);\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        target[i] = f(i, source[i]);\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function map(f, source, cons) {\r\n    const len = source.length | 0;\r\n    const target = Helpers_allocateArrayFromCons(cons, len);\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        target[i] = f(source[i]);\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function mapIndexed2(f, source1, source2, cons) {\r\n    if (source1.length !== source2.length) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(i, source1[i], source2[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function map2(f, source1, source2, cons) {\r\n    if (source1.length !== source2.length) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(source1[i], source2[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function mapIndexed3(f, source1, source2, source3, cons) {\r\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(i, source1[i], source2[i], source3[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function map3(f, source1, source2, source3, cons) {\r\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(source1[i], source2[i], source3[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function mapFold(mapping, state, array, cons) {\r\n    const matchValue = array.length | 0;\r\n    if (matchValue === 0) {\r\n        return [[], state];\r\n    }\r\n    else {\r\n        let acc = state;\r\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\r\n        for (let i = 0; i <= (array.length - 1); i++) {\r\n            const patternInput = mapping(acc, array[i]);\r\n            res[i] = patternInput[0];\r\n            acc = patternInput[1];\r\n        }\r\n        return [res, acc];\r\n    }\r\n}\r\n\r\nexport function mapFoldBack(mapping, array, state, cons) {\r\n    const matchValue = array.length | 0;\r\n    if (matchValue === 0) {\r\n        return [[], state];\r\n    }\r\n    else {\r\n        let acc = state;\r\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\r\n        for (let i = array.length - 1; i >= 0; i--) {\r\n            const patternInput = mapping(array[i], acc);\r\n            res[i] = patternInput[0];\r\n            acc = patternInput[1];\r\n        }\r\n        return [res, acc];\r\n    }\r\n}\r\n\r\nexport function indexed(source) {\r\n    const len = source.length | 0;\r\n    const target = new Array(len);\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        target[i] = [i, source[i]];\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function truncate(count, array) {\r\n    const count_1 = max_1((x, y) => comparePrimitives(x, y), 0, count) | 0;\r\n    const start = 0;\r\n    return array.slice(start, (start + count_1));\r\n}\r\n\r\nexport function concat(arrays, cons) {\r\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\r\n    const matchValue = arrays_1.length | 0;\r\n    switch (matchValue) {\r\n        case 0: {\r\n            return Helpers_allocateArrayFromCons(cons, 0);\r\n        }\r\n        case 1: {\r\n            return arrays_1[0];\r\n        }\r\n        default: {\r\n            let totalIdx = 0;\r\n            let totalLength = 0;\r\n            for (let idx = 0; idx <= (arrays_1.length - 1); idx++) {\r\n                const arr_1 = arrays_1[idx];\r\n                totalLength = ((totalLength + arr_1.length) | 0);\r\n            }\r\n            const result = Helpers_allocateArrayFromCons(cons, totalLength);\r\n            for (let idx_1 = 0; idx_1 <= (arrays_1.length - 1); idx_1++) {\r\n                const arr_2 = arrays_1[idx_1];\r\n                for (let j = 0; j <= (arr_2.length - 1); j++) {\r\n                    result[totalIdx] = arr_2[j];\r\n                    totalIdx = ((totalIdx + 1) | 0);\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\nexport function collect(mapping, array, cons) {\r\n    return concat(map(mapping, array, null), cons);\r\n}\r\n\r\nexport function where(predicate, array) {\r\n    return array.filter(predicate);\r\n}\r\n\r\nexport function contains(value, array, eq) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i >= array.length) {\r\n                return false;\r\n            }\r\n            else if (eq.Equals(value, array[i])) {\r\n                return true;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0);\r\n}\r\n\r\nexport function empty(cons) {\r\n    return Helpers_allocateArrayFromCons(cons, 0);\r\n}\r\n\r\nexport function singleton(value, cons) {\r\n    const ar = Helpers_allocateArrayFromCons(cons, 1);\r\n    ar[0] = value;\r\n    return ar;\r\n}\r\n\r\nexport function initialize(count, initializer, cons) {\r\n    if (count < 0) {\r\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, count);\r\n    for (let i = 0; i <= (count - 1); i++) {\r\n        result[i] = initializer(i);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function pairwise(array) {\r\n    if (array.length < 2) {\r\n        return [];\r\n    }\r\n    else {\r\n        const count = (array.length - 1) | 0;\r\n        const result = new Array(count);\r\n        for (let i = 0; i <= (count - 1); i++) {\r\n            result[i] = [array[i], array[i + 1]];\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function replicate(count, initial, cons) {\r\n    if (count < 0) {\r\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, count);\r\n    for (let i = 0; i <= (result.length - 1); i++) {\r\n        result[i] = initial;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function copy(array) {\r\n    return array.slice();\r\n}\r\n\r\nexport function reverse(array) {\r\n    const array_2 = array.slice();\r\n    return array_2.reverse();\r\n}\r\n\r\nexport function scan(folder, state, array, cons) {\r\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\r\n    res[0] = state;\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        res[i + 1] = folder(res[i], array[i]);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function scanBack(folder, array, state, cons) {\r\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\r\n    res[array.length] = state;\r\n    for (let i = array.length - 1; i >= 0; i--) {\r\n        res[i] = folder(array[i], res[i + 1]);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function skip(count, array, cons) {\r\n    if (count > array.length) {\r\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\r\n    }\r\n    if (count === array.length) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const count_1 = ((count < 0) ? 0 : count) | 0;\r\n        return array.slice(count_1);\r\n    }\r\n}\r\n\r\nexport function skipWhile(predicate, array, cons) {\r\n    let count = 0;\r\n    while ((count < array.length) && predicate(array[count])) {\r\n        count = ((count + 1) | 0);\r\n    }\r\n    if (count === array.length) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const count_1 = count | 0;\r\n        return array.slice(count_1);\r\n    }\r\n}\r\n\r\nexport function take(count, array, cons) {\r\n    if (count < 0) {\r\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\r\n    }\r\n    if (count > array.length) {\r\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\r\n    }\r\n    if (count === 0) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const start = 0;\r\n        return array.slice(start, (start + count));\r\n    }\r\n}\r\n\r\nexport function takeWhile(predicate, array, cons) {\r\n    let count = 0;\r\n    while ((count < array.length) && predicate(array[count])) {\r\n        count = ((count + 1) | 0);\r\n    }\r\n    if (count === 0) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const start = 0;\r\n        const count_1 = count | 0;\r\n        return array.slice(start, (start + count_1));\r\n    }\r\n}\r\n\r\nexport function addInPlace(x, array) {\r\n    array.push(x);\r\n}\r\n\r\nexport function addRangeInPlace(range, array) {\r\n    const enumerator = getEnumerator(range);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            addInPlace(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), array);\r\n        }\r\n    }\r\n    finally {\r\n        enumerator.Dispose();\r\n    }\r\n}\r\n\r\nexport function insertRangeInPlace(index, range, array) {\r\n    let index_1;\r\n    let i = index;\r\n    const enumerator = getEnumerator(range);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            (index_1 = (i | 0), array.splice(index_1, 0, x));\r\n            i = ((i + 1) | 0);\r\n        }\r\n    }\r\n    finally {\r\n        enumerator.Dispose();\r\n    }\r\n}\r\n\r\nexport function removeInPlace(item_1, array) {\r\n    const i = array.indexOf(item_1, 0);\r\n    if (i > -1) {\r\n        array.splice(i, 1);\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function removeAllInPlace(predicate, array) {\r\n    const countRemoveAll = (count) => {\r\n        const i = array.findIndex(predicate);\r\n        if (i > -1) {\r\n            array.splice(i, 1);\r\n            return (countRemoveAll(count) + 1) | 0;\r\n        }\r\n        else {\r\n            return count | 0;\r\n        }\r\n    };\r\n    return countRemoveAll(0) | 0;\r\n}\r\n\r\nexport function copyTo(source, sourceIndex, target, targetIndex, count) {\r\n    const diff = (targetIndex - sourceIndex) | 0;\r\n    for (let i = sourceIndex; i <= ((sourceIndex + count) - 1); i++) {\r\n        target[i + diff] = source[i];\r\n    }\r\n}\r\n\r\nexport function copyToTypedArray(source, sourceIndex, target, targetIndex, count) {\r\n    try {\r\n        target.set(source.subarray(sourceIndex, sourceIndex + count), targetIndex);\r\n    }\r\n    catch (matchValue) {\r\n        copyTo(source, sourceIndex, target, targetIndex, count);\r\n    }\r\n}\r\n\r\nexport function indexOf(array, item_1, start, count) {\r\n    const start_1 = defaultArg(start, 0) | 0;\r\n    const i = array.indexOf(item_1, start_1);\r\n    if ((count != null) && (i >= (start_1 + value_2(count)))) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return i | 0;\r\n    }\r\n}\r\n\r\nexport function partition(f, source, cons) {\r\n    const len = source.length | 0;\r\n    const res1 = Helpers_allocateArrayFromCons(cons, len);\r\n    const res2 = Helpers_allocateArrayFromCons(cons, len);\r\n    let iTrue = 0;\r\n    let iFalse = 0;\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        if (f(source[i])) {\r\n            res1[iTrue] = source[i];\r\n            iTrue = ((iTrue + 1) | 0);\r\n        }\r\n        else {\r\n            res2[iFalse] = source[i];\r\n            iFalse = ((iFalse + 1) | 0);\r\n        }\r\n    }\r\n    return [truncate(iTrue, res1), truncate(iFalse, res2)];\r\n}\r\n\r\nexport function find(predicate, array) {\r\n    const matchValue = array.find(predicate);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_2(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFind(predicate, array) {\r\n    return array.find(predicate);\r\n}\r\n\r\nexport function findIndex(predicate, array) {\r\n    const matchValue = array.findIndex(predicate);\r\n    if (matchValue > -1) {\r\n        return matchValue | 0;\r\n    }\r\n    else {\r\n        return indexNotFound() | 0;\r\n    }\r\n}\r\n\r\nexport function tryFindIndex(predicate, array) {\r\n    const matchValue = array.findIndex(predicate);\r\n    if (matchValue > -1) {\r\n        return matchValue;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function pick(chooser, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i >= array.length) {\r\n                return indexNotFound();\r\n            }\r\n            else {\r\n                const matchValue = chooser(array[i]);\r\n                if (matchValue != null) {\r\n                    return value_2(matchValue);\r\n                }\r\n                else {\r\n                    i_mut = (i + 1);\r\n                    continue loop;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0);\r\n}\r\n\r\nexport function tryPick(chooser, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i >= array.length) {\r\n                return void 0;\r\n            }\r\n            else {\r\n                const matchValue = chooser(array[i]);\r\n                if (matchValue == null) {\r\n                    i_mut = (i + 1);\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return matchValue;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0);\r\n}\r\n\r\nexport function findBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return indexNotFound();\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return array[i];\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1);\r\n}\r\n\r\nexport function tryFindBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return void 0;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return some(array[i]);\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1);\r\n}\r\n\r\nexport function findLastIndex(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return -1;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return i | 0;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1) | 0;\r\n}\r\n\r\nexport function findIndexBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return indexNotFound() | 0;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return i | 0;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1) | 0;\r\n}\r\n\r\nexport function tryFindIndexBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return void 0;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return i;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1);\r\n}\r\n\r\nexport function choose(chooser, array, cons) {\r\n    const res = [];\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        const matchValue = chooser(array[i]);\r\n        if (matchValue != null) {\r\n            const y = value_2(matchValue);\r\n            res.push(y);\r\n        }\r\n    }\r\n    if ((typeof cons) === \"function\") {\r\n        return map((x) => x, res, cons);\r\n    }\r\n    else {\r\n        return res;\r\n    }\r\n}\r\n\r\nexport function foldIndexed(folder, state, array) {\r\n    return array.reduce(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg0, delegateArg1)), state);\r\n}\r\n\r\nexport function fold(folder, state, array) {\r\n    return array.reduce(((delegateArg0, delegateArg1) => folder(delegateArg0, delegateArg1)), state);\r\n}\r\n\r\nexport function iterate(action, array) {\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        action(array[i]);\r\n    }\r\n}\r\n\r\nexport function iterateIndexed(action, array) {\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        action(i, array[i]);\r\n    }\r\n}\r\n\r\nexport function iterate2(action, array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        action(array1[i], array2[i]);\r\n    }\r\n}\r\n\r\nexport function iterateIndexed2(action, array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        action(i, array1[i], array2[i]);\r\n    }\r\n}\r\n\r\nexport function isEmpty(array) {\r\n    return array.length === 0;\r\n}\r\n\r\nexport function forAll(predicate, array) {\r\n    return array.every(predicate);\r\n}\r\n\r\nexport function permute(f, array) {\r\n    const size = array.length | 0;\r\n    const res = array.slice();\r\n    const checkFlags = new Array(size);\r\n    iterateIndexed((i, x) => {\r\n        const j = f(i) | 0;\r\n        if ((j < 0) ? true : (j >= size)) {\r\n            throw (new Error(\"Not a valid permutation\"));\r\n        }\r\n        res[j] = x;\r\n        checkFlags[j] = 1;\r\n    }, array);\r\n    if (!(checkFlags.every((y) => (1 === y)))) {\r\n        throw (new Error(\"Not a valid permutation\"));\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function setSlice(target, lower, upper, source) {\r\n    const lower_1 = defaultArg(lower, 0) | 0;\r\n    const upper_1 = defaultArg(upper, 0) | 0;\r\n    const length = (((upper_1 > 0) ? upper_1 : (target.length - 1)) - lower_1) | 0;\r\n    for (let i = 0; i <= length; i++) {\r\n        target[i + lower_1] = source[i];\r\n    }\r\n}\r\n\r\nexport function sortInPlaceBy(projection, xs, comparer) {\r\n    xs.sort((x, y) => comparer.Compare(projection(x), projection(y)));\r\n}\r\n\r\nexport function sortInPlace(xs, comparer) {\r\n    xs.sort((x, y) => comparer.Compare(x, y));\r\n}\r\n\r\nexport function sort(xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort((x, y) => comparer.Compare(x, y));\r\n    return xs_1;\r\n}\r\n\r\nexport function sortBy(projection, xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort((x, y) => comparer.Compare(projection(x), projection(y)));\r\n    return xs_1;\r\n}\r\n\r\nexport function sortDescending(xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort((x, y) => (comparer.Compare(x, y) * -1));\r\n    return xs_1;\r\n}\r\n\r\nexport function sortByDescending(projection, xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort((x, y) => (comparer.Compare(projection(x), projection(y)) * -1));\r\n    return xs_1;\r\n}\r\n\r\nexport function sortWith(comparer, xs) {\r\n    const comparer_1 = comparer;\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort(comparer_1);\r\n    return xs_1;\r\n}\r\n\r\nexport function allPairs(xs, ys) {\r\n    const len1 = xs.length | 0;\r\n    const len2 = ys.length | 0;\r\n    const res = new Array(len1 * len2);\r\n    for (let i = 0; i <= (xs.length - 1); i++) {\r\n        for (let j = 0; j <= (ys.length - 1); j++) {\r\n            res[(i * len2) + j] = [xs[i], ys[j]];\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function unfold(generator, state) {\r\n    const res = [];\r\n    const loop = (state_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const state_1 = state_1_mut;\r\n            const matchValue = generator(state_1);\r\n            if (matchValue != null) {\r\n                const x = matchValue[0];\r\n                const s = matchValue[1];\r\n                res.push(x);\r\n                state_1_mut = s;\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    loop(state);\r\n    return res;\r\n}\r\n\r\nexport function unzip(array) {\r\n    const len = array.length | 0;\r\n    const res1 = new Array(len);\r\n    const res2 = new Array(len);\r\n    iterateIndexed((i, tupledArg) => {\r\n        res1[i] = tupledArg[0];\r\n        res2[i] = tupledArg[1];\r\n    }, array);\r\n    return [res1, res2];\r\n}\r\n\r\nexport function unzip3(array) {\r\n    const len = array.length | 0;\r\n    const res1 = new Array(len);\r\n    const res2 = new Array(len);\r\n    const res3 = new Array(len);\r\n    iterateIndexed((i, tupledArg) => {\r\n        res1[i] = tupledArg[0];\r\n        res2[i] = tupledArg[1];\r\n        res3[i] = tupledArg[2];\r\n    }, array);\r\n    return [res1, res2, res3];\r\n}\r\n\r\nexport function zip(array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    const result = new Array(array1.length);\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        result[i] = [array1[i], array2[i]];\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function zip3(array1, array2, array3) {\r\n    if ((array1.length !== array2.length) ? true : (array2.length !== array3.length)) {\r\n        differentLengths();\r\n    }\r\n    const result = new Array(array1.length);\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        result[i] = [array1[i], array2[i], array3[i]];\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function chunkBySize(chunkSize, array) {\r\n    if (chunkSize < 1) {\r\n        throw (new Error(\"The input must be positive.\\\\nParameter name: size\"));\r\n    }\r\n    if (array.length === 0) {\r\n        return [[]];\r\n    }\r\n    else {\r\n        const result = [];\r\n        for (let x = 0; x <= ((~(~Math.ceil(array.length / chunkSize))) - 1); x++) {\r\n            let slice;\r\n            const start_1 = (x * chunkSize) | 0;\r\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\r\n            result.push(slice);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function splitAt(index, array) {\r\n    let start;\r\n    if (index < 0) {\r\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: index\"));\r\n    }\r\n    if (index > array.length) {\r\n        throw (new Error(\"The input sequence has an insufficient number of elements.\\\\nParameter name: index\"));\r\n    }\r\n    return [(start = 0, array.slice(start, (start + index))), array.slice(index)];\r\n}\r\n\r\nexport function compareWith(comparer, array1, array2) {\r\n    if (array1 == null) {\r\n        if (array2 == null) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    }\r\n    else if (array2 == null) {\r\n        return 1;\r\n    }\r\n    else {\r\n        let i = 0;\r\n        let result = 0;\r\n        const length1 = array1.length | 0;\r\n        const length2 = array2.length | 0;\r\n        if (length1 > length2) {\r\n            return 1;\r\n        }\r\n        else if (length1 < length2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            while ((i < length1) && (result === 0)) {\r\n                result = (comparer(array1[i], array2[i]) | 0);\r\n                i = ((i + 1) | 0);\r\n            }\r\n            return result | 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function equalsWith(equals, array1, array2) {\r\n    if (array1 == null) {\r\n        if (array2 == null) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    else if (array2 == null) {\r\n        return false;\r\n    }\r\n    else {\r\n        let i = 0;\r\n        let result = true;\r\n        const length1 = array1.length | 0;\r\n        const length2 = array2.length | 0;\r\n        if (length1 > length2) {\r\n            return false;\r\n        }\r\n        else if (length1 < length2) {\r\n            return false;\r\n        }\r\n        else {\r\n            while ((i < length1) && result) {\r\n                result = equals(array1[i], array2[i]);\r\n                i = ((i + 1) | 0);\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\nexport function exactlyOne(array) {\r\n    if (array.length === 1) {\r\n        return array[0];\r\n    }\r\n    else if (array.length === 0) {\r\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: array\"));\r\n    }\r\n    else {\r\n        throw (new Error(\"Input array too long\\\\nParameter name: array\"));\r\n    }\r\n}\r\n\r\nexport function tryExactlyOne(array) {\r\n    if (array.length === 1) {\r\n        return some(array[0]);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function head(array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    else {\r\n        return array[0];\r\n    }\r\n}\r\n\r\nexport function tryHead(array) {\r\n    if (array.length === 0) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(array[0]);\r\n    }\r\n}\r\n\r\nexport function tail(array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"Not enough elements\\\\nParameter name: array\"));\r\n    }\r\n    return array.slice(1);\r\n}\r\n\r\nexport function item(index, array) {\r\n    return array[index];\r\n}\r\n\r\nexport function tryItem(index, array) {\r\n    if ((index < 0) ? true : (index >= array.length)) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(array[index]);\r\n    }\r\n}\r\n\r\nexport function foldBackIndexed(folder, array, state) {\r\n    return array.reduceRight(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg1, delegateArg0)), state);\r\n}\r\n\r\nexport function foldBack(folder, array, state) {\r\n    return array.reduceRight(((delegateArg0, delegateArg1) => folder(delegateArg1, delegateArg0)), state);\r\n}\r\n\r\nexport function foldIndexed2(folder, state, array1, array2) {\r\n    let acc = state;\r\n    if (array1.length !== array2.length) {\r\n        throw (new Error(\"Arrays have different lengths\"));\r\n    }\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        acc = folder(i, acc, array1[i], array2[i]);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function fold2(folder, state, array1, array2) {\r\n    return foldIndexed2((_arg1, acc, x, y) => folder(acc, x, y), state, array1, array2);\r\n}\r\n\r\nexport function foldBackIndexed2(folder, array1, array2, state) {\r\n    let acc = state;\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    const size = array1.length | 0;\r\n    for (let i = 1; i <= size; i++) {\r\n        acc = folder(i - 1, array1[size - i], array2[size - i], acc);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function foldBack2(f, array1, array2, state) {\r\n    return foldBackIndexed2((_arg1, x, y, acc) => f(x, y, acc), array1, array2, state);\r\n}\r\n\r\nexport function reduce(reduction, array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\"));\r\n    }\r\n    const reduction_1 = reduction;\r\n    return array.reduce(reduction_1);\r\n}\r\n\r\nexport function reduceBack(reduction, array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\"));\r\n    }\r\n    const reduction_1 = reduction;\r\n    return array.reduceRight(reduction_1);\r\n}\r\n\r\nexport function forAll2(predicate, array1, array2) {\r\n    return fold2((acc, x, y) => (acc && predicate(x, y)), true, array1, array2);\r\n}\r\n\r\nexport function existsOffset(predicate_mut, array_mut, index_mut) {\r\n    existsOffset:\r\n    while (true) {\r\n        const predicate = predicate_mut, array = array_mut, index = index_mut;\r\n        if (index === array.length) {\r\n            return false;\r\n        }\r\n        else if (predicate(array[index])) {\r\n            return true;\r\n        }\r\n        else {\r\n            predicate_mut = predicate;\r\n            array_mut = array;\r\n            index_mut = (index + 1);\r\n            continue existsOffset;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function exists(predicate, array) {\r\n    return existsOffset(predicate, array, 0);\r\n}\r\n\r\nexport function existsOffset2(predicate_mut, array1_mut, array2_mut, index_mut) {\r\n    existsOffset2:\r\n    while (true) {\r\n        const predicate = predicate_mut, array1 = array1_mut, array2 = array2_mut, index = index_mut;\r\n        if (index === array1.length) {\r\n            return false;\r\n        }\r\n        else if (predicate(array1[index], array2[index])) {\r\n            return true;\r\n        }\r\n        else {\r\n            predicate_mut = predicate;\r\n            array1_mut = array1;\r\n            array2_mut = array2;\r\n            index_mut = (index + 1);\r\n            continue existsOffset2;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function exists2(predicate, array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    return existsOffset2(predicate, array1, array2, 0);\r\n}\r\n\r\nexport function sum(array, adder) {\r\n    let acc = adder.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        acc = adder.Add(acc, array[i]);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function sumBy(projection, array, adder) {\r\n    let acc = adder.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        acc = adder.Add(acc, projection(array[i]));\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function maxBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function max(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function minBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function min(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function average(array, averager) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    let total = averager.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        total = averager.Add(total, array[i]);\r\n    }\r\n    return averager.DivideByInt(total, array.length);\r\n}\r\n\r\nexport function averageBy(projection, array, averager) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    let total = averager.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        total = averager.Add(total, projection(array[i]));\r\n    }\r\n    return averager.DivideByInt(total, array.length);\r\n}\r\n\r\nexport function windowed(windowSize, source) {\r\n    if (windowSize <= 0) {\r\n        throw (new Error(\"windowSize must be positive\"));\r\n    }\r\n    let res;\r\n    const len = max_1((x, y) => comparePrimitives(x, y), 0, source.length - windowSize) | 0;\r\n    res = (new Array(len));\r\n    for (let i = windowSize; i <= source.length; i++) {\r\n        res[i - windowSize] = source.slice(i - windowSize, (i - 1) + 1);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function splitInto(chunks, array) {\r\n    if (chunks < 1) {\r\n        throw (new Error(\"The input must be positive.\\\\nParameter name: chunks\"));\r\n    }\r\n    if (array.length === 0) {\r\n        return [[]];\r\n    }\r\n    else {\r\n        const result = [];\r\n        const chunks_1 = min_1((x, y) => comparePrimitives(x, y), chunks, array.length) | 0;\r\n        const minChunkSize = (~(~(array.length / chunks_1))) | 0;\r\n        const chunksWithExtraItem = (array.length % chunks_1) | 0;\r\n        for (let i = 0; i <= (chunks_1 - 1); i++) {\r\n            const chunkSize = ((i < chunksWithExtraItem) ? (minChunkSize + 1) : minChunkSize) | 0;\r\n            let slice;\r\n            const start_1 = ((i * minChunkSize) + min_1((x_1, y_1) => comparePrimitives(x_1, y_1), chunksWithExtraItem, i)) | 0;\r\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\r\n            result.push(slice);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function transpose(arrays, cons) {\r\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\r\n    const len = arrays_1.length | 0;\r\n    if (len === 0) {\r\n        return new Array(0);\r\n    }\r\n    else {\r\n        const lenInner = arrays_1[0].length | 0;\r\n        if (!forAll((a) => (a.length === lenInner), arrays_1)) {\r\n            differentLengths();\r\n        }\r\n        const result = new Array(lenInner);\r\n        for (let i = 0; i <= (lenInner - 1); i++) {\r\n            result[i] = Helpers_allocateArrayFromCons(cons, len);\r\n            for (let j = 0; j <= (len - 1); j++) {\r\n                result[i][j] = arrays_1[j][i];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n","import { join } from \"./String.js\";\r\nimport { uncurry, isArrayLike, getEnumerator, toIterator, compare, structuralHash, equals } from \"./Util.js\";\r\nimport { Record } from \"./Types.js\";\r\nimport { class_type, record_type, option_type } from \"./Reflection.js\";\r\nimport { defaultArg, value as value_1, some } from \"./Option.js\";\r\nimport { transpose as transpose_1, splitInto as splitInto_1, windowed as windowed_1, pairwise as pairwise_1, chunkBySize as chunkBySize_1, map as map_1, permute as permute_1, tryFindIndexBack as tryFindIndexBack_1, tryFindBack as tryFindBack_1, scanBack as scanBack_1, foldBack2 as foldBack2_1, foldBack as foldBack_1, fill } from \"./Array.js\";\r\n\r\nexport const SR_indexOutOfBounds = \"The index was outside the range of elements in the list.\";\r\n\r\nexport const SR_inputListWasEmpty = \"List was empty\";\r\n\r\nexport const SR_inputMustBeNonNegative = \"The input must be non-negative.\";\r\n\r\nexport const SR_inputSequenceEmpty = \"The input sequence was empty.\";\r\n\r\nexport const SR_inputSequenceTooLong = \"The input sequence contains more than one element.\";\r\n\r\nexport const SR_keyNotFoundAlt = \"An index satisfying the predicate was not found in the collection.\";\r\n\r\nexport const SR_listsHadDifferentLengths = \"The lists had different lengths.\";\r\n\r\nexport const SR_notEnoughElements = \"The input sequence has an insufficient number of elements.\";\r\n\r\nexport class FSharpList extends Record {\r\n    constructor(head, tail) {\r\n        super();\r\n        this.head = head;\r\n        this.tail = tail;\r\n    }\r\n    toString() {\r\n        const xs = this;\r\n        return (\"[\" + join(\"; \", xs)) + \"]\";\r\n    }\r\n    Equals(other) {\r\n        const xs = this;\r\n        if (xs === other) {\r\n            return true;\r\n        }\r\n        else {\r\n            const loop = (xs_1_mut, ys_1_mut) => {\r\n                loop:\r\n                while (true) {\r\n                    const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n                    const matchValue = [xs_1.tail, ys_1.tail];\r\n                    if (matchValue[0] != null) {\r\n                        if (matchValue[1] != null) {\r\n                            const xt = matchValue[0];\r\n                            const yt = matchValue[1];\r\n                            if (equals(xs_1.head, ys_1.head)) {\r\n                                xs_1_mut = xt;\r\n                                ys_1_mut = yt;\r\n                                continue loop;\r\n                            }\r\n                            else {\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    else if (matchValue[1] != null) {\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        return true;\r\n                    }\r\n                    break;\r\n                }\r\n            };\r\n            return loop(xs, other);\r\n        }\r\n    }\r\n    GetHashCode() {\r\n        const xs = this;\r\n        const loop = (i_mut, h_mut, xs_1_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const i = i_mut, h = h_mut, xs_1 = xs_1_mut;\r\n                const matchValue = xs_1.tail;\r\n                if (matchValue != null) {\r\n                    const t = matchValue;\r\n                    if (i > 18) {\r\n                        return h | 0;\r\n                    }\r\n                    else {\r\n                        i_mut = (i + 1);\r\n                        h_mut = (((h << 1) + structuralHash(xs_1.head)) + (631 * i));\r\n                        xs_1_mut = t;\r\n                        continue loop;\r\n                    }\r\n                }\r\n                else {\r\n                    return h | 0;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(0, 0, xs) | 0;\r\n    }\r\n    toJSON(_key) {\r\n        const this$ = this;\r\n        return Array.from(this$);\r\n    }\r\n    CompareTo(other) {\r\n        const xs = this;\r\n        const loop = (xs_1_mut, ys_1_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n                const matchValue = [xs_1.tail, ys_1.tail];\r\n                if (matchValue[0] != null) {\r\n                    if (matchValue[1] != null) {\r\n                        const xt = matchValue[0];\r\n                        const yt = matchValue[1];\r\n                        const c = compare(xs_1.head, ys_1.head) | 0;\r\n                        if (c === 0) {\r\n                            xs_1_mut = xt;\r\n                            ys_1_mut = yt;\r\n                            continue loop;\r\n                        }\r\n                        else {\r\n                            return c | 0;\r\n                        }\r\n                    }\r\n                    else {\r\n                        return 1;\r\n                    }\r\n                }\r\n                else if (matchValue[1] != null) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(xs, other) | 0;\r\n    }\r\n    GetEnumerator() {\r\n        const xs = this;\r\n        return ListEnumerator$1_$ctor_3002E699(xs);\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const xs = this;\r\n        return getEnumerator(xs);\r\n    }\r\n}\r\n\r\nexport function FSharpList$reflection(gen0) {\r\n    return record_type(\"ListModule.FSharpList\", [gen0], FSharpList, () => [[\"head\", gen0], [\"tail\", option_type(FSharpList$reflection(gen0))]]);\r\n}\r\n\r\nexport class ListEnumerator$1 {\r\n    constructor(xs) {\r\n        this.xs = xs;\r\n        this.it = this.xs;\r\n        this.current = null;\r\n    }\r\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current;\r\n    }\r\n    [\"System.Collections.IEnumerator.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current;\r\n    }\r\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\r\n        const __ = this;\r\n        const matchValue = __.it.tail;\r\n        if (matchValue != null) {\r\n            const t = matchValue;\r\n            __.current = __.it.head;\r\n            __.it = t;\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    [\"System.Collections.IEnumerator.Reset\"]() {\r\n        const __ = this;\r\n        __.it = __.xs;\r\n        __.current = null;\r\n    }\r\n    Dispose() {\r\n    }\r\n}\r\n\r\nexport function ListEnumerator$1$reflection(gen0) {\r\n    return class_type(\"ListModule.ListEnumerator`1\", [gen0], ListEnumerator$1);\r\n}\r\n\r\nexport function ListEnumerator$1_$ctor_3002E699(xs) {\r\n    return new ListEnumerator$1(xs);\r\n}\r\n\r\nexport function FSharpList_get_Empty() {\r\n    return new FSharpList(null, void 0);\r\n}\r\n\r\nexport function FSharpList_Cons_305B8EAC(x, xs) {\r\n    return new FSharpList(x, xs);\r\n}\r\n\r\nexport function FSharpList__get_IsEmpty(xs) {\r\n    return xs.tail == null;\r\n}\r\n\r\nexport function FSharpList__get_Length(xs) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            const matchValue = xs_1.tail;\r\n            if (matchValue != null) {\r\n                i_mut = (i + 1);\r\n                xs_1_mut = matchValue;\r\n                continue loop;\r\n            }\r\n            else {\r\n                return i | 0;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs) | 0;\r\n}\r\n\r\nexport function FSharpList__get_Head(xs) {\r\n    const matchValue = xs.tail;\r\n    if (matchValue != null) {\r\n        return xs.head;\r\n    }\r\n    else {\r\n        throw (new Error((SR_inputListWasEmpty + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n}\r\n\r\nexport function FSharpList__get_Tail(xs) {\r\n    const matchValue = xs.tail;\r\n    if (matchValue != null) {\r\n        return matchValue;\r\n    }\r\n    else {\r\n        throw (new Error((SR_inputListWasEmpty + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n}\r\n\r\nexport function FSharpList__get_Item_Z524259A4(xs, index) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            const matchValue = xs_1.tail;\r\n            if (matchValue != null) {\r\n                if (i === index) {\r\n                    return xs_1.head;\r\n                }\r\n                else {\r\n                    i_mut = (i + 1);\r\n                    xs_1_mut = matchValue;\r\n                    continue loop;\r\n                }\r\n            }\r\n            else {\r\n                throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs);\r\n}\r\n\r\nexport function empty() {\r\n    return FSharpList_get_Empty();\r\n}\r\n\r\nexport function cons(x, xs) {\r\n    return FSharpList_Cons_305B8EAC(x, xs);\r\n}\r\n\r\nexport function singleton(x) {\r\n    return FSharpList_Cons_305B8EAC(x, FSharpList_get_Empty());\r\n}\r\n\r\nexport function isEmpty(xs) {\r\n    return FSharpList__get_IsEmpty(xs);\r\n}\r\n\r\nexport function length(xs) {\r\n    return FSharpList__get_Length(xs);\r\n}\r\n\r\nexport function head(xs) {\r\n    return FSharpList__get_Head(xs);\r\n}\r\n\r\nexport function tryHead(xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(FSharpList__get_Head(xs));\r\n    }\r\n}\r\n\r\nexport function tail(xs) {\r\n    return FSharpList__get_Tail(xs);\r\n}\r\n\r\nexport function tryLast(xs_mut) {\r\n    tryLast:\r\n    while (true) {\r\n        const xs = xs_mut;\r\n        if (FSharpList__get_IsEmpty(xs)) {\r\n            return void 0;\r\n        }\r\n        else {\r\n            const t = FSharpList__get_Tail(xs);\r\n            if (FSharpList__get_IsEmpty(t)) {\r\n                return some(FSharpList__get_Head(xs));\r\n            }\r\n            else {\r\n                xs_mut = t;\r\n                continue tryLast;\r\n            }\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function last(xs) {\r\n    const matchValue = tryLast(xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_inputListWasEmpty));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function compareWith(comparer, xs, ys) {\r\n    const loop = (xs_1_mut, ys_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n            const matchValue = [FSharpList__get_IsEmpty(xs_1), FSharpList__get_IsEmpty(ys_1)];\r\n            if (matchValue[0]) {\r\n                if (matchValue[1]) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return -1;\r\n                }\r\n            }\r\n            else if (matchValue[1]) {\r\n                return 1;\r\n            }\r\n            else {\r\n                const c = comparer(FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1)) | 0;\r\n                if (c === 0) {\r\n                    xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                    ys_1_mut = FSharpList__get_Tail(ys_1);\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return c | 0;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(xs, ys) | 0;\r\n}\r\n\r\nexport function toArray(xs) {\r\n    const len = FSharpList__get_Length(xs) | 0;\r\n    const res = fill(new Array(len), 0, len, null);\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            if (!FSharpList__get_IsEmpty(xs_1)) {\r\n                res[i] = FSharpList__get_Head(xs_1);\r\n                i_mut = (i + 1);\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    loop(0, xs);\r\n    return res;\r\n}\r\n\r\nexport function fold(folder, state, xs) {\r\n    let acc = state;\r\n    let xs_1 = xs;\r\n    while (!FSharpList__get_IsEmpty(xs_1)) {\r\n        acc = folder(acc, FSharpList__get_Head(xs_1));\r\n        xs_1 = FSharpList__get_Tail(xs_1);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function reverse(xs) {\r\n    return fold((acc, x) => FSharpList_Cons_305B8EAC(x, acc), FSharpList_get_Empty(), xs);\r\n}\r\n\r\nexport function foldBack(folder, xs, state) {\r\n    return foldBack_1(folder, toArray(xs), state);\r\n}\r\n\r\nexport function foldIndexed(folder, state, xs) {\r\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                acc_mut = folder(i, acc, FSharpList__get_Head(xs_1));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, state, xs);\r\n}\r\n\r\nexport function fold2(folder, state, xs, ys) {\r\n    let acc = state;\r\n    let xs_1 = xs;\r\n    let ys_1 = ys;\r\n    while ((!FSharpList__get_IsEmpty(xs_1)) && (!FSharpList__get_IsEmpty(ys_1))) {\r\n        acc = folder(acc, FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1));\r\n        xs_1 = FSharpList__get_Tail(xs_1);\r\n        ys_1 = FSharpList__get_Tail(ys_1);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function foldBack2(folder, xs, ys, state) {\r\n    return foldBack2_1(folder, toArray(xs), toArray(ys), state);\r\n}\r\n\r\nexport function unfold(gen, state) {\r\n    const loop = (acc_mut, node_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const acc = acc_mut, node = node_mut;\r\n            const matchValue = gen(acc);\r\n            if (matchValue != null) {\r\n                acc_mut = matchValue[1];\r\n                node_mut = ((t = (new FSharpList(matchValue[0], void 0)), (node.tail = t, t)));\r\n                continue loop;\r\n            }\r\n            else {\r\n                return node;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node_1 = loop(state, root);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node_1.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function iterate(action, xs) {\r\n    fold((unitVar0, x) => {\r\n        action(x);\r\n    }, void 0, xs);\r\n}\r\n\r\nexport function iterate2(action, xs, ys) {\r\n    fold2((unitVar0, x, y) => {\r\n        action(x, y);\r\n    }, void 0, xs, ys);\r\n}\r\n\r\nexport function iterateIndexed(action, xs) {\r\n    fold((i, x) => {\r\n        action(i, x);\r\n        return (i + 1) | 0;\r\n    }, 0, xs);\r\n}\r\n\r\nexport function iterateIndexed2(action, xs, ys) {\r\n    fold2((i, x, y) => {\r\n        action(i, x, y);\r\n        return (i + 1) | 0;\r\n    }, 0, xs, ys);\r\n}\r\n\r\nexport function toSeq(xs) {\r\n    return xs;\r\n}\r\n\r\nexport function ofArrayWithTail(xs, tail_1) {\r\n    let res = tail_1;\r\n    for (let i = xs.length - 1; i >= 0; i--) {\r\n        res = FSharpList_Cons_305B8EAC(xs[i], res);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function ofArray(xs) {\r\n    return ofArrayWithTail(xs, FSharpList_get_Empty());\r\n}\r\n\r\nexport function ofSeq(xs) {\r\n    let xs_3, t;\r\n    if (isArrayLike(xs)) {\r\n        return ofArray(xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return xs;\r\n    }\r\n    else {\r\n        const root = FSharpList_get_Empty();\r\n        let node = root;\r\n        const enumerator = getEnumerator(xs);\r\n        try {\r\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                node = ((xs_3 = node, (t = (new FSharpList(x, void 0)), (xs_3.tail = t, t))));\r\n            }\r\n        }\r\n        finally {\r\n            enumerator.Dispose();\r\n        }\r\n        const xs_5 = node;\r\n        const t_2 = FSharpList_get_Empty();\r\n        xs_5.tail = t_2;\r\n        return FSharpList__get_Tail(root);\r\n    }\r\n}\r\n\r\nexport function concat(lists) {\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    const action = (xs) => {\r\n        node = fold((acc, x) => {\r\n            const t = new FSharpList(x, void 0);\r\n            acc.tail = t;\r\n            return t;\r\n        }, node, xs);\r\n    };\r\n    if (isArrayLike(lists)) {\r\n        lists.forEach(action);\r\n    }\r\n    else if (lists instanceof FSharpList) {\r\n        iterate(action, lists);\r\n    }\r\n    else {\r\n        const enumerator = getEnumerator(lists);\r\n        try {\r\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                action(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n        }\r\n        finally {\r\n            enumerator.Dispose();\r\n        }\r\n    }\r\n    const xs_6 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_6.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function scan(folder, state, xs) {\r\n    let xs_4, t_2;\r\n    const root = FSharpList_get_Empty();\r\n    let node;\r\n    const t = new FSharpList(state, void 0);\r\n    root.tail = t;\r\n    node = t;\r\n    let acc = state;\r\n    let xs_3 = xs;\r\n    while (!FSharpList__get_IsEmpty(xs_3)) {\r\n        acc = folder(acc, FSharpList__get_Head(xs_3));\r\n        node = ((xs_4 = node, (t_2 = (new FSharpList(acc, void 0)), (xs_4.tail = t_2, t_2))));\r\n        xs_3 = FSharpList__get_Tail(xs_3);\r\n    }\r\n    const xs_6 = node;\r\n    const t_4 = FSharpList_get_Empty();\r\n    xs_6.tail = t_4;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function scanBack(folder, xs, state) {\r\n    return ofArray(scanBack_1(folder, toArray(xs), state));\r\n}\r\n\r\nexport function append(xs, ys) {\r\n    return fold((acc, x) => FSharpList_Cons_305B8EAC(x, acc), ys, reverse(xs));\r\n}\r\n\r\nexport function collect(mapping, xs) {\r\n    let xs_1, t;\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    let ys = xs;\r\n    while (!FSharpList__get_IsEmpty(ys)) {\r\n        let zs = mapping(FSharpList__get_Head(ys));\r\n        while (!FSharpList__get_IsEmpty(zs)) {\r\n            node = ((xs_1 = node, (t = (new FSharpList(FSharpList__get_Head(zs), void 0)), (xs_1.tail = t, t))));\r\n            zs = FSharpList__get_Tail(zs);\r\n        }\r\n        ys = FSharpList__get_Tail(ys);\r\n    }\r\n    const xs_3 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_3.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function mapIndexed(mapping, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = foldIndexed((i, acc, x) => {\r\n        const t = new FSharpList(mapping(i, x), void 0);\r\n        acc.tail = t;\r\n        return t;\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function map(mapping, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold((acc, x) => {\r\n        const t = new FSharpList(mapping(x), void 0);\r\n        acc.tail = t;\r\n        return t;\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function indexed(xs) {\r\n    return mapIndexed((i, x) => [i, x], xs);\r\n}\r\n\r\nexport function map2(mapping, xs, ys) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold2((acc, x, y) => {\r\n        const t = new FSharpList(mapping(x, y), void 0);\r\n        acc.tail = t;\r\n        return t;\r\n    }, root, xs, ys);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function mapIndexed2(mapping, xs, ys) {\r\n    const loop = (i_mut, acc_mut, xs_1_mut, ys_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1) ? true : FSharpList__get_IsEmpty(ys_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                acc_mut = ((t = (new FSharpList(mapping(i, FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1)), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                ys_1_mut = FSharpList__get_Tail(ys_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node_1 = loop(0, root, xs, ys);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node_1.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function map3(mapping, xs, ys, zs) {\r\n    const loop = (acc_mut, xs_1_mut, ys_1_mut, zs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const acc = acc_mut, xs_1 = xs_1_mut, ys_1 = ys_1_mut, zs_1 = zs_1_mut;\r\n            if ((FSharpList__get_IsEmpty(xs_1) ? true : FSharpList__get_IsEmpty(ys_1)) ? true : FSharpList__get_IsEmpty(zs_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                acc_mut = ((t = (new FSharpList(mapping(FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1), FSharpList__get_Head(zs_1)), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                ys_1_mut = FSharpList__get_Tail(ys_1);\r\n                zs_1_mut = FSharpList__get_Tail(zs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node_1 = loop(root, xs, ys, zs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node_1.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function mapFold(mapping, state, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const patternInput_1 = fold((tupledArg, x) => {\r\n        let t;\r\n        const patternInput = mapping(tupledArg[1], x);\r\n        return [(t = (new FSharpList(patternInput[0], void 0)), (tupledArg[0].tail = t, t)), patternInput[1]];\r\n    }, [root, state], xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    patternInput_1[0].tail = t_2;\r\n    return [FSharpList__get_Tail(root), patternInput_1[1]];\r\n}\r\n\r\nexport function mapFoldBack(mapping, xs, state) {\r\n    return mapFold((acc, x) => mapping(x, acc), state, reverse(xs));\r\n}\r\n\r\nexport function tryPick(f, xs) {\r\n    const loop = (xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return void 0;\r\n            }\r\n            else {\r\n                const matchValue = f(FSharpList__get_Head(xs_1));\r\n                if (matchValue == null) {\r\n                    xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return matchValue;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(xs);\r\n}\r\n\r\nexport function pick(f, xs) {\r\n    const matchValue = tryPick(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFind(f, xs) {\r\n    return tryPick((x) => (f(x) ? some(x) : (void 0)), xs);\r\n}\r\n\r\nexport function find(f, xs) {\r\n    const matchValue = tryFind(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindBack(f, xs) {\r\n    return tryFindBack_1(f, toArray(xs));\r\n}\r\n\r\nexport function findBack(f, xs) {\r\n    const matchValue = tryFindBack(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindIndex(f, xs) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return void 0;\r\n            }\r\n            else if (f(FSharpList__get_Head(xs_1))) {\r\n                return i;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs);\r\n}\r\n\r\nexport function findIndex(f, xs) {\r\n    const matchValue = tryFindIndex(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function tryFindIndexBack(f, xs) {\r\n    return tryFindIndexBack_1(f, toArray(xs));\r\n}\r\n\r\nexport function findIndexBack(f, xs) {\r\n    const matchValue = tryFindIndexBack(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function tryItem(n, xs) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return void 0;\r\n            }\r\n            else if (i === n) {\r\n                return some(FSharpList__get_Head(xs_1));\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs);\r\n}\r\n\r\nexport function item(n, xs) {\r\n    return FSharpList__get_Item_Z524259A4(xs, n);\r\n}\r\n\r\nexport function filter(f, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold((acc, x) => {\r\n        if (f(x)) {\r\n            const t = new FSharpList(x, void 0);\r\n            acc.tail = t;\r\n            return t;\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function partition(f, xs) {\r\n    const patternInput = [FSharpList_get_Empty(), FSharpList_get_Empty()];\r\n    const root2 = patternInput[1];\r\n    const root1 = patternInput[0];\r\n    const patternInput_1 = fold(uncurry(2, (tupledArg) => {\r\n        const lacc = tupledArg[0];\r\n        const racc = tupledArg[1];\r\n        return (x) => {\r\n            let t, t_2;\r\n            return f(x) ? [(t = (new FSharpList(x, void 0)), (lacc.tail = t, t)), racc] : [lacc, (t_2 = (new FSharpList(x, void 0)), (racc.tail = t_2, t_2))];\r\n        };\r\n    }), [root1, root2], xs);\r\n    const t_4 = FSharpList_get_Empty();\r\n    patternInput_1[0].tail = t_4;\r\n    const t_5 = FSharpList_get_Empty();\r\n    patternInput_1[1].tail = t_5;\r\n    return [FSharpList__get_Tail(root1), FSharpList__get_Tail(root2)];\r\n}\r\n\r\nexport function choose(f, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold((acc, x) => {\r\n        const matchValue = f(x);\r\n        if (matchValue == null) {\r\n            return acc;\r\n        }\r\n        else {\r\n            const t = new FSharpList(value_1(matchValue), void 0);\r\n            acc.tail = t;\r\n            return t;\r\n        }\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function contains(value, xs, eq) {\r\n    return tryFindIndex((v) => eq.Equals(value, v), xs) != null;\r\n}\r\n\r\nexport function initialize(n, f) {\r\n    let xs, t;\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    for (let i = 0; i <= (n - 1); i++) {\r\n        node = ((xs = node, (t = (new FSharpList(f(i), void 0)), (xs.tail = t, t))));\r\n    }\r\n    const xs_2 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_2.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function replicate(n, x) {\r\n    return initialize(n, (_arg1) => x);\r\n}\r\n\r\nexport function reduce(f, xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        throw (new Error(SR_inputListWasEmpty));\r\n    }\r\n    else {\r\n        return fold(f, head(xs), tail(xs));\r\n    }\r\n}\r\n\r\nexport function reduceBack(f, xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        throw (new Error(SR_inputListWasEmpty));\r\n    }\r\n    else {\r\n        return foldBack(f, tail(xs), head(xs));\r\n    }\r\n}\r\n\r\nexport function forAll(f, xs) {\r\n    return fold((acc, x) => (acc && f(x)), true, xs);\r\n}\r\n\r\nexport function forAll2(f, xs, ys) {\r\n    return fold2((acc, x, y) => (acc && f(x, y)), true, xs, ys);\r\n}\r\n\r\nexport function exists(f, xs) {\r\n    return tryFindIndex(f, xs) != null;\r\n}\r\n\r\nexport function exists2(f_mut, xs_mut, ys_mut) {\r\n    exists2:\r\n    while (true) {\r\n        const f = f_mut, xs = xs_mut, ys = ys_mut;\r\n        const matchValue = [FSharpList__get_IsEmpty(xs), FSharpList__get_IsEmpty(ys)];\r\n        let pattern_matching_result;\r\n        if (matchValue[0]) {\r\n            if (matchValue[1]) {\r\n                pattern_matching_result = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result = 2;\r\n            }\r\n        }\r\n        else if (matchValue[1]) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return false;\r\n            }\r\n            case 1: {\r\n                if (f(FSharpList__get_Head(xs), FSharpList__get_Head(ys))) {\r\n                    return true;\r\n                }\r\n                else {\r\n                    f_mut = f;\r\n                    xs_mut = FSharpList__get_Tail(xs);\r\n                    ys_mut = FSharpList__get_Tail(ys);\r\n                    continue exists2;\r\n                }\r\n            }\r\n            case 2: {\r\n                throw (new Error((SR_listsHadDifferentLengths + \"\\\\nParameter name: \") + \"list2\"));\r\n            }\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function unzip(xs) {\r\n    return foldBack((tupledArg, tupledArg_1) => [FSharpList_Cons_305B8EAC(tupledArg[0], tupledArg_1[0]), FSharpList_Cons_305B8EAC(tupledArg[1], tupledArg_1[1])], xs, [FSharpList_get_Empty(), FSharpList_get_Empty()]);\r\n}\r\n\r\nexport function unzip3(xs) {\r\n    return foldBack((tupledArg, tupledArg_1) => [FSharpList_Cons_305B8EAC(tupledArg[0], tupledArg_1[0]), FSharpList_Cons_305B8EAC(tupledArg[1], tupledArg_1[1]), FSharpList_Cons_305B8EAC(tupledArg[2], tupledArg_1[2])], xs, [FSharpList_get_Empty(), FSharpList_get_Empty(), FSharpList_get_Empty()]);\r\n}\r\n\r\nexport function zip(xs, ys) {\r\n    return map2((x, y) => [x, y], xs, ys);\r\n}\r\n\r\nexport function zip3(xs, ys, zs) {\r\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\r\n}\r\n\r\nexport function sortWith(comparer, xs) {\r\n    const arr = toArray(xs);\r\n    arr.sort(comparer);\r\n    return ofArray(arr);\r\n}\r\n\r\nexport function sort(xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(x, y), xs);\r\n}\r\n\r\nexport function sortBy(projection, xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(projection(x), projection(y)), xs);\r\n}\r\n\r\nexport function sortDescending(xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(x, y) * -1), xs);\r\n}\r\n\r\nexport function sortByDescending(projection, xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(projection(x), projection(y)) * -1), xs);\r\n}\r\n\r\nexport function sum(xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\r\n}\r\n\r\nexport function sumBy(f, xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\r\n}\r\n\r\nexport function maxBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function max(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function minBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function min(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function average(xs, averager) {\r\n    let count = 0;\r\n    return averager.DivideByInt(fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, x);\r\n    }, averager.GetZero(), xs), count);\r\n}\r\n\r\nexport function averageBy(f, xs, averager) {\r\n    let count = 0;\r\n    return averager.DivideByInt(fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, f(x));\r\n    }, averager.GetZero(), xs), count);\r\n}\r\n\r\nexport function permute(f, xs) {\r\n    return ofArray(permute_1(f, toArray(xs)));\r\n}\r\n\r\nexport function chunkBySize(chunkSize, xs) {\r\n    return ofArray(map_1((xs_1) => ofArray(xs_1), chunkBySize_1(chunkSize, toArray(xs))));\r\n}\r\n\r\nexport function allPairs(xs, ys) {\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    iterate((x) => {\r\n        iterate((y) => {\r\n            let xs_1, t;\r\n            node = ((xs_1 = node, (t = (new FSharpList([x, y], void 0)), (xs_1.tail = t, t))));\r\n        }, ys);\r\n    }, xs);\r\n    const xs_3 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_3.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function skip(count_mut, xs_mut) {\r\n    skip:\r\n    while (true) {\r\n        const count = count_mut, xs = xs_mut;\r\n        if (count <= 0) {\r\n            return xs;\r\n        }\r\n        else if (FSharpList__get_IsEmpty(xs)) {\r\n            throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"list\"));\r\n        }\r\n        else {\r\n            count_mut = (count - 1);\r\n            xs_mut = FSharpList__get_Tail(xs);\r\n            continue skip;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function skipWhile(predicate_mut, xs_mut) {\r\n    skipWhile:\r\n    while (true) {\r\n        const predicate = predicate_mut, xs = xs_mut;\r\n        if (FSharpList__get_IsEmpty(xs)) {\r\n            return xs;\r\n        }\r\n        else if (!predicate(FSharpList__get_Head(xs))) {\r\n            return xs;\r\n        }\r\n        else {\r\n            predicate_mut = predicate;\r\n            xs_mut = FSharpList__get_Tail(xs);\r\n            continue skipWhile;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function take(count, xs) {\r\n    if (count < 0) {\r\n        throw (new Error((SR_inputMustBeNonNegative + \"\\\\nParameter name: \") + \"count\"));\r\n    }\r\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (i <= 0) {\r\n                return acc;\r\n            }\r\n            else if (FSharpList__get_IsEmpty(xs_1)) {\r\n                throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"list\"));\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                acc_mut = ((t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node = loop(count, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function takeWhile(predicate, xs) {\r\n    const loop = (acc_mut, xs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return acc;\r\n            }\r\n            else if (!predicate(FSharpList__get_Head(xs_1))) {\r\n                return acc;\r\n            }\r\n            else {\r\n                acc_mut = ((t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node = loop(root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function truncate(count, xs) {\r\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (i <= 0) {\r\n                return acc;\r\n            }\r\n            else if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                acc_mut = ((t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node = loop(count, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function getSlice(startIndex, endIndex, xs) {\r\n    const len = length(xs) | 0;\r\n    const startIndex_1 = defaultArg(startIndex, 0) | 0;\r\n    const endIndex_1 = defaultArg(endIndex, len - 1) | 0;\r\n    if (startIndex_1 < 0) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"startIndex\"));\r\n    }\r\n    else if (endIndex_1 >= len) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"endIndex\"));\r\n    }\r\n    else if (endIndex_1 < startIndex_1) {\r\n        return FSharpList_get_Empty();\r\n    }\r\n    else {\r\n        return take((endIndex_1 - startIndex_1) + 1, skip(startIndex_1, xs));\r\n    }\r\n}\r\n\r\nexport function splitAt(index, xs) {\r\n    if (index < 0) {\r\n        throw (new Error((SR_inputMustBeNonNegative + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    if (index > FSharpList__get_Length(xs)) {\r\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return [take(index, xs), skip(index, xs)];\r\n}\r\n\r\nexport function exactlyOne(xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n    else if (FSharpList__get_IsEmpty(FSharpList__get_Tail(xs))) {\r\n        return FSharpList__get_Head(xs);\r\n    }\r\n    else {\r\n        throw (new Error((SR_inputSequenceTooLong + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n}\r\n\r\nexport function tryExactlyOne(xs) {\r\n    if ((!FSharpList__get_IsEmpty(xs)) && FSharpList__get_IsEmpty(FSharpList__get_Tail(xs))) {\r\n        return some(FSharpList__get_Head(xs));\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function where(predicate, xs) {\r\n    return filter(predicate, xs);\r\n}\r\n\r\nexport function pairwise(xs) {\r\n    return ofArray(pairwise_1(toArray(xs)));\r\n}\r\n\r\nexport function windowed(windowSize, xs) {\r\n    return ofArray(map_1((xs_1) => ofArray(xs_1), windowed_1(windowSize, toArray(xs))));\r\n}\r\n\r\nexport function splitInto(chunks, xs) {\r\n    return ofArray(map_1((xs_1) => ofArray(xs_1), splitInto_1(chunks, toArray(xs))));\r\n}\r\n\r\nexport function transpose(lists) {\r\n    return ofArray(map_1((xs_1) => ofArray(xs_1), transpose_1(map_1((xs) => toArray(xs), Array.from(lists)))));\r\n}\r\n\r\n","import { compare, physicalHash, equals, structuralHash } from \"./Util.js\";\r\n\r\nexport function HashIdentity_FromFunctions(hash, eq) {\r\n    return {\r\n        Equals(x, y) {\r\n            return eq(x, y);\r\n        },\r\n        GetHashCode(x_1) {\r\n            return hash(x_1);\r\n        },\r\n    };\r\n}\r\n\r\nexport function HashIdentity_Structural() {\r\n    return HashIdentity_FromFunctions((obj) => structuralHash(obj), (e1, e2) => equals(e1, e2));\r\n}\r\n\r\nexport function HashIdentity_Reference() {\r\n    return HashIdentity_FromFunctions((obj) => physicalHash(obj), (e1, e2) => (e1 === e2));\r\n}\r\n\r\nexport function ComparisonIdentity_FromFunction(comparer) {\r\n    return {\r\n        Compare(x, y) {\r\n            return comparer(x, y);\r\n        },\r\n    };\r\n}\r\n\r\nexport function ComparisonIdentity_Structural() {\r\n    return ComparisonIdentity_FromFunction((e1, e2) => compare(e1, e2));\r\n}\r\n\r\n","import { substring, format, isNullOrEmpty, join } from \"./String.js\";\r\nimport { class_type } from \"./Reflection.js\";\r\nimport { clear, int32ToString } from \"./Util.js\";\r\nimport { toString } from \"./Types.js\";\r\n\r\nexport class StringBuilder {\r\n    constructor(value, capacity) {\r\n        this.buf = [];\r\n        if (!isNullOrEmpty(value)) {\r\n            void (this.buf.push(value));\r\n        }\r\n    }\r\n    toString() {\r\n        const __ = this;\r\n        return join(\"\", __.buf);\r\n    }\r\n}\r\n\r\nexport function StringBuilder$reflection() {\r\n    return class_type(\"System.Text.StringBuilder\", void 0, StringBuilder);\r\n}\r\n\r\nexport function StringBuilder_$ctor_Z18115A39(value, capacity) {\r\n    return new StringBuilder(value, capacity);\r\n}\r\n\r\nexport function StringBuilder_$ctor_Z524259A4(capacity) {\r\n    return StringBuilder_$ctor_Z18115A39(\"\", capacity);\r\n}\r\n\r\nexport function StringBuilder_$ctor_Z721C83C5(value) {\r\n    return StringBuilder_$ctor_Z18115A39(value, 16);\r\n}\r\n\r\nexport function StringBuilder_$ctor() {\r\n    return StringBuilder_$ctor_Z18115A39(\"\", 16);\r\n}\r\n\r\nexport function StringBuilder__Append_Z721C83C5(x, s) {\r\n    void (x.buf.push(s));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__Append_244C7CD6(x, c) {\r\n    void (x.buf.push(c));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__Append_Z524259A4(x, o) {\r\n    void (x.buf.push(int32ToString(o)));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__Append_5E38073B(x, o) {\r\n    void (x.buf.push(o.toString()));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__Append_Z1FBCCD16(x, o) {\r\n    void (x.buf.push(toString(o)));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__Append_4E60E31B(x, o) {\r\n    void (x.buf.push(toString(o)));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__Append_695F1130(x, cs) {\r\n    void (x.buf.push(cs.join('')));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__Append_43A65C09(x, s) {\r\n    void (x.buf.push(toString(s)));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__AppendFormat_433E080(x, fmt, o) {\r\n    void (x.buf.push(format(fmt, o)));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__AppendLine(x) {\r\n    void (x.buf.push(\"\\n\"));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__AppendLine_Z721C83C5(x, s) {\r\n    void (x.buf.push(s));\r\n    void (x.buf.push(\"\\n\"));\r\n    return x;\r\n}\r\n\r\nexport function StringBuilder__get_Length(x) {\r\n    let len = 0;\r\n    for (let i = x.buf.length - 1; i >= 0; i--) {\r\n        len = ((len + x.buf[i].length) | 0);\r\n    }\r\n    return len | 0;\r\n}\r\n\r\nexport function StringBuilder__ToString_Z37302880(x, firstIndex, length) {\r\n    return substring(toString(x), firstIndex, length);\r\n}\r\n\r\nexport function StringBuilder__Clear(x) {\r\n    clear(x.buf);\r\n    return x;\r\n}\r\n\r\n","import { structuralHash, equals } from \"./Util.js\";\r\nimport { HashIdentity_Structural, ComparisonIdentity_Structural } from \"./FSharp.Collections.js\";\r\nimport { StringBuilder__Append_Z721C83C5 } from \"./System.Text.js\";\r\n\r\nexport const LanguagePrimitives_GenericEqualityComparer = {\r\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\r\n        return equals(x, y);\r\n    },\r\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\r\n        return structuralHash(x_1);\r\n    },\r\n};\r\n\r\nexport const LanguagePrimitives_GenericEqualityERComparer = {\r\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\r\n        return equals(x, y);\r\n    },\r\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\r\n        return structuralHash(x_1);\r\n    },\r\n};\r\n\r\nexport function LanguagePrimitives_FastGenericComparer() {\r\n    return ComparisonIdentity_Structural();\r\n}\r\n\r\nexport function LanguagePrimitives_FastGenericComparerFromTable() {\r\n    return ComparisonIdentity_Structural();\r\n}\r\n\r\nexport function LanguagePrimitives_FastGenericEqualityComparer() {\r\n    return HashIdentity_Structural();\r\n}\r\n\r\nexport function LanguagePrimitives_FastGenericEqualityComparerFromTable() {\r\n    return HashIdentity_Structural();\r\n}\r\n\r\nexport function Operators_Failure(message) {\r\n    return new Error(message);\r\n}\r\n\r\nexport function Operators_FailurePattern(exn) {\r\n    return exn.message;\r\n}\r\n\r\nexport function Operators_NullArg(x) {\r\n    throw (new Error(x));\r\n}\r\n\r\nexport function Operators_Using(resource, action) {\r\n    try {\r\n        return action(resource);\r\n    }\r\n    finally {\r\n        if (equals(resource, null)) {\r\n        }\r\n        else {\r\n            resource.Dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport function Operators_Lock(_lockObj, action) {\r\n    return action();\r\n}\r\n\r\nexport function ExtraTopLevelOperators_LazyPattern(input) {\r\n    return input.Value;\r\n}\r\n\r\nexport function PrintfModule_PrintFormatToStringBuilderThen(continuation, builder, format) {\r\n    return format.cont((s) => {\r\n        StringBuilder__Append_Z721C83C5(builder, s);\r\n        return continuation();\r\n    });\r\n}\r\n\r\nexport function PrintfModule_PrintFormatToStringBuilder(builder, format) {\r\n    return PrintfModule_PrintFormatToStringBuilderThen(() => {\r\n    }, builder, format);\r\n}\r\n\r\n","import { clear, equals, isArrayLike, isDisposable, toIterator, getEnumerator } from \"./Util.js\";\r\nimport { toString } from \"./Types.js\";\r\nimport { class_type } from \"./Reflection.js\";\r\nimport { some, value as value_1 } from \"./Option.js\";\r\nimport { Operators_NullArg } from \"./FSharp.Core.js\";\r\nimport { chunkBySize as chunkBySize_1, permute as permute_1, transpose as transpose_1, windowed as windowed_1, splitInto as splitInto_1, map as map_1, pairwise as pairwise_1, scanBack as scanBack_1, reverse as reverse_1, mapFoldBack as mapFoldBack_1, mapFold as mapFold_1, tryItem as tryItem_1, tryHead as tryHead_1, foldBack2 as foldBack2_1, foldBack as foldBack_1, tryFindIndexBack as tryFindIndexBack_1, tryFindBack as tryFindBack_1, singleton as singleton_1 } from \"./Array.js\";\r\nimport { length as length_1, tryItem as tryItem_2, isEmpty as isEmpty_1, tryHead as tryHead_2, ofSeq as ofSeq_1, ofArray as ofArray_1, toArray as toArray_1, FSharpList } from \"./List.js\";\r\n\r\nexport const SR_enumerationAlreadyFinished = \"Enumeration already finished.\";\r\n\r\nexport const SR_enumerationNotStarted = \"Enumeration has not started. Call MoveNext.\";\r\n\r\nexport const SR_inputSequenceEmpty = \"The input sequence was empty.\";\r\n\r\nexport const SR_inputSequenceTooLong = \"The input sequence contains more than one element.\";\r\n\r\nexport const SR_keyNotFoundAlt = \"An index satisfying the predicate was not found in the collection.\";\r\n\r\nexport const SR_notEnoughElements = \"The input sequence has an insufficient number of elements.\";\r\n\r\nexport const SR_resetNotSupported = \"Reset is not supported on this enumerator.\";\r\n\r\nexport function Enumerator_noReset() {\r\n    throw (new Error(SR_resetNotSupported));\r\n}\r\n\r\nexport function Enumerator_notStarted() {\r\n    throw (new Error(SR_enumerationNotStarted));\r\n}\r\n\r\nexport function Enumerator_alreadyFinished() {\r\n    throw (new Error(SR_enumerationAlreadyFinished));\r\n}\r\n\r\nexport class Enumerator_Seq {\r\n    constructor(f) {\r\n        this.f = f;\r\n    }\r\n    toString() {\r\n        const xs = this;\r\n        const maxCount = 4;\r\n        let i = 0;\r\n        let str = \"seq [\";\r\n        const e = getEnumerator(xs);\r\n        try {\r\n            while ((i < maxCount) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                if (i > 0) {\r\n                    str = (str + \"; \");\r\n                }\r\n                str = (str + toString(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()));\r\n                i = ((i + 1) | 0);\r\n            }\r\n            if (i === maxCount) {\r\n                str = (str + \"; ...\");\r\n            }\r\n            return str + \"]\";\r\n        }\r\n        finally {\r\n            e.Dispose();\r\n        }\r\n    }\r\n    GetEnumerator() {\r\n        const x = this;\r\n        return x.f();\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const x = this;\r\n        return x.f();\r\n    }\r\n}\r\n\r\nexport function Enumerator_Seq$reflection(gen0) {\r\n    return class_type(\"SeqModule.Enumerator.Seq\", [gen0], Enumerator_Seq);\r\n}\r\n\r\nexport function Enumerator_Seq_$ctor_673A07F2(f) {\r\n    return new Enumerator_Seq(f);\r\n}\r\n\r\nexport class Enumerator_FromFunctions$1 {\r\n    constructor(current, next, dispose) {\r\n        this.current = current;\r\n        this.next = next;\r\n        this.dispose = dispose;\r\n    }\r\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current();\r\n    }\r\n    [\"System.Collections.IEnumerator.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current();\r\n    }\r\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\r\n        const __ = this;\r\n        return __.next();\r\n    }\r\n    [\"System.Collections.IEnumerator.Reset\"]() {\r\n        Enumerator_noReset();\r\n    }\r\n    Dispose() {\r\n        const __ = this;\r\n        __.dispose();\r\n    }\r\n}\r\n\r\nexport function Enumerator_FromFunctions$1$reflection(gen0) {\r\n    return class_type(\"SeqModule.Enumerator.FromFunctions`1\", [gen0], Enumerator_FromFunctions$1);\r\n}\r\n\r\nexport function Enumerator_FromFunctions$1_$ctor_58C54629(current, next, dispose) {\r\n    return new Enumerator_FromFunctions$1(current, next, dispose);\r\n}\r\n\r\nexport function Enumerator_cast(e) {\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => e[\"System.Collections.IEnumerator.get_Current\"](), () => e[\"System.Collections.IEnumerator.MoveNext\"](), () => {\r\n        if (isDisposable(e)) {\r\n            e.Dispose();\r\n        }\r\n    });\r\n}\r\n\r\nexport function Enumerator_concat(sources) {\r\n    let outerOpt = void 0;\r\n    let innerOpt = void 0;\r\n    let started = false;\r\n    let finished = false;\r\n    let curr = void 0;\r\n    const finish = () => {\r\n        finished = true;\r\n        if (innerOpt != null) {\r\n            const inner = innerOpt;\r\n            try {\r\n                inner.Dispose();\r\n            }\r\n            finally {\r\n                innerOpt = (void 0);\r\n            }\r\n        }\r\n        if (outerOpt != null) {\r\n            const outer = outerOpt;\r\n            try {\r\n                outer.Dispose();\r\n            }\r\n            finally {\r\n                outerOpt = (void 0);\r\n            }\r\n        }\r\n    };\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\r\n        if (!started) {\r\n            Enumerator_notStarted();\r\n        }\r\n        else if (finished) {\r\n            Enumerator_alreadyFinished();\r\n        }\r\n        if (curr != null) {\r\n            return value_1(curr);\r\n        }\r\n        else {\r\n            return Enumerator_alreadyFinished();\r\n        }\r\n    }, () => {\r\n        let copyOfStruct;\r\n        if (!started) {\r\n            started = true;\r\n        }\r\n        if (finished) {\r\n            return false;\r\n        }\r\n        else {\r\n            let res = void 0;\r\n            while (res == null) {\r\n                const matchValue = [outerOpt, innerOpt];\r\n                if (matchValue[0] != null) {\r\n                    if (matchValue[1] != null) {\r\n                        const inner_1 = matchValue[1];\r\n                        if (inner_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                            curr = some(inner_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n                            res = true;\r\n                        }\r\n                        else {\r\n                            try {\r\n                                inner_1.Dispose();\r\n                            }\r\n                            finally {\r\n                                innerOpt = (void 0);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        const outer_1 = matchValue[0];\r\n                        if (outer_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                            const ie = outer_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                            innerOpt = ((copyOfStruct = ie, getEnumerator(copyOfStruct)));\r\n                        }\r\n                        else {\r\n                            finish();\r\n                            res = false;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    outerOpt = getEnumerator(sources);\r\n                }\r\n            }\r\n            return value_1(res);\r\n        }\r\n    }, () => {\r\n        if (!finished) {\r\n            finish();\r\n        }\r\n    });\r\n}\r\n\r\nexport function Enumerator_enumerateThenFinally(f, e) {\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => e[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), () => e[\"System.Collections.IEnumerator.MoveNext\"](), () => {\r\n        try {\r\n            e.Dispose();\r\n        }\r\n        finally {\r\n            f();\r\n        }\r\n    });\r\n}\r\n\r\nexport function Enumerator_generateWhileSome(openf, compute, closef) {\r\n    let started = false;\r\n    let curr = void 0;\r\n    let state = some(openf());\r\n    const dispose = () => {\r\n        if (state != null) {\r\n            const x_1 = value_1(state);\r\n            try {\r\n                closef(x_1);\r\n            }\r\n            finally {\r\n                state = (void 0);\r\n            }\r\n        }\r\n    };\r\n    const finish = () => {\r\n        try {\r\n            dispose();\r\n        }\r\n        finally {\r\n            curr = (void 0);\r\n        }\r\n    };\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\r\n        if (!started) {\r\n            Enumerator_notStarted();\r\n        }\r\n        if (curr != null) {\r\n            return value_1(curr);\r\n        }\r\n        else {\r\n            return Enumerator_alreadyFinished();\r\n        }\r\n    }, () => {\r\n        if (!started) {\r\n            started = true;\r\n        }\r\n        if (state != null) {\r\n            const s = value_1(state);\r\n            let matchValue_1;\r\n            try {\r\n                matchValue_1 = compute(s);\r\n            }\r\n            catch (matchValue) {\r\n                finish();\r\n                throw matchValue;\r\n            }\r\n            if (matchValue_1 != null) {\r\n                curr = matchValue_1;\r\n                return true;\r\n            }\r\n            else {\r\n                finish();\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }, dispose);\r\n}\r\n\r\nexport function Enumerator_unfold(f, state) {\r\n    let curr = void 0;\r\n    let acc = state;\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\r\n        if (curr != null) {\r\n            const x = curr[0];\r\n            const st = curr[1];\r\n            return x;\r\n        }\r\n        else {\r\n            return Enumerator_notStarted();\r\n        }\r\n    }, () => {\r\n        curr = f(acc);\r\n        if (curr != null) {\r\n            const x_1 = curr[0];\r\n            const st_1 = curr[1];\r\n            acc = st_1;\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }, () => {\r\n    });\r\n}\r\n\r\nexport function indexNotFound() {\r\n    throw (new Error(SR_keyNotFoundAlt));\r\n}\r\n\r\nexport function checkNonNull(argName, arg) {\r\n    if (arg == null) {\r\n        Operators_NullArg(argName);\r\n    }\r\n}\r\n\r\nexport function mkSeq(f) {\r\n    return Enumerator_Seq_$ctor_673A07F2(f);\r\n}\r\n\r\nexport function ofSeq(xs) {\r\n    checkNonNull(\"source\", xs);\r\n    return getEnumerator(xs);\r\n}\r\n\r\nexport function delay(generator) {\r\n    return mkSeq(() => getEnumerator(generator()));\r\n}\r\n\r\nexport function concat(sources) {\r\n    return mkSeq(() => Enumerator_concat(sources));\r\n}\r\n\r\nexport function unfold(generator, state) {\r\n    return mkSeq(() => Enumerator_unfold(generator, state));\r\n}\r\n\r\nexport function empty() {\r\n    return delay(() => (new Array(0)));\r\n}\r\n\r\nexport function singleton(x) {\r\n    return delay(() => singleton_1(x));\r\n}\r\n\r\nexport function ofArray(arr) {\r\n    return arr;\r\n}\r\n\r\nexport function toArray(xs) {\r\n    if (xs instanceof FSharpList) {\r\n        return toArray_1(xs);\r\n    }\r\n    else {\r\n        return Array.from(xs);\r\n    }\r\n}\r\n\r\nexport function ofList(xs) {\r\n    return xs;\r\n}\r\n\r\nexport function toList(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return ofArray_1(xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return xs;\r\n    }\r\n    else {\r\n        return ofSeq_1(xs);\r\n    }\r\n}\r\n\r\nexport function generate(create, compute, dispose) {\r\n    return mkSeq(() => Enumerator_generateWhileSome(create, compute, dispose));\r\n}\r\n\r\nexport function generateIndexed(create, compute, dispose) {\r\n    return mkSeq(() => {\r\n        let i = -1;\r\n        return Enumerator_generateWhileSome(create, (x) => {\r\n            i = ((i + 1) | 0);\r\n            return compute(i, x);\r\n        }, dispose);\r\n    });\r\n}\r\n\r\nexport function append(xs, ys) {\r\n    return concat([xs, ys]);\r\n}\r\n\r\nexport function cast(xs) {\r\n    return mkSeq(() => {\r\n        checkNonNull(\"source\", xs);\r\n        return Enumerator_cast(getEnumerator(xs));\r\n    });\r\n}\r\n\r\nexport function choose(chooser, xs) {\r\n    return generate(() => ofSeq(xs), (e) => {\r\n        let curr = void 0;\r\n        while ((curr == null) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            curr = chooser(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return curr;\r\n    }, (e_1) => {\r\n        e_1.Dispose();\r\n    });\r\n}\r\n\r\nexport function compareWith(comparer, xs, ys) {\r\n    const e1 = ofSeq(xs);\r\n    try {\r\n        const e2 = ofSeq(ys);\r\n        try {\r\n            let c = 0;\r\n            let b1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\r\n            let b2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\r\n            while (((c === 0) && b1) && b2) {\r\n                c = (comparer(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) | 0);\r\n                if (c === 0) {\r\n                    b1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\r\n                    b2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\r\n                }\r\n            }\r\n            return ((c !== 0) ? c : (b1 ? 1 : (b2 ? -1 : 0))) | 0;\r\n        }\r\n        finally {\r\n            e2.Dispose();\r\n        }\r\n    }\r\n    finally {\r\n        e1.Dispose();\r\n    }\r\n}\r\n\r\nexport function contains(value, xs, comparer) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let found = false;\r\n        while ((!found) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            found = comparer.Equals(value, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return found;\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function enumerateFromFunctions(create, moveNext, current) {\r\n    return generate(create, (x) => (moveNext(x) ? some(current(x)) : (void 0)), (x_1) => {\r\n        const matchValue = x_1;\r\n        if (isDisposable(matchValue)) {\r\n            matchValue.Dispose();\r\n        }\r\n    });\r\n}\r\n\r\nexport function enumerateThenFinally(source, compensation) {\r\n    const compensation_1 = compensation;\r\n    return mkSeq(() => {\r\n        try {\r\n            return Enumerator_enumerateThenFinally(compensation_1, ofSeq(source));\r\n        }\r\n        catch (matchValue) {\r\n            compensation_1();\r\n            throw matchValue;\r\n        }\r\n    });\r\n}\r\n\r\nexport function enumerateUsing(resource, source) {\r\n    const compensation = () => {\r\n        if (equals(resource, null)) {\r\n        }\r\n        else {\r\n            let copyOfStruct = resource;\r\n            copyOfStruct.Dispose();\r\n        }\r\n    };\r\n    return mkSeq(() => {\r\n        try {\r\n            return Enumerator_enumerateThenFinally(compensation, ofSeq(source(resource)));\r\n        }\r\n        catch (matchValue_1) {\r\n            compensation();\r\n            throw matchValue_1;\r\n        }\r\n    });\r\n}\r\n\r\nexport function enumerateWhile(guard, xs) {\r\n    return concat(unfold((i) => (guard() ? [xs, i + 1] : (void 0)), 0));\r\n}\r\n\r\nexport function filter(f, xs) {\r\n    return choose((x) => {\r\n        if (f(x)) {\r\n            return some(x);\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, xs);\r\n}\r\n\r\nexport function exists(predicate, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let found = false;\r\n        while ((!found) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            found = predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return found;\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function exists2(predicate, xs, ys) {\r\n    const e1 = ofSeq(xs);\r\n    try {\r\n        const e2 = ofSeq(ys);\r\n        try {\r\n            let found = false;\r\n            while (((!found) && e1[\"System.Collections.IEnumerator.MoveNext\"]()) && e2[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                found = predicate(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            return found;\r\n        }\r\n        finally {\r\n            e2.Dispose();\r\n        }\r\n    }\r\n    finally {\r\n        e1.Dispose();\r\n    }\r\n}\r\n\r\nexport function exactlyOne(xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const v = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                throw (new Error((SR_inputSequenceTooLong + \"\\\\nParameter name: \") + \"source\"));\r\n            }\r\n            else {\r\n                return v;\r\n            }\r\n        }\r\n        else {\r\n            throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\r\n        }\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function tryExactlyOne(xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const v = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? (void 0) : some(v);\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function tryFind(predicate, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let res = void 0;\r\n        while ((res == null) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const c = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            if (predicate(c)) {\r\n                res = some(c);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function find(predicate, xs) {\r\n    const matchValue = tryFind(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindBack(predicate, xs) {\r\n    return tryFindBack_1(predicate, toArray(xs));\r\n}\r\n\r\nexport function findBack(predicate, xs) {\r\n    const matchValue = tryFindBack(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindIndex(predicate, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        const loop = (i_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const i = i_mut;\r\n                if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    if (predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) {\r\n                        return i;\r\n                    }\r\n                    else {\r\n                        i_mut = (i + 1);\r\n                        continue loop;\r\n                    }\r\n                }\r\n                else {\r\n                    return void 0;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(0);\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function findIndex(predicate, xs) {\r\n    const matchValue = tryFindIndex(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound() | 0;\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function tryFindIndexBack(predicate, xs) {\r\n    return tryFindIndexBack_1(predicate, toArray(xs));\r\n}\r\n\r\nexport function findIndexBack(predicate, xs) {\r\n    const matchValue = tryFindIndexBack(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound() | 0;\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function fold(folder, state, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let acc = state;\r\n        while (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            acc = folder(acc, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return acc;\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function foldBack(folder, xs, state) {\r\n    return foldBack_1(folder, toArray(xs), state);\r\n}\r\n\r\nexport function fold2(folder, state, xs, ys) {\r\n    const e1 = ofSeq(xs);\r\n    try {\r\n        const e2 = ofSeq(ys);\r\n        try {\r\n            let acc = state;\r\n            while (e1[\"System.Collections.IEnumerator.MoveNext\"]() && e2[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                acc = folder(acc, e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            return acc;\r\n        }\r\n        finally {\r\n            e2.Dispose();\r\n        }\r\n    }\r\n    finally {\r\n        e1.Dispose();\r\n    }\r\n}\r\n\r\nexport function foldBack2(folder, xs, ys, state) {\r\n    return foldBack2_1(folder, toArray(xs), toArray(ys), state);\r\n}\r\n\r\nexport function forAll(predicate, xs) {\r\n    return !exists((x) => (!predicate(x)), xs);\r\n}\r\n\r\nexport function forAll2(predicate, xs, ys) {\r\n    return !exists2((x, y) => (!predicate(x, y)), xs, ys);\r\n}\r\n\r\nexport function tryHead(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return tryHead_1(xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return tryHead_2(xs);\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0);\r\n        }\r\n        finally {\r\n            e.Dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport function head(xs) {\r\n    const matchValue = tryHead(xs);\r\n    if (matchValue == null) {\r\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function initialize(count, f) {\r\n    return unfold((i) => ((i < count) ? [f(i), i + 1] : (void 0)), 0);\r\n}\r\n\r\nexport function initializeInfinite(f) {\r\n    return initialize(2147483647, f);\r\n}\r\n\r\nexport function isEmpty(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return xs.length === 0;\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return isEmpty_1(xs);\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            return !e[\"System.Collections.IEnumerator.MoveNext\"]();\r\n        }\r\n        finally {\r\n            e.Dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport function tryItem(index, xs) {\r\n    if (isArrayLike(xs)) {\r\n        return tryItem_1(index, xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return tryItem_2(index, xs);\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            const loop = (index_1_mut) => {\r\n                loop:\r\n                while (true) {\r\n                    const index_1 = index_1_mut;\r\n                    if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                        return void 0;\r\n                    }\r\n                    else if (index_1 === 0) {\r\n                        return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n                    }\r\n                    else {\r\n                        index_1_mut = (index_1 - 1);\r\n                        continue loop;\r\n                    }\r\n                    break;\r\n                }\r\n            };\r\n            return loop(index);\r\n        }\r\n        finally {\r\n            e.Dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport function item(index, xs) {\r\n    const matchValue = tryItem(index, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function iterate(action, xs) {\r\n    fold((unitVar0, x) => {\r\n        action(x);\r\n    }, void 0, xs);\r\n}\r\n\r\nexport function iterate2(action, xs, ys) {\r\n    fold2((unitVar0, x, y) => {\r\n        action(x, y);\r\n    }, void 0, xs, ys);\r\n}\r\n\r\nexport function iterateIndexed(action, xs) {\r\n    fold((i, x) => {\r\n        action(i, x);\r\n        return (i + 1) | 0;\r\n    }, 0, xs);\r\n}\r\n\r\nexport function iterateIndexed2(action, xs, ys) {\r\n    fold2((i, x, y) => {\r\n        action(i, x, y);\r\n        return (i + 1) | 0;\r\n    }, 0, xs, ys);\r\n}\r\n\r\nexport function tryLast(xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        const loop = (acc_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const acc = acc_mut;\r\n                if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    return acc;\r\n                }\r\n                else {\r\n                    acc_mut = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                    continue loop;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(loop(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function last(xs) {\r\n    const matchValue = tryLast(xs);\r\n    if (matchValue == null) {\r\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function length(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return xs.length | 0;\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return length_1(xs) | 0;\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            let count = 0;\r\n            while (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                count = ((count + 1) | 0);\r\n            }\r\n            return count | 0;\r\n        }\r\n        finally {\r\n            e.Dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport function map(mapping, xs) {\r\n    return generate(() => ofSeq(xs), (e) => (e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(mapping(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0)), (e_1) => {\r\n        e_1.Dispose();\r\n    });\r\n}\r\n\r\nexport function mapIndexed(mapping, xs) {\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => (e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(mapping(i, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0)), (e_1) => {\r\n        e_1.Dispose();\r\n    });\r\n}\r\n\r\nexport function indexed(xs) {\r\n    return mapIndexed((i, x) => [i, x], xs);\r\n}\r\n\r\nexport function map2(mapping, xs, ys) {\r\n    return generate(() => [ofSeq(xs), ofSeq(ys)], (tupledArg) => {\r\n        const e1 = tupledArg[0];\r\n        const e2 = tupledArg[1];\r\n        return (e1[\"System.Collections.IEnumerator.MoveNext\"]() && e2[\"System.Collections.IEnumerator.MoveNext\"]()) ? some(mapping(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }, (tupledArg_1) => {\r\n        try {\r\n            tupledArg_1[0].Dispose();\r\n        }\r\n        finally {\r\n            tupledArg_1[1].Dispose();\r\n        }\r\n    });\r\n}\r\n\r\nexport function mapIndexed2(mapping, xs, ys) {\r\n    return generateIndexed(() => [ofSeq(xs), ofSeq(ys)], (i, tupledArg) => {\r\n        const e1 = tupledArg[0];\r\n        const e2 = tupledArg[1];\r\n        return (e1[\"System.Collections.IEnumerator.MoveNext\"]() && e2[\"System.Collections.IEnumerator.MoveNext\"]()) ? some(mapping(i, e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }, (tupledArg_1) => {\r\n        try {\r\n            tupledArg_1[0].Dispose();\r\n        }\r\n        finally {\r\n            tupledArg_1[1].Dispose();\r\n        }\r\n    });\r\n}\r\n\r\nexport function map3(mapping, xs, ys, zs) {\r\n    return generate(() => [ofSeq(xs), ofSeq(ys), ofSeq(zs)], (tupledArg) => {\r\n        const e1 = tupledArg[0];\r\n        const e2 = tupledArg[1];\r\n        const e3 = tupledArg[2];\r\n        return ((e1[\"System.Collections.IEnumerator.MoveNext\"]() && e2[\"System.Collections.IEnumerator.MoveNext\"]()) && e3[\"System.Collections.IEnumerator.MoveNext\"]()) ? some(mapping(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e3[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }, (tupledArg_1) => {\r\n        try {\r\n            tupledArg_1[0].Dispose();\r\n        }\r\n        finally {\r\n            try {\r\n                tupledArg_1[1].Dispose();\r\n            }\r\n            finally {\r\n                tupledArg_1[2].Dispose();\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function readOnly(xs) {\r\n    checkNonNull(\"source\", xs);\r\n    return map((x) => x, xs);\r\n}\r\n\r\nexport class CachedSeq$1 {\r\n    constructor(cleanup, res) {\r\n        this.cleanup = cleanup;\r\n        this.res = res;\r\n    }\r\n    Dispose() {\r\n        const _ = this;\r\n        _.cleanup();\r\n    }\r\n    GetEnumerator() {\r\n        const _ = this;\r\n        return getEnumerator(_.res);\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const _ = this;\r\n        return getEnumerator(_.res);\r\n    }\r\n}\r\n\r\nexport function CachedSeq$1$reflection(gen0) {\r\n    return class_type(\"SeqModule.CachedSeq`1\", [gen0], CachedSeq$1);\r\n}\r\n\r\nexport function CachedSeq$1_$ctor_Z7A8347D4(cleanup, res) {\r\n    return new CachedSeq$1(cleanup, res);\r\n}\r\n\r\nexport function CachedSeq$1__Clear(_) {\r\n    _.cleanup();\r\n}\r\n\r\nexport function cache(source) {\r\n    checkNonNull(\"source\", source);\r\n    const prefix = [];\r\n    let enumeratorR = void 0;\r\n    return CachedSeq$1_$ctor_Z7A8347D4(() => {\r\n        clear(prefix);\r\n        let pattern_matching_result, e;\r\n        if (enumeratorR != null) {\r\n            if (value_1(enumeratorR) != null) {\r\n                pattern_matching_result = 0;\r\n                e = value_1(enumeratorR);\r\n            }\r\n            else {\r\n                pattern_matching_result = 1;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                e.Dispose();\r\n                break;\r\n            }\r\n        }\r\n        enumeratorR = (void 0);\r\n    }, unfold((i_1) => {\r\n        if (i_1 < prefix.length) {\r\n            return [prefix[i_1], i_1 + 1];\r\n        }\r\n        else {\r\n            if (i_1 >= prefix.length) {\r\n                let optEnumerator_2;\r\n                if (enumeratorR != null) {\r\n                    optEnumerator_2 = value_1(enumeratorR);\r\n                }\r\n                else {\r\n                    const optEnumerator = getEnumerator(source);\r\n                    enumeratorR = some(optEnumerator);\r\n                    optEnumerator_2 = optEnumerator;\r\n                }\r\n                if (optEnumerator_2 == null) {\r\n                }\r\n                else {\r\n                    const enumerator = optEnumerator_2;\r\n                    if (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                        void (prefix.push(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()));\r\n                    }\r\n                    else {\r\n                        enumerator.Dispose();\r\n                        enumeratorR = some(void 0);\r\n                    }\r\n                }\r\n            }\r\n            return (i_1 < prefix.length) ? [prefix[i_1], i_1 + 1] : (void 0);\r\n        }\r\n    }, 0));\r\n}\r\n\r\nexport function allPairs(xs, ys) {\r\n    const ysCache = cache(ys);\r\n    return delay(() => concat(map((x) => map((y) => [x, y], ysCache), xs)));\r\n}\r\n\r\nexport function mapFold(mapping, state, xs) {\r\n    const patternInput = mapFold_1(mapping, state, toArray(xs));\r\n    return [readOnly(patternInput[0]), patternInput[1]];\r\n}\r\n\r\nexport function mapFoldBack(mapping, xs, state) {\r\n    const patternInput = mapFoldBack_1(mapping, toArray(xs), state);\r\n    return [readOnly(patternInput[0]), patternInput[1]];\r\n}\r\n\r\nexport function tryPick(chooser, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let res = void 0;\r\n        while ((res == null) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            res = chooser(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return res;\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function pick(chooser, xs) {\r\n    const matchValue = tryPick(chooser, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function reduce(folder, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        const loop = (acc_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const acc = acc_mut;\r\n                if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    acc_mut = folder(acc, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return acc;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            return loop(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        else {\r\n            throw (new Error(SR_inputSequenceEmpty));\r\n        }\r\n    }\r\n    finally {\r\n        e.Dispose();\r\n    }\r\n}\r\n\r\nexport function reduceBack(folder, xs) {\r\n    const arr = toArray(xs);\r\n    if (arr.length > 0) {\r\n        return arr.reduceRight(folder);\r\n    }\r\n    else {\r\n        throw (new Error(SR_inputSequenceEmpty));\r\n    }\r\n}\r\n\r\nexport function replicate(n, x) {\r\n    return initialize(n, (_arg1) => x);\r\n}\r\n\r\nexport function reverse(xs) {\r\n    return delay(() => ofArray(reverse_1(toArray(xs))));\r\n}\r\n\r\nexport function scan(folder, state, xs) {\r\n    return delay(() => {\r\n        let acc = state;\r\n        return concat([singleton(state), map((x) => {\r\n            acc = folder(acc, x);\r\n            return acc;\r\n        }, xs)]);\r\n    });\r\n}\r\n\r\nexport function scanBack(folder, xs, state) {\r\n    return delay(() => ofArray(scanBack_1(folder, toArray(xs), state)));\r\n}\r\n\r\nexport function skip(count, xs) {\r\n    return mkSeq(() => {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            for (let i = 1; i <= count; i++) {\r\n                if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\r\n                }\r\n            }\r\n            return Enumerator_enumerateThenFinally(() => {\r\n            }, e);\r\n        }\r\n        catch (matchValue) {\r\n            e.Dispose();\r\n            throw matchValue;\r\n        }\r\n    });\r\n}\r\n\r\nexport function skipWhile(predicate, xs) {\r\n    return delay(() => {\r\n        let skipped = true;\r\n        return filter((x) => {\r\n            if (skipped) {\r\n                skipped = predicate(x);\r\n            }\r\n            return !skipped;\r\n        }, xs);\r\n    });\r\n}\r\n\r\nexport function tail(xs) {\r\n    return skip(1, xs);\r\n}\r\n\r\nexport function take(count, xs) {\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => {\r\n        if (i < count) {\r\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            else {\r\n                throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\r\n            }\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, (e_1) => {\r\n        e_1.Dispose();\r\n    });\r\n}\r\n\r\nexport function takeWhile(predicate, xs) {\r\n    return generate(() => ofSeq(xs), (e) => ((e[\"System.Collections.IEnumerator.MoveNext\"]() && predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0)), (e_1) => {\r\n        e_1.Dispose();\r\n    });\r\n}\r\n\r\nexport function truncate(count, xs) {\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => (((i < count) && e[\"System.Collections.IEnumerator.MoveNext\"]()) ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0)), (e_1) => {\r\n        e_1.Dispose();\r\n    });\r\n}\r\n\r\nexport function zip(xs, ys) {\r\n    return map2((x, y) => [x, y], xs, ys);\r\n}\r\n\r\nexport function zip3(xs, ys, zs) {\r\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\r\n}\r\n\r\nexport function collect(mapping, xs) {\r\n    return delay(() => concat(map(mapping, xs)));\r\n}\r\n\r\nexport function where(predicate, xs) {\r\n    return filter(predicate, xs);\r\n}\r\n\r\nexport function pairwise(xs) {\r\n    return delay(() => ofArray(pairwise_1(toArray(xs))));\r\n}\r\n\r\nexport function splitInto(chunks, xs) {\r\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), splitInto_1(chunks, toArray(xs)))));\r\n}\r\n\r\nexport function windowed(windowSize, xs) {\r\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), windowed_1(windowSize, toArray(xs)))));\r\n}\r\n\r\nexport function transpose(xss) {\r\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), transpose_1(map_1((xs_1) => toArray(xs_1), toArray(xss))))));\r\n}\r\n\r\nexport function sortWith(comparer, xs) {\r\n    return delay(() => {\r\n        const arr = toArray(xs);\r\n        arr.sort(comparer);\r\n        return ofArray(arr);\r\n    });\r\n}\r\n\r\nexport function sort(xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(x, y), xs);\r\n}\r\n\r\nexport function sortBy(projection, xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(projection(x), projection(y)), xs);\r\n}\r\n\r\nexport function sortDescending(xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(x, y) * -1), xs);\r\n}\r\n\r\nexport function sortByDescending(projection, xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(projection(x), projection(y)) * -1), xs);\r\n}\r\n\r\nexport function sum(xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\r\n}\r\n\r\nexport function sumBy(f, xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\r\n}\r\n\r\nexport function maxBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function max(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function minBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function min(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function average(xs, averager) {\r\n    let count = 0;\r\n    const total = fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, x);\r\n    }, averager.GetZero(), xs);\r\n    if (count === 0) {\r\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\r\n    }\r\n    else {\r\n        return averager.DivideByInt(total, count);\r\n    }\r\n}\r\n\r\nexport function averageBy(f, xs, averager) {\r\n    let count = 0;\r\n    const total = fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, f(x));\r\n    }, averager.GetZero(), xs);\r\n    if (count === 0) {\r\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\r\n    }\r\n    else {\r\n        return averager.DivideByInt(total, count);\r\n    }\r\n}\r\n\r\nexport function permute(f, xs) {\r\n    return delay(() => ofArray(permute_1(f, toArray(xs))));\r\n}\r\n\r\nexport function chunkBySize(chunkSize, xs) {\r\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), chunkBySize_1(chunkSize, toArray(xs)))));\r\n}\r\n\r\n","import { record_type, bool_type, list_type, option_type, class_type } from \"./Reflection.js\";\r\nimport { some, value as value_1 } from \"./Option.js\";\r\nimport { singleton, ofArrayWithTail, head, tail, isEmpty as isEmpty_1, FSharpList, fold as fold_1, empty as empty_1, cons } from \"./List.js\";\r\nimport { fill } from \"./Array.js\";\r\nimport { structuralHash, compare, toIterator, equals, getEnumerator, isArrayLike } from \"./Util.js\";\r\nimport { Record } from \"./Types.js\";\r\nimport { tryPick as tryPick_1, pick as pick_1, iterate as iterate_1, compareWith, map as map_1, unfold } from \"./Seq.js\";\r\nimport { format, join } from \"./String.js\";\r\nimport { LanguagePrimitives_FastGenericComparer } from \"./FSharp.Core.js\";\r\n\r\nexport class MapTreeLeaf$2 {\r\n    constructor(k, v) {\r\n        this.k = k;\r\n        this.v = v;\r\n    }\r\n}\r\n\r\nexport function MapTreeLeaf$2$reflection(gen0, gen1) {\r\n    return class_type(\"Map.MapTreeLeaf`2\", [gen0, gen1], MapTreeLeaf$2);\r\n}\r\n\r\nexport function MapTreeLeaf$2_$ctor_5BDDA1(k, v) {\r\n    return new MapTreeLeaf$2(k, v);\r\n}\r\n\r\nexport function MapTreeLeaf$2__get_Key(_) {\r\n    return _.k;\r\n}\r\n\r\nexport function MapTreeLeaf$2__get_Value(_) {\r\n    return _.v;\r\n}\r\n\r\nexport class MapTreeNode$2 extends MapTreeLeaf$2 {\r\n    constructor(k, v, left, right, h) {\r\n        super(k, v);\r\n        this.left = left;\r\n        this.right = right;\r\n        this.h = (h | 0);\r\n    }\r\n}\r\n\r\nexport function MapTreeNode$2$reflection(gen0, gen1) {\r\n    return class_type(\"Map.MapTreeNode`2\", [gen0, gen1], MapTreeNode$2, MapTreeLeaf$2$reflection(gen0, gen1));\r\n}\r\n\r\nexport function MapTreeNode$2_$ctor_499A11FD(k, v, left, right, h) {\r\n    return new MapTreeNode$2(k, v, left, right, h);\r\n}\r\n\r\nexport function MapTreeNode$2__get_Left(_) {\r\n    return _.left;\r\n}\r\n\r\nexport function MapTreeNode$2__get_Right(_) {\r\n    return _.right;\r\n}\r\n\r\nexport function MapTreeNode$2__get_Height(_) {\r\n    return _.h;\r\n}\r\n\r\nexport function MapTreeModule_empty() {\r\n    return void 0;\r\n}\r\n\r\nexport function MapTreeModule_sizeAux(acc_mut, m_mut) {\r\n    MapTreeModule_sizeAux:\r\n    while (true) {\r\n        const acc = acc_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                acc_mut = MapTreeModule_sizeAux(acc + 1, MapTreeNode$2__get_Left(m2));\r\n                m_mut = MapTreeNode$2__get_Right(m2);\r\n                continue MapTreeModule_sizeAux;\r\n            }\r\n            else {\r\n                return (acc + 1) | 0;\r\n            }\r\n        }\r\n        else {\r\n            return acc | 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_size(x) {\r\n    return MapTreeModule_sizeAux(0, x);\r\n}\r\n\r\nexport function MapTreeModule_mk(l, k, v, r) {\r\n    let hl;\r\n    const m = l;\r\n    if (m != null) {\r\n        const m2 = m;\r\n        hl = ((m2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2) : 1);\r\n    }\r\n    else {\r\n        hl = 0;\r\n    }\r\n    let hr;\r\n    const m_1 = r;\r\n    if (m_1 != null) {\r\n        const m2_1 = m_1;\r\n        hr = ((m2_1 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_1) : 1);\r\n    }\r\n    else {\r\n        hr = 0;\r\n    }\r\n    const m_2 = ((hl < hr) ? hr : hl) | 0;\r\n    if (m_2 === 0) {\r\n        return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\r\n    }\r\n    else {\r\n        return MapTreeNode$2_$ctor_499A11FD(k, v, l, r, m_2 + 1);\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_rebalance(t1, k, v, t2) {\r\n    let m_2, m2_2, m_3, m2_3;\r\n    let t1h;\r\n    const m = t1;\r\n    if (m != null) {\r\n        const m2 = m;\r\n        t1h = ((m2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2) : 1);\r\n    }\r\n    else {\r\n        t1h = 0;\r\n    }\r\n    let t2h;\r\n    const m_1 = t2;\r\n    if (m_1 != null) {\r\n        const m2_1 = m_1;\r\n        t2h = ((m2_1 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_1) : 1);\r\n    }\r\n    else {\r\n        t2h = 0;\r\n    }\r\n    if (t2h > (t1h + 2)) {\r\n        const matchValue = value_1(t2);\r\n        if (matchValue instanceof MapTreeNode$2) {\r\n            if (((m_2 = MapTreeNode$2__get_Left(matchValue), (m_2 != null) ? ((m2_2 = m_2, (m2_2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_2) : 1)) : 0)) > (t1h + 1)) {\r\n                const matchValue_1 = value_1(MapTreeNode$2__get_Left(matchValue));\r\n                if (matchValue_1 instanceof MapTreeNode$2) {\r\n                    return MapTreeModule_mk(MapTreeModule_mk(t1, k, v, MapTreeNode$2__get_Left(matchValue_1)), MapTreeLeaf$2__get_Key(matchValue_1), MapTreeLeaf$2__get_Value(matchValue_1), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_1), MapTreeLeaf$2__get_Key(matchValue), MapTreeLeaf$2__get_Value(matchValue), MapTreeNode$2__get_Right(matchValue)));\r\n                }\r\n                else {\r\n                    throw (new Error(\"internal error: Map.rebalance\"));\r\n                }\r\n            }\r\n            else {\r\n                return MapTreeModule_mk(MapTreeModule_mk(t1, k, v, MapTreeNode$2__get_Left(matchValue)), MapTreeLeaf$2__get_Key(matchValue), MapTreeLeaf$2__get_Value(matchValue), MapTreeNode$2__get_Right(matchValue));\r\n            }\r\n        }\r\n        else {\r\n            throw (new Error(\"internal error: Map.rebalance\"));\r\n        }\r\n    }\r\n    else if (t1h > (t2h + 2)) {\r\n        const matchValue_2 = value_1(t1);\r\n        if (matchValue_2 instanceof MapTreeNode$2) {\r\n            if (((m_3 = MapTreeNode$2__get_Right(matchValue_2), (m_3 != null) ? ((m2_3 = m_3, (m2_3 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_3) : 1)) : 0)) > (t2h + 1)) {\r\n                const matchValue_3 = value_1(MapTreeNode$2__get_Right(matchValue_2));\r\n                if (matchValue_3 instanceof MapTreeNode$2) {\r\n                    return MapTreeModule_mk(MapTreeModule_mk(MapTreeNode$2__get_Left(matchValue_2), MapTreeLeaf$2__get_Key(matchValue_2), MapTreeLeaf$2__get_Value(matchValue_2), MapTreeNode$2__get_Left(matchValue_3)), MapTreeLeaf$2__get_Key(matchValue_3), MapTreeLeaf$2__get_Value(matchValue_3), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_3), k, v, t2));\r\n                }\r\n                else {\r\n                    throw (new Error(\"internal error: Map.rebalance\"));\r\n                }\r\n            }\r\n            else {\r\n                return MapTreeModule_mk(MapTreeNode$2__get_Left(matchValue_2), MapTreeLeaf$2__get_Key(matchValue_2), MapTreeLeaf$2__get_Value(matchValue_2), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_2), k, v, t2));\r\n            }\r\n        }\r\n        else {\r\n            throw (new Error(\"internal error: Map.rebalance\"));\r\n        }\r\n    }\r\n    else {\r\n        return MapTreeModule_mk(t1, k, v, t2);\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_add(comparer, k, v, m) {\r\n    if (m != null) {\r\n        const m2 = m;\r\n        const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\r\n        if (m2 instanceof MapTreeNode$2) {\r\n            if (c < 0) {\r\n                return MapTreeModule_rebalance(MapTreeModule_add(comparer, k, v, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\r\n            }\r\n            else if (c === 0) {\r\n                return MapTreeNode$2_$ctor_499A11FD(k, v, MapTreeNode$2__get_Left(m2), MapTreeNode$2__get_Right(m2), MapTreeNode$2__get_Height(m2));\r\n            }\r\n            else {\r\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_add(comparer, k, v, MapTreeNode$2__get_Right(m2)));\r\n            }\r\n        }\r\n        else if (c < 0) {\r\n            return MapTreeNode$2_$ctor_499A11FD(k, v, MapTreeModule_empty(), m, 2);\r\n        }\r\n        else if (c === 0) {\r\n            return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\r\n        }\r\n        else {\r\n            return MapTreeNode$2_$ctor_499A11FD(k, v, m, MapTreeModule_empty(), 2);\r\n        }\r\n    }\r\n    else {\r\n        return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_tryFind(comparer_mut, k_mut, m_mut) {\r\n    MapTreeModule_tryFind:\r\n    while (true) {\r\n        const comparer = comparer_mut, k = k_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\r\n            if (c === 0) {\r\n                return some(MapTreeLeaf$2__get_Value(m2));\r\n            }\r\n            else if (m2 instanceof MapTreeNode$2) {\r\n                comparer_mut = comparer;\r\n                k_mut = k;\r\n                m_mut = ((c < 0) ? MapTreeNode$2__get_Left(m2) : MapTreeNode$2__get_Right(m2));\r\n                continue MapTreeModule_tryFind;\r\n            }\r\n            else {\r\n                return void 0;\r\n            }\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_find(comparer, k, m) {\r\n    const matchValue = MapTreeModule_tryFind(comparer, k, m);\r\n    if (matchValue == null) {\r\n        throw (new Error());\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_partition1(comparer, f, k, v, acc1, acc2) {\r\n    if (f(k, v)) {\r\n        return [MapTreeModule_add(comparer, k, v, acc1), acc2];\r\n    }\r\n    else {\r\n        return [acc1, MapTreeModule_add(comparer, k, v, acc2)];\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_partitionAux(comparer_mut, f_mut, m_mut, acc_0_mut, acc_1_mut) {\r\n    MapTreeModule_partitionAux:\r\n    while (true) {\r\n        const comparer = comparer_mut, f = f_mut, m = m_mut, acc_0 = acc_0_mut, acc_1 = acc_1_mut;\r\n        const acc = [acc_0, acc_1];\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                const acc_2 = MapTreeModule_partitionAux(comparer, f, MapTreeNode$2__get_Right(m2), acc[0], acc[1]);\r\n                const acc_3 = MapTreeModule_partition1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc_2[0], acc_2[1]);\r\n                comparer_mut = comparer;\r\n                f_mut = f;\r\n                m_mut = MapTreeNode$2__get_Left(m2);\r\n                acc_0_mut = acc_3[0];\r\n                acc_1_mut = acc_3[1];\r\n                continue MapTreeModule_partitionAux;\r\n            }\r\n            else {\r\n                return MapTreeModule_partition1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc[0], acc[1]);\r\n            }\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_partition(comparer, f, m) {\r\n    return MapTreeModule_partitionAux(comparer, f, m, MapTreeModule_empty(), MapTreeModule_empty());\r\n}\r\n\r\nexport function MapTreeModule_filter1(comparer, f, k, v, acc) {\r\n    if (f(k, v)) {\r\n        return MapTreeModule_add(comparer, k, v, acc);\r\n    }\r\n    else {\r\n        return acc;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_filterAux(comparer_mut, f_mut, m_mut, acc_mut) {\r\n    MapTreeModule_filterAux:\r\n    while (true) {\r\n        const comparer = comparer_mut, f = f_mut, m = m_mut, acc = acc_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                const acc_1 = MapTreeModule_filterAux(comparer, f, MapTreeNode$2__get_Left(m2), acc);\r\n                const acc_2 = MapTreeModule_filter1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc_1);\r\n                comparer_mut = comparer;\r\n                f_mut = f;\r\n                m_mut = MapTreeNode$2__get_Right(m2);\r\n                acc_mut = acc_2;\r\n                continue MapTreeModule_filterAux;\r\n            }\r\n            else {\r\n                return MapTreeModule_filter1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc);\r\n            }\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_filter(comparer, f, m) {\r\n    return MapTreeModule_filterAux(comparer, f, m, MapTreeModule_empty());\r\n}\r\n\r\nexport function MapTreeModule_spliceOutSuccessor(m) {\r\n    if (m != null) {\r\n        const m2 = m;\r\n        if (m2 instanceof MapTreeNode$2) {\r\n            if (MapTreeNode$2__get_Left(m2) == null) {\r\n                return [MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2)];\r\n            }\r\n            else {\r\n                const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Left(m2));\r\n                return [patternInput[0], patternInput[1], MapTreeModule_mk(patternInput[2], MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2))];\r\n            }\r\n        }\r\n        else {\r\n            return [MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_empty()];\r\n        }\r\n    }\r\n    else {\r\n        throw (new Error(\"internal error: Map.spliceOutSuccessor\"));\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_remove(comparer, k, m) {\r\n    if (m != null) {\r\n        const m2 = m;\r\n        const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\r\n        if (m2 instanceof MapTreeNode$2) {\r\n            if (c < 0) {\r\n                return MapTreeModule_rebalance(MapTreeModule_remove(comparer, k, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\r\n            }\r\n            else if (c === 0) {\r\n                if (MapTreeNode$2__get_Left(m2) == null) {\r\n                    return MapTreeNode$2__get_Right(m2);\r\n                }\r\n                else if (MapTreeNode$2__get_Right(m2) == null) {\r\n                    return MapTreeNode$2__get_Left(m2);\r\n                }\r\n                else {\r\n                    const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Right(m2));\r\n                    return MapTreeModule_mk(MapTreeNode$2__get_Left(m2), patternInput[0], patternInput[1], patternInput[2]);\r\n                }\r\n            }\r\n            else {\r\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_remove(comparer, k, MapTreeNode$2__get_Right(m2)));\r\n            }\r\n        }\r\n        else if (c === 0) {\r\n            return MapTreeModule_empty();\r\n        }\r\n        else {\r\n            return m;\r\n        }\r\n    }\r\n    else {\r\n        return MapTreeModule_empty();\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_change(comparer, k, u, m) {\r\n    if (m != null) {\r\n        const m2 = m;\r\n        if (m2 instanceof MapTreeNode$2) {\r\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\r\n            if (c < 0) {\r\n                return MapTreeModule_rebalance(MapTreeModule_change(comparer, k, u, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\r\n            }\r\n            else if (c === 0) {\r\n                const matchValue_1 = u(some(MapTreeLeaf$2__get_Value(m2)));\r\n                if (matchValue_1 != null) {\r\n                    return MapTreeNode$2_$ctor_499A11FD(k, value_1(matchValue_1), MapTreeNode$2__get_Left(m2), MapTreeNode$2__get_Right(m2), MapTreeNode$2__get_Height(m2));\r\n                }\r\n                else if (MapTreeNode$2__get_Left(m2) == null) {\r\n                    return MapTreeNode$2__get_Right(m2);\r\n                }\r\n                else if (MapTreeNode$2__get_Right(m2) == null) {\r\n                    return MapTreeNode$2__get_Left(m2);\r\n                }\r\n                else {\r\n                    const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Right(m2));\r\n                    return MapTreeModule_mk(MapTreeNode$2__get_Left(m2), patternInput[0], patternInput[1], patternInput[2]);\r\n                }\r\n            }\r\n            else {\r\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_change(comparer, k, u, MapTreeNode$2__get_Right(m2)));\r\n            }\r\n        }\r\n        else {\r\n            const c_1 = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\r\n            if (c_1 < 0) {\r\n                const matchValue_2 = u(void 0);\r\n                if (matchValue_2 != null) {\r\n                    return MapTreeNode$2_$ctor_499A11FD(k, value_1(matchValue_2), MapTreeModule_empty(), m, 2);\r\n                }\r\n                else {\r\n                    return m;\r\n                }\r\n            }\r\n            else if (c_1 === 0) {\r\n                const matchValue_3 = u(some(MapTreeLeaf$2__get_Value(m2)));\r\n                if (matchValue_3 != null) {\r\n                    return MapTreeLeaf$2_$ctor_5BDDA1(k, value_1(matchValue_3));\r\n                }\r\n                else {\r\n                    return MapTreeModule_empty();\r\n                }\r\n            }\r\n            else {\r\n                const matchValue_4 = u(void 0);\r\n                if (matchValue_4 != null) {\r\n                    return MapTreeNode$2_$ctor_499A11FD(k, value_1(matchValue_4), m, MapTreeModule_empty(), 2);\r\n                }\r\n                else {\r\n                    return m;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const matchValue = u(void 0);\r\n        if (matchValue != null) {\r\n            return MapTreeLeaf$2_$ctor_5BDDA1(k, value_1(matchValue));\r\n        }\r\n        else {\r\n            return m;\r\n        }\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_mem(comparer_mut, k_mut, m_mut) {\r\n    MapTreeModule_mem:\r\n    while (true) {\r\n        const comparer = comparer_mut, k = k_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                if (c < 0) {\r\n                    comparer_mut = comparer;\r\n                    k_mut = k;\r\n                    m_mut = MapTreeNode$2__get_Left(m2);\r\n                    continue MapTreeModule_mem;\r\n                }\r\n                else if (c === 0) {\r\n                    return true;\r\n                }\r\n                else {\r\n                    comparer_mut = comparer;\r\n                    k_mut = k;\r\n                    m_mut = MapTreeNode$2__get_Right(m2);\r\n                    continue MapTreeModule_mem;\r\n                }\r\n            }\r\n            else {\r\n                return c === 0;\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_iterOpt(f_mut, m_mut) {\r\n    MapTreeModule_iterOpt:\r\n    while (true) {\r\n        const f = f_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                MapTreeModule_iterOpt(f, MapTreeNode$2__get_Left(m2));\r\n                f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n                f_mut = f;\r\n                m_mut = MapTreeNode$2__get_Right(m2);\r\n                continue MapTreeModule_iterOpt;\r\n            }\r\n            else {\r\n                f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n            }\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_iter(f, m) {\r\n    MapTreeModule_iterOpt(f, m);\r\n}\r\n\r\nexport function MapTreeModule_tryPickOpt(f_mut, m_mut) {\r\n    MapTreeModule_tryPickOpt:\r\n    while (true) {\r\n        const f = f_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                const matchValue = MapTreeModule_tryPickOpt(f, MapTreeNode$2__get_Left(m2));\r\n                if (matchValue == null) {\r\n                    const matchValue_1 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n                    if (matchValue_1 == null) {\r\n                        f_mut = f;\r\n                        m_mut = MapTreeNode$2__get_Right(m2);\r\n                        continue MapTreeModule_tryPickOpt;\r\n                    }\r\n                    else {\r\n                        return matchValue_1;\r\n                    }\r\n                }\r\n                else {\r\n                    return matchValue;\r\n                }\r\n            }\r\n            else {\r\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n            }\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_tryPick(f, m) {\r\n    return MapTreeModule_tryPickOpt(f, m);\r\n}\r\n\r\nexport function MapTreeModule_existsOpt(f_mut, m_mut) {\r\n    MapTreeModule_existsOpt:\r\n    while (true) {\r\n        const f = f_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                if (MapTreeModule_existsOpt(f, MapTreeNode$2__get_Left(m2)) ? true : f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2))) {\r\n                    return true;\r\n                }\r\n                else {\r\n                    f_mut = f;\r\n                    m_mut = MapTreeNode$2__get_Right(m2);\r\n                    continue MapTreeModule_existsOpt;\r\n                }\r\n            }\r\n            else {\r\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_exists(f, m) {\r\n    return MapTreeModule_existsOpt(f, m);\r\n}\r\n\r\nexport function MapTreeModule_forallOpt(f_mut, m_mut) {\r\n    MapTreeModule_forallOpt:\r\n    while (true) {\r\n        const f = f_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                if (MapTreeModule_forallOpt(f, MapTreeNode$2__get_Left(m2)) && f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2))) {\r\n                    f_mut = f;\r\n                    m_mut = MapTreeNode$2__get_Right(m2);\r\n                    continue MapTreeModule_forallOpt;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n            }\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_forall(f, m) {\r\n    return MapTreeModule_forallOpt(f, m);\r\n}\r\n\r\nexport function MapTreeModule_map(f, m) {\r\n    if (m != null) {\r\n        const m2 = m;\r\n        if (m2 instanceof MapTreeNode$2) {\r\n            const l2 = MapTreeModule_map(f, MapTreeNode$2__get_Left(m2));\r\n            const v2 = f(MapTreeLeaf$2__get_Value(m2));\r\n            const r2 = MapTreeModule_map(f, MapTreeNode$2__get_Right(m2));\r\n            return MapTreeNode$2_$ctor_499A11FD(MapTreeLeaf$2__get_Key(m2), v2, l2, r2, MapTreeNode$2__get_Height(m2));\r\n        }\r\n        else {\r\n            return MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), f(MapTreeLeaf$2__get_Value(m2)));\r\n        }\r\n    }\r\n    else {\r\n        return MapTreeModule_empty();\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_mapiOpt(f, m) {\r\n    if (m != null) {\r\n        const m2 = m;\r\n        if (m2 instanceof MapTreeNode$2) {\r\n            const l2 = MapTreeModule_mapiOpt(f, MapTreeNode$2__get_Left(m2));\r\n            const v2 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n            const r2 = MapTreeModule_mapiOpt(f, MapTreeNode$2__get_Right(m2));\r\n            return MapTreeNode$2_$ctor_499A11FD(MapTreeLeaf$2__get_Key(m2), v2, l2, r2, MapTreeNode$2__get_Height(m2));\r\n        }\r\n        else {\r\n            return MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)));\r\n        }\r\n    }\r\n    else {\r\n        return MapTreeModule_empty();\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_mapi(f, m) {\r\n    return MapTreeModule_mapiOpt(f, m);\r\n}\r\n\r\nexport function MapTreeModule_foldBackOpt(f_mut, m_mut, x_mut) {\r\n    MapTreeModule_foldBackOpt:\r\n    while (true) {\r\n        const f = f_mut, m = m_mut, x = x_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                const x_1 = MapTreeModule_foldBackOpt(f, MapTreeNode$2__get_Right(m2), x);\r\n                const x_2 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_1);\r\n                f_mut = f;\r\n                m_mut = MapTreeNode$2__get_Left(m2);\r\n                x_mut = x_2;\r\n                continue MapTreeModule_foldBackOpt;\r\n            }\r\n            else {\r\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x);\r\n            }\r\n        }\r\n        else {\r\n            return x;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_foldBack(f, m, x) {\r\n    return MapTreeModule_foldBackOpt(f, m, x);\r\n}\r\n\r\nexport function MapTreeModule_foldOpt(f_mut, x_mut, m_mut) {\r\n    MapTreeModule_foldOpt:\r\n    while (true) {\r\n        const f = f_mut, x = x_mut, m = m_mut;\r\n        if (m != null) {\r\n            const m2 = m;\r\n            if (m2 instanceof MapTreeNode$2) {\r\n                f_mut = f;\r\n                x_mut = f(MapTreeModule_foldOpt(f, x, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n                m_mut = MapTreeNode$2__get_Right(m2);\r\n                continue MapTreeModule_foldOpt;\r\n            }\r\n            else {\r\n                return f(x, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\r\n            }\r\n        }\r\n        else {\r\n            return x;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_fold(f, x, m) {\r\n    return MapTreeModule_foldOpt(f, x, m);\r\n}\r\n\r\nexport function MapTreeModule_foldSectionOpt(comparer, lo, hi, f, m, x) {\r\n    const foldFromTo = (f_1_mut, m_1_mut, x_1_mut) => {\r\n        foldFromTo:\r\n        while (true) {\r\n            const f_1 = f_1_mut, m_1 = m_1_mut, x_1 = x_1_mut;\r\n            if (m_1 != null) {\r\n                const m2 = m_1;\r\n                if (m2 instanceof MapTreeNode$2) {\r\n                    const cLoKey = comparer.Compare(lo, MapTreeLeaf$2__get_Key(m2)) | 0;\r\n                    const cKeyHi = comparer.Compare(MapTreeLeaf$2__get_Key(m2), hi) | 0;\r\n                    const x_2 = (cLoKey < 0) ? foldFromTo(f_1, MapTreeNode$2__get_Left(m2), x_1) : x_1;\r\n                    const x_3 = ((cLoKey <= 0) && (cKeyHi <= 0)) ? f_1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_2) : x_2;\r\n                    if (cKeyHi < 0) {\r\n                        f_1_mut = f_1;\r\n                        m_1_mut = MapTreeNode$2__get_Right(m2);\r\n                        x_1_mut = x_3;\r\n                        continue foldFromTo;\r\n                    }\r\n                    else {\r\n                        return x_3;\r\n                    }\r\n                }\r\n                else if ((comparer.Compare(lo, MapTreeLeaf$2__get_Key(m2)) <= 0) && (comparer.Compare(MapTreeLeaf$2__get_Key(m2), hi) <= 0)) {\r\n                    return f_1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_1);\r\n                }\r\n                else {\r\n                    return x_1;\r\n                }\r\n            }\r\n            else {\r\n                return x_1;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    if (comparer.Compare(lo, hi) === 1) {\r\n        return x;\r\n    }\r\n    else {\r\n        return foldFromTo(f, m, x);\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_foldSection(comparer, lo, hi, f, m, x) {\r\n    return MapTreeModule_foldSectionOpt(comparer, lo, hi, f, m, x);\r\n}\r\n\r\nexport function MapTreeModule_toList(m) {\r\n    const loop = (m_1_mut, acc_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const m_1 = m_1_mut, acc = acc_mut;\r\n            if (m_1 != null) {\r\n                const m2 = m_1;\r\n                if (m2 instanceof MapTreeNode$2) {\r\n                    m_1_mut = MapTreeNode$2__get_Left(m2);\r\n                    acc_mut = cons([MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)], loop(MapTreeNode$2__get_Right(m2), acc));\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return cons([MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)], acc);\r\n                }\r\n            }\r\n            else {\r\n                return acc;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(m, empty_1());\r\n}\r\n\r\nexport function MapTreeModule_copyToArray(m, arr, i) {\r\n    let j = i;\r\n    MapTreeModule_iter((x, y) => {\r\n        arr[j] = [x, y];\r\n        j = ((j + 1) | 0);\r\n    }, m);\r\n}\r\n\r\nexport function MapTreeModule_toArray(m) {\r\n    const n = MapTreeModule_size(m) | 0;\r\n    const res = fill(new Array(n), 0, n, [null, null]);\r\n    MapTreeModule_copyToArray(m, res, 0);\r\n    return res;\r\n}\r\n\r\nexport function MapTreeModule_ofList(comparer, l) {\r\n    return fold_1((acc, tupledArg) => MapTreeModule_add(comparer, tupledArg[0], tupledArg[1], acc), MapTreeModule_empty(), l);\r\n}\r\n\r\nexport function MapTreeModule_mkFromEnumerator(comparer_mut, acc_mut, e_mut) {\r\n    MapTreeModule_mkFromEnumerator:\r\n    while (true) {\r\n        const comparer = comparer_mut, acc = acc_mut, e = e_mut;\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const patternInput = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            comparer_mut = comparer;\r\n            acc_mut = MapTreeModule_add(comparer, patternInput[0], patternInput[1], acc);\r\n            e_mut = e;\r\n            continue MapTreeModule_mkFromEnumerator;\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_ofArray(comparer, arr) {\r\n    let res = MapTreeModule_empty();\r\n    for (let idx = 0; idx <= (arr.length - 1); idx++) {\r\n        const forLoopVar = arr[idx];\r\n        res = MapTreeModule_add(comparer, forLoopVar[0], forLoopVar[1], res);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function MapTreeModule_ofSeq(comparer, c) {\r\n    if (isArrayLike(c)) {\r\n        return MapTreeModule_ofArray(comparer, c);\r\n    }\r\n    else if (c instanceof FSharpList) {\r\n        return MapTreeModule_ofList(comparer, c);\r\n    }\r\n    else {\r\n        const ie = getEnumerator(c);\r\n        try {\r\n            return MapTreeModule_mkFromEnumerator(comparer, MapTreeModule_empty(), ie);\r\n        }\r\n        finally {\r\n            ie.Dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport class MapTreeModule_MapIterator$2 extends Record {\r\n    constructor(stack, started) {\r\n        super();\r\n        this.stack = stack;\r\n        this.started = started;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_MapIterator$2$reflection(gen0, gen1) {\r\n    return record_type(\"Map.MapTreeModule.MapIterator`2\", [gen0, gen1], MapTreeModule_MapIterator$2, () => [[\"stack\", list_type(option_type(MapTreeLeaf$2$reflection(gen0, gen1)))], [\"started\", bool_type]]);\r\n}\r\n\r\nexport function MapTreeModule_collapseLHS(stack_mut) {\r\n    MapTreeModule_collapseLHS:\r\n    while (true) {\r\n        const stack = stack_mut;\r\n        if (!isEmpty_1(stack)) {\r\n            const rest = tail(stack);\r\n            const m = head(stack);\r\n            if (m != null) {\r\n                const m2 = m;\r\n                if (m2 instanceof MapTreeNode$2) {\r\n                    stack_mut = ofArrayWithTail([MapTreeNode$2__get_Left(m2), MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)), MapTreeNode$2__get_Right(m2)], rest);\r\n                    continue MapTreeModule_collapseLHS;\r\n                }\r\n                else {\r\n                    return stack;\r\n                }\r\n            }\r\n            else {\r\n                stack_mut = rest;\r\n                continue MapTreeModule_collapseLHS;\r\n            }\r\n        }\r\n        else {\r\n            return empty_1();\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_mkIterator(m) {\r\n    return new MapTreeModule_MapIterator$2(MapTreeModule_collapseLHS(singleton(m)), false);\r\n}\r\n\r\nexport function MapTreeModule_notStarted() {\r\n    throw (new Error(\"enumeration not started\"));\r\n}\r\n\r\nexport function MapTreeModule_alreadyFinished() {\r\n    throw (new Error(\"enumeration already finished\"));\r\n}\r\n\r\nexport function MapTreeModule_current(i) {\r\n    if (i.started) {\r\n        const matchValue = i.stack;\r\n        if (!isEmpty_1(matchValue)) {\r\n            if (head(matchValue) != null) {\r\n                const m = head(matchValue);\r\n                if (m instanceof MapTreeNode$2) {\r\n                    throw (new Error(\"Please report error: Map iterator, unexpected stack for current\"));\r\n                }\r\n                else {\r\n                    return [MapTreeLeaf$2__get_Key(m), MapTreeLeaf$2__get_Value(m)];\r\n                }\r\n            }\r\n            else {\r\n                throw (new Error(\"Please report error: Map iterator, unexpected stack for current\"));\r\n            }\r\n        }\r\n        else {\r\n            return MapTreeModule_alreadyFinished();\r\n        }\r\n    }\r\n    else {\r\n        return MapTreeModule_notStarted();\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_moveNext(i) {\r\n    if (i.started) {\r\n        const matchValue = i.stack;\r\n        if (!isEmpty_1(matchValue)) {\r\n            if (head(matchValue) != null) {\r\n                const m = head(matchValue);\r\n                if (m instanceof MapTreeNode$2) {\r\n                    throw (new Error(\"Please report error: Map iterator, unexpected stack for moveNext\"));\r\n                }\r\n                else {\r\n                    i.stack = MapTreeModule_collapseLHS(tail(matchValue));\r\n                    return !isEmpty_1(i.stack);\r\n                }\r\n            }\r\n            else {\r\n                throw (new Error(\"Please report error: Map iterator, unexpected stack for moveNext\"));\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        i.started = true;\r\n        return !isEmpty_1(i.stack);\r\n    }\r\n}\r\n\r\nexport function MapTreeModule_mkIEnumerator(m) {\r\n    let i = MapTreeModule_mkIterator(m);\r\n    return {\r\n        [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\r\n            return MapTreeModule_current(i);\r\n        },\r\n        [\"System.Collections.IEnumerator.get_Current\"]() {\r\n            return MapTreeModule_current(i);\r\n        },\r\n        [\"System.Collections.IEnumerator.MoveNext\"]() {\r\n            return MapTreeModule_moveNext(i);\r\n        },\r\n        [\"System.Collections.IEnumerator.Reset\"]() {\r\n            i = MapTreeModule_mkIterator(m);\r\n        },\r\n        Dispose() {\r\n        },\r\n    };\r\n}\r\n\r\nexport function MapTreeModule_toSeq(s) {\r\n    return unfold((en_1) => {\r\n        if (en_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            return [en_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), en_1];\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, MapTreeModule_mkIEnumerator(s));\r\n}\r\n\r\nexport class FSharpMap {\r\n    constructor(comparer, tree) {\r\n        this.comparer = comparer;\r\n        this.tree = tree;\r\n    }\r\n    GetHashCode() {\r\n        const this$ = this;\r\n        return FSharpMap__ComputeHashCode(this$) | 0;\r\n    }\r\n    Equals(that) {\r\n        const this$ = this;\r\n        if (that instanceof FSharpMap) {\r\n            const e1 = getEnumerator(this$);\r\n            try {\r\n                const e2 = getEnumerator(that);\r\n                try {\r\n                    const loop = () => {\r\n                        const m1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\r\n                        if (m1 === e2[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                            if (!m1) {\r\n                                return true;\r\n                            }\r\n                            else {\r\n                                const e1c = e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                                const e2c = e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                                if (equals(e1c[0], e2c[0]) && equals(e1c[1], e2c[1])) {\r\n                                    return loop();\r\n                                }\r\n                                else {\r\n                                    return false;\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            return false;\r\n                        }\r\n                    };\r\n                    return loop();\r\n                }\r\n                finally {\r\n                    e2.Dispose();\r\n                }\r\n            }\r\n            finally {\r\n                e1.Dispose();\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    toString() {\r\n        const this$ = this;\r\n        return (\"map [\" + join(\"; \", map_1((kv) => format(\"({0}, {1})\", kv[0], kv[1]), this$))) + \"]\";\r\n    }\r\n    get [Symbol.toStringTag]() {\r\n        return \"FSharpMap\";\r\n    }\r\n    toJSON(_key) {\r\n        const this$ = this;\r\n        return Array.from(this$);\r\n    }\r\n    GetEnumerator() {\r\n        const __ = this;\r\n        return MapTreeModule_mkIEnumerator(__.tree);\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const __ = this;\r\n        return MapTreeModule_mkIEnumerator(__.tree);\r\n    }\r\n    CompareTo(obj) {\r\n        const m = this;\r\n        if (obj instanceof FSharpMap) {\r\n            return compareWith((kvp1, kvp2) => {\r\n                const c = m.comparer.Compare(kvp1[0], kvp2[0]) | 0;\r\n                return ((c !== 0) ? c : compare(kvp1[1], kvp2[1])) | 0;\r\n            }, m, obj) | 0;\r\n        }\r\n        else {\r\n            throw (new Error(\"not comparable\\\\nParameter name: obj\"));\r\n        }\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](x) {\r\n        throw (new Error(\"Map cannot be mutated\"));\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\r\n        throw (new Error(\"Map cannot be mutated\"));\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](x) {\r\n        throw (new Error(\"Map cannot be mutated\"));\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](x) {\r\n        const m = this;\r\n        return FSharpMap__ContainsKey(m, x[0]) && equals(FSharpMap__get_Item(m, x[0]), x[1]);\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](arr, i) {\r\n        const m = this;\r\n        MapTreeModule_copyToArray(m.tree, arr, i);\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\r\n        return true;\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\r\n        const m = this;\r\n        return FSharpMap__get_Count(m) | 0;\r\n    }\r\n    [\"System.Collections.Generic.IReadOnlyCollection`1.get_Count\"]() {\r\n        const m = this;\r\n        return FSharpMap__get_Count(m) | 0;\r\n    }\r\n    get size() {\r\n        const m = this;\r\n        return FSharpMap__get_Count(m) | 0;\r\n    }\r\n    clear() {\r\n        throw (new Error(\"Map cannot be mutated\"));\r\n    }\r\n    delete(_arg1) {\r\n        throw (new Error(\"Map cannot be mutated\"));\r\n        return false;\r\n    }\r\n    entries() {\r\n        const m = this;\r\n        return map_1((p) => [p[0], p[1]], m);\r\n    }\r\n    get(k) {\r\n        const m = this;\r\n        return FSharpMap__get_Item(m, k);\r\n    }\r\n    has(k) {\r\n        const m = this;\r\n        return FSharpMap__ContainsKey(m, k);\r\n    }\r\n    keys() {\r\n        const m = this;\r\n        return map_1((p) => p[0], m);\r\n    }\r\n    set(k, v) {\r\n        const m = this;\r\n        throw (new Error(\"Map cannot be mutated\"));\r\n        return m;\r\n    }\r\n    values() {\r\n        const m = this;\r\n        return map_1((p) => p[1], m);\r\n    }\r\n    forEach(f, thisArg) {\r\n        const m = this;\r\n        iterate_1((p) => {\r\n            f(p[1], p[0], m);\r\n        }, m);\r\n    }\r\n}\r\n\r\nexport function FSharpMap$reflection(gen0, gen1) {\r\n    return class_type(\"Map.FSharpMap\", [gen0, gen1], FSharpMap);\r\n}\r\n\r\nexport function FSharpMap_$ctor(comparer, tree) {\r\n    return new FSharpMap(comparer, tree);\r\n}\r\n\r\n(() => {\r\n    FSharpMap.empty = FSharpMap_$ctor(LanguagePrimitives_FastGenericComparer(), MapTreeModule_empty());\r\n})();\r\n\r\nexport function FSharpMap_get_Empty() {\r\n    return FSharpMap.empty;\r\n}\r\n\r\nexport function FSharpMap_Create(ie) {\r\n    const comparer = LanguagePrimitives_FastGenericComparer();\r\n    return FSharpMap_$ctor(comparer, MapTreeModule_ofSeq(comparer, ie));\r\n}\r\n\r\nexport function FSharpMap__get_Comparer(m) {\r\n    return m.comparer;\r\n}\r\n\r\nexport function FSharpMap__get_Tree(m) {\r\n    return m.tree;\r\n}\r\n\r\nexport function FSharpMap__Add(m, key, value) {\r\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_add(m.comparer, key, value, m.tree));\r\n}\r\n\r\nexport function FSharpMap__Change(m, key, f) {\r\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_change(m.comparer, key, f, m.tree));\r\n}\r\n\r\nexport function FSharpMap__get_IsEmpty(m) {\r\n    return m.tree == null;\r\n}\r\n\r\nexport function FSharpMap__get_Item(m, key) {\r\n    return MapTreeModule_find(m.comparer, key, m.tree);\r\n}\r\n\r\nexport function FSharpMap__TryPick(m, f) {\r\n    return MapTreeModule_tryPick(f, m.tree);\r\n}\r\n\r\nexport function FSharpMap__Exists(m, predicate) {\r\n    return MapTreeModule_exists(predicate, m.tree);\r\n}\r\n\r\nexport function FSharpMap__Filter(m, predicate) {\r\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_filter(m.comparer, predicate, m.tree));\r\n}\r\n\r\nexport function FSharpMap__ForAll(m, predicate) {\r\n    return MapTreeModule_forall(predicate, m.tree);\r\n}\r\n\r\nexport function FSharpMap__Fold(m, f, acc) {\r\n    return MapTreeModule_foldBack(f, m.tree, acc);\r\n}\r\n\r\nexport function FSharpMap__FoldSection(m, lo, hi, f, acc) {\r\n    return MapTreeModule_foldSection(m.comparer, lo, hi, f, m.tree, acc);\r\n}\r\n\r\nexport function FSharpMap__Iterate(m, f) {\r\n    MapTreeModule_iter(f, m.tree);\r\n}\r\n\r\nexport function FSharpMap__MapRange(m, f) {\r\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_map(f, m.tree));\r\n}\r\n\r\nexport function FSharpMap__Map(m, f) {\r\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_mapi(f, m.tree));\r\n}\r\n\r\nexport function FSharpMap__Partition(m, predicate) {\r\n    const patternInput = MapTreeModule_partition(m.comparer, predicate, m.tree);\r\n    return [FSharpMap_$ctor(m.comparer, patternInput[0]), FSharpMap_$ctor(m.comparer, patternInput[1])];\r\n}\r\n\r\nexport function FSharpMap__get_Count(m) {\r\n    return MapTreeModule_size(m.tree);\r\n}\r\n\r\nexport function FSharpMap__ContainsKey(m, key) {\r\n    return MapTreeModule_mem(m.comparer, key, m.tree);\r\n}\r\n\r\nexport function FSharpMap__Remove(m, key) {\r\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_remove(m.comparer, key, m.tree));\r\n}\r\n\r\nexport function FSharpMap__TryGetValue(__, key, value) {\r\n    const matchValue = MapTreeModule_tryFind(__.comparer, key, __.tree);\r\n    if (matchValue == null) {\r\n        return false;\r\n    }\r\n    else {\r\n        const v = value_1(matchValue);\r\n        value.contents = v;\r\n        return true;\r\n    }\r\n}\r\n\r\nexport function FSharpMap__get_Keys(__) {\r\n    return Array.from(map_1((kvp) => kvp[0], MapTreeModule_toSeq(__.tree)));\r\n}\r\n\r\nexport function FSharpMap__get_Values(__) {\r\n    return Array.from(map_1((kvp) => kvp[1], MapTreeModule_toSeq(__.tree)));\r\n}\r\n\r\nexport function FSharpMap__TryFind(m, key) {\r\n    return MapTreeModule_tryFind(m.comparer, key, m.tree);\r\n}\r\n\r\nexport function FSharpMap__ToList(m) {\r\n    return MapTreeModule_toList(m.tree);\r\n}\r\n\r\nexport function FSharpMap__ToArray(m) {\r\n    return MapTreeModule_toArray(m.tree);\r\n}\r\n\r\nexport function FSharpMap__ComputeHashCode(this$) {\r\n    const combineHash = (x, y) => (((x << 1) + y) + 631);\r\n    let res = 0;\r\n    const enumerator = getEnumerator(this$);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const activePatternResult5680 = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            res = (combineHash(res, structuralHash(activePatternResult5680[0])) | 0);\r\n            res = (combineHash(res, structuralHash(activePatternResult5680[1])) | 0);\r\n        }\r\n    }\r\n    finally {\r\n        enumerator.Dispose();\r\n    }\r\n    return res | 0;\r\n}\r\n\r\nexport function isEmpty(table) {\r\n    return FSharpMap__get_IsEmpty(table);\r\n}\r\n\r\nexport function add(key, value, table) {\r\n    return FSharpMap__Add(table, key, value);\r\n}\r\n\r\nexport function change(key, f, table) {\r\n    return FSharpMap__Change(table, key, f);\r\n}\r\n\r\nexport function find(key, table) {\r\n    return FSharpMap__get_Item(table, key);\r\n}\r\n\r\nexport function tryFind(key, table) {\r\n    return FSharpMap__TryFind(table, key);\r\n}\r\n\r\nexport function remove(key, table) {\r\n    return FSharpMap__Remove(table, key);\r\n}\r\n\r\nexport function containsKey(key, table) {\r\n    return FSharpMap__ContainsKey(table, key);\r\n}\r\n\r\nexport function iterate(action, table) {\r\n    FSharpMap__Iterate(table, action);\r\n}\r\n\r\nexport function tryPick(chooser, table) {\r\n    return FSharpMap__TryPick(table, chooser);\r\n}\r\n\r\nexport function pick(chooser, table) {\r\n    const matchValue = tryPick(chooser, table);\r\n    if (matchValue != null) {\r\n        return value_1(matchValue);\r\n    }\r\n    else {\r\n        throw (new Error());\r\n    }\r\n}\r\n\r\nexport function exists(predicate, table) {\r\n    return FSharpMap__Exists(table, predicate);\r\n}\r\n\r\nexport function filter(predicate, table) {\r\n    return FSharpMap__Filter(table, predicate);\r\n}\r\n\r\nexport function partition(predicate, table) {\r\n    return FSharpMap__Partition(table, predicate);\r\n}\r\n\r\nexport function forAll(predicate, table) {\r\n    return FSharpMap__ForAll(table, predicate);\r\n}\r\n\r\nexport function map(mapping, table) {\r\n    return FSharpMap__Map(table, mapping);\r\n}\r\n\r\nexport function fold(folder, state, table) {\r\n    return MapTreeModule_fold(folder, state, FSharpMap__get_Tree(table));\r\n}\r\n\r\nexport function foldBack(folder, table, state) {\r\n    return MapTreeModule_foldBack(folder, FSharpMap__get_Tree(table), state);\r\n}\r\n\r\nexport function toSeq(table) {\r\n    return map_1((kvp) => [kvp[0], kvp[1]], table);\r\n}\r\n\r\nexport function findKey(predicate, table) {\r\n    return pick_1((kvp) => {\r\n        const k = kvp[0];\r\n        if (predicate(k, kvp[1])) {\r\n            return some(k);\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, table);\r\n}\r\n\r\nexport function tryFindKey(predicate, table) {\r\n    return tryPick_1((kvp) => {\r\n        const k = kvp[0];\r\n        if (predicate(k, kvp[1])) {\r\n            return some(k);\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, table);\r\n}\r\n\r\nexport function ofList(elements) {\r\n    return FSharpMap_Create(elements);\r\n}\r\n\r\nexport function ofSeq(elements) {\r\n    return FSharpMap_Create(elements);\r\n}\r\n\r\nexport function ofArray(elements) {\r\n    const comparer = LanguagePrimitives_FastGenericComparer();\r\n    return FSharpMap_$ctor(comparer, MapTreeModule_ofArray(comparer, elements));\r\n}\r\n\r\nexport function toList(table) {\r\n    return FSharpMap__ToList(table);\r\n}\r\n\r\nexport function toArray(table) {\r\n    return FSharpMap__ToArray(table);\r\n}\r\n\r\nexport function empty() {\r\n    return FSharpMap_get_Empty();\r\n}\r\n\r\nexport function count(table) {\r\n    return FSharpMap__get_Count(table);\r\n}\r\n\r\n","import { curry, uncurry, equals, max, min, compare, randomNext } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Util.js\";\r\nimport { split, compare as compare_1, join, printf, toText } from \"../ShiningSword/fable_modules/fable-library.3.6.2/String.js\";\r\nimport { reduce, map as map_2, length, skip, head as head_1 } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Seq.js\";\r\nimport { iterateIndexed, map as map_1 } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Array.js\";\r\nimport { record_type, tuple_type, list_type, lambda_type, unit_type, union_type, int32_type, class_type } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Reflection.js\";\r\nimport { empty as empty_1, tryFind, add } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Map.js\";\r\nimport { foldBack, append, exists, empty, singleton, cons, ofArray, collect, reverse, head as head_2, tail as tail_1, isEmpty } from \"../ShiningSword/fable_modules/fable-library.3.6.2/List.js\";\r\nimport { defaultArg, value as value_2, ofNullable } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Option.js\";\r\nimport { FSharpResult$2 } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Choice.js\";\r\nimport { FSharpRef, Record, Union } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Types.js\";\r\nimport { Operations_over_Z4EEE036B } from \"./Optics.fs.js\";\r\n\r\nexport function flip(f, x, y) {\r\n    return f(y, x);\r\n}\r\n\r\nexport const random = {};\r\n\r\nexport function rand(x) {\r\n    return 1 + randomNext(0, x);\r\n}\r\n\r\nexport function thunk(v, _arg1) {\r\n    return v;\r\n}\r\n\r\nexport function thunk1(f, arg, _arg1) {\r\n    return f(arg);\r\n}\r\n\r\nexport function thunk2(f, arg1, arg2, _arg1) {\r\n    return f(arg1, arg2);\r\n}\r\n\r\nexport function thunk3(f, arg1, arg2, arg3, _arg1) {\r\n    return f(arg1, arg2, arg3);\r\n}\r\n\r\nexport function ignore1(f, _arg1) {\r\n    return f();\r\n}\r\n\r\nexport function tuple2(x, y) {\r\n    return [x, y];\r\n}\r\n\r\nexport function matchfail(v) {\r\n    const message = toText(printf(\"No match found for %A. This is a bug.\"))(v);\r\n    throw (new Error(message));\r\n}\r\n\r\nexport function notImpl(_arg1) {\r\n    throw (new Error(\"Not implemented yet. Email Max if you want this feature.\"));\r\n}\r\n\r\nexport function shouldntHappen(_arg1) {\r\n    debugger;\r\n    throw (new Error(\"This shouldn\\u0027t ever happen. If it does there\\u0027s a bug.\"));\r\n}\r\n\r\nexport const emptyString = \"\";\r\n\r\nexport function betweenInclusive(a, b, n) {\r\n    if (compare(min((x, y) => compare(x, y), a, b), n) <= 0) {\r\n        return compare(n, max((x_1, y_1) => compare(x_1, y_1), a, b)) <= 0;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function inv(f) {\r\n    return f();\r\n}\r\n\r\nexport function chooseRandom(options) {\r\n    return head_1(skip(randomNext(0, length(options)), options));\r\n}\r\n\r\nexport function iter(data, f) {\r\n    data.contents = f(data.contents);\r\n    return data.contents;\r\n}\r\n\r\nexport function iteri(data, f) {\r\n    data.contents = f(data.contents);\r\n}\r\n\r\nexport function shuffleCopy() {\r\n    return (a_1) => {\r\n        const a_2 = map_1((x_1) => x_1, a_1);\r\n        iterateIndexed((i, _arg1) => {\r\n            const y = randomNext(i, a_2.length) | 0;\r\n            const x = i | 0;\r\n            const a = a_2;\r\n            const tmp = a[x];\r\n            a[x] = a[y];\r\n            a[y] = tmp;\r\n        }, a_2);\r\n        return a_2;\r\n    };\r\n}\r\n\r\nexport class Ops {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function Ops$reflection() {\r\n    return class_type(\"Common.Ops\", void 0, Ops);\r\n}\r\n\r\nexport function Ops_add_1F6216BE(key, value, data) {\r\n    return add(key, value, data);\r\n}\r\n\r\nexport function Ops_addTo_2FBA9827(data) {\r\n    return (key) => ((value) => Ops_add_1F6216BE(key, value, data));\r\n}\r\n\r\nexport function String_oxfordJoin(_arg1) {\r\n    if (isEmpty(_arg1)) {\r\n        return emptyString;\r\n    }\r\n    else if (isEmpty(tail_1(_arg1))) {\r\n        return head_2(_arg1);\r\n    }\r\n    else if (isEmpty(tail_1(tail_1(_arg1)))) {\r\n        return toText(printf(\"%s and %s\"))(head_2(_arg1))(head_2(tail_1(_arg1)));\r\n    }\r\n    else {\r\n        const matchValue = reverse(_arg1);\r\n        if (!isEmpty(matchValue)) {\r\n            const arg10 = join(\", \", reverse(tail_1(matchValue)));\r\n            return toText(printf(\"%s, and %s\"))(arg10)(head_2(matchValue));\r\n        }\r\n        else {\r\n            return shouldntHappen();\r\n        }\r\n    }\r\n}\r\n\r\nexport function String_join(delimiter, strings) {\r\n    return join(delimiter, strings);\r\n}\r\n\r\nexport function String_equalsIgnoreCase(lhs, rhs) {\r\n    return compare_1(lhs, rhs, 3) === 0;\r\n}\r\n\r\nexport function String_firstWord(input) {\r\n    const matchValue = ofNullable(input);\r\n    if (matchValue == null) {\r\n        return input;\r\n    }\r\n    else {\r\n        return head_1(split(matchValue.trim(), [\" \"], null, 0));\r\n    }\r\n}\r\n\r\nexport function String_trim(s) {\r\n    return s.trim();\r\n}\r\n\r\nexport function List_join(delimiter, lst) {\r\n    let pattern_matching_result, head, tail;\r\n    if (!isEmpty(lst)) {\r\n        if (isEmpty(tail_1(lst))) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n            head = head_2(lst);\r\n            tail = tail_1(lst);\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 0;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return lst;\r\n        }\r\n        case 1: {\r\n            return cons(head, collect((x) => ofArray([delimiter, x]), tail));\r\n        }\r\n    }\r\n}\r\n\r\nexport function List_ofOption(_arg1) {\r\n    if (_arg1 != null) {\r\n        return singleton(value_2(_arg1));\r\n    }\r\n    else {\r\n        return empty();\r\n    }\r\n}\r\n\r\nexport function List_every(f) {\r\n    return (arg_1) => (!exists((arg) => (!f(arg)), arg_1));\r\n}\r\n\r\nexport function List_tryMapFold(f_mut, state_mut, lst_mut) {\r\n    List_tryMapFold:\r\n    while (true) {\r\n        const f = f_mut, state = state_mut, lst = lst_mut;\r\n        if (!isEmpty(lst)) {\r\n            const matchValue = f(state, head_2(lst));\r\n            if (matchValue.tag === 0) {\r\n                f_mut = f;\r\n                state_mut = matchValue.fields[0];\r\n                lst_mut = tail_1(lst);\r\n                continue List_tryMapFold;\r\n            }\r\n            else {\r\n                return matchValue;\r\n            }\r\n        }\r\n        else {\r\n            return new FSharpResult$2(0, state);\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function Map_keys(m) {\r\n    return map_2((_arg1) => _arg1[0], m);\r\n}\r\n\r\nexport function Map_values(m) {\r\n    return map_2((_arg1) => _arg1[1], m);\r\n}\r\n\r\nexport function Map_addForce(key, f, m) {\r\n    const matchValue = tryFind(key, m);\r\n    if (matchValue == null) {\r\n        return add(key, f(empty_1()), m);\r\n    }\r\n    else {\r\n        const v = matchValue;\r\n        const v$0027 = f(v);\r\n        if (v.Equals(v$0027)) {\r\n            return m;\r\n        }\r\n        else {\r\n            return add(key, v$0027, m);\r\n        }\r\n    }\r\n}\r\n\r\nexport function Map_findForce(key, m) {\r\n    return defaultArg(tryFind(key, m), empty_1());\r\n}\r\n\r\nexport class IdGenerator extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"NextId\"];\r\n    }\r\n}\r\n\r\nexport function IdGenerator$reflection() {\r\n    return union_type(\"Common.IdGenerator\", [], IdGenerator, () => [[[\"Item\", int32_type]]]);\r\n}\r\n\r\nexport function IdGenerator_get_fresh() {\r\n    return new IdGenerator(0, 1);\r\n}\r\n\r\nexport function IdGenerator_newId(idGenerator_, model) {\r\n    let id$0027 = 0;\r\n    const model$0027 = Operations_over_Z4EEE036B(idGenerator_)((_arg1) => {\r\n        id$0027 = (_arg1.fields[0] | 0);\r\n        return new IdGenerator(0, id$0027 + 1);\r\n    })(model);\r\n    return [id$0027, model$0027];\r\n}\r\n\r\nexport function Queue_append(item, queue) {\r\n    return append(queue, singleton(item));\r\n}\r\n\r\nexport function Queue_empty() {\r\n    return empty();\r\n}\r\n\r\nexport function Queue_read(queue) {\r\n    return queue;\r\n}\r\n\r\nexport function Ops_add_Z43558E54(item, data) {\r\n    return Queue_append(item, data);\r\n}\r\n\r\nexport function Ops_addTo_Z43573BF7(data) {\r\n    return (item) => Ops_add_Z43558E54(item, data);\r\n}\r\n\r\nclass Stateful_Seed$2 extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Seed\"];\r\n    }\r\n}\r\n\r\nfunction Stateful_Seed$2$reflection(gen0, gen1) {\r\n    return union_type(\"Common.Stateful.Seed`2\", [gen0, gen1], Stateful_Seed$2, () => [[[\"initial\", lambda_type(unit_type, gen0)], [\"update\", lambda_type(gen1, lambda_type(gen0, gen0))]]]);\r\n}\r\n\r\nexport class Stateful_State$2 extends Record {\r\n    constructor(seed, shared, past, queue) {\r\n        super();\r\n        this.seed = seed;\r\n        this.shared = shared;\r\n        this.past = past;\r\n        this.queue = queue;\r\n    }\r\n}\r\n\r\nexport function Stateful_State$2$reflection(gen0, gen1) {\r\n    return record_type(\"Common.Stateful.State`2\", [gen0, gen1], Stateful_State$2, () => [[\"seed\", Stateful_Seed$2$reflection(gen0, gen1)], [\"shared\", record_type(\"Microsoft.FSharp.Core.FSharpRef`1\", [tuple_type(gen0, list_type(gen1))], FSharpRef, () => [[\"contents\", tuple_type(gen0, list_type(gen1))]])], [\"past\", list_type(gen1)], [\"queue\", list_type(gen1)]]);\r\n}\r\n\r\nexport function Stateful_State$2_create_1F85672B(initial, update) {\r\n    return new Stateful_State$2(new Stateful_Seed$2(0, initial, update), new FSharpRef([initial(), empty()]), empty(), empty());\r\n}\r\n\r\nexport function Stateful_$007CDeref$007C(cell) {\r\n    return cell.contents;\r\n}\r\n\r\nexport function Stateful_deref(_arg1) {\r\n    let pattern_matching_result, current_1, past_1, sharedPast_1, this$_1;\r\n    const activePatternResult11913 = Stateful_$007CDeref$007C(_arg1.shared);\r\n    if (isEmpty(_arg1.queue)) {\r\n        if (equals(activePatternResult11913[1], _arg1.past)) {\r\n            pattern_matching_result = 0;\r\n            current_1 = activePatternResult11913[0];\r\n            past_1 = _arg1.past;\r\n            sharedPast_1 = activePatternResult11913[1];\r\n            this$_1 = _arg1;\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return [current_1, this$_1];\r\n        }\r\n        case 1: {\r\n            const activePatternResult11912 = Stateful_$007CDeref$007C(_arg1.shared);\r\n            const shared = _arg1.shared;\r\n            const queue = _arg1.queue;\r\n            const past_2 = _arg1.past;\r\n            const apply = (q, state) => foldBack(_arg1.seed.fields[1], q, state);\r\n            let patternInput;\r\n            if (equals(activePatternResult11912[1], past_2)) {\r\n                patternInput = [apply(queue, activePatternResult11912[0]), append(queue, past_2)];\r\n            }\r\n            else {\r\n                const combined = append(queue, past_2);\r\n                patternInput = [apply(combined, _arg1.seed.fields[0]()), combined];\r\n            }\r\n            const past$0027 = patternInput[1];\r\n            const current$0027 = patternInput[0];\r\n            shared.contents = [current$0027, past$0027];\r\n            return [current$0027, new Stateful_State$2(_arg1.seed, shared, past$0027, empty())];\r\n        }\r\n    }\r\n}\r\n\r\nexport function Stateful_execute(msg, _arg1) {\r\n    const this$ = _arg1;\r\n    return new Stateful_State$2(this$.seed, this$.shared, this$.past, cons(msg, this$.queue));\r\n}\r\n\r\nexport function StateMonad_getState(s) {\r\n    return [s, s];\r\n}\r\n\r\nexport function StateMonad_putState(s, _arg1) {\r\n    return [void 0, s];\r\n}\r\n\r\nexport function StateMonad_eval(m, s) {\r\n    return m(s)[0];\r\n}\r\n\r\nexport function StateMonad_exec(m, s) {\r\n    return m(s)[1];\r\n}\r\n\r\nexport function StateMonad_empty(s) {\r\n    return [void 0, s];\r\n}\r\n\r\nexport function StateMonad_bind(k, m, s) {\r\n    const patternInput = m(s);\r\n    return k(patternInput[0], patternInput[1]);\r\n}\r\n\r\nfunction StateMonad_State_get(s) {\r\n    return [s, s];\r\n}\r\n\r\nfunction StateMonad_State_set(v, _arg1) {\r\n    return [void 0, v];\r\n}\r\n\r\nfunction StateMonad_State_map(f, s, s0) {\r\n    const patternInput = s(s0);\r\n    return [f(patternInput[0]), patternInput[1]];\r\n}\r\n\r\nexport class StateMonad_StateBuilder {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function StateMonad_StateBuilder$reflection() {\r\n    return class_type(\"Common.StateMonad.StateBuilder\", void 0, StateMonad_StateBuilder);\r\n}\r\n\r\nexport function StateMonad_StateBuilder_$ctor() {\r\n    return new StateMonad_StateBuilder();\r\n}\r\n\r\nexport function StateMonad_StateBuilder__Return_1505(this$, x) {\r\n    return (state) => [x, state];\r\n}\r\n\r\nexport function StateMonad_StateBuilder__Zero(this$) {\r\n    return StateMonad_StateBuilder__Return_1505(this$);\r\n}\r\n\r\nexport function StateMonad_StateBuilder__ReturnFrom_1505(this$, stateful) {\r\n    return stateful;\r\n}\r\n\r\nexport function StateMonad_StateBuilder__Bind_3179(this$, m, f) {\r\n    return (s) => StateMonad_StateBuilder__bind(this$, f, m, s);\r\n}\r\n\r\nexport function StateMonad_StateBuilder__Combine_419033D3(this$, m1, m2) {\r\n    return (s) => StateMonad_StateBuilder__bind(this$, uncurry(2, () => m2), m1, s);\r\n}\r\n\r\nexport function StateMonad_StateBuilder__For_4BCC29DA(this$, seq, f) {\r\n    return reduce((x1, x2) => StateMonad_StateBuilder__Combine_419033D3(this$, x1, x2), map_2(curry(2, f), seq));\r\n}\r\n\r\nexport function StateMonad_StateBuilder__Delay_Z38F4EA44(this$, f) {\r\n    const m = StateMonad_StateBuilder__Return_1505(this$);\r\n    return (s) => StateMonad_StateBuilder__bind(this$, f, m, s);\r\n}\r\n\r\nexport function StateMonad_StateBuilder__While_Z13C36FDB(this$, condition, body) {\r\n    return (state) => {\r\n        const loop = (state_1_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const state_1 = state_1_mut;\r\n                if (condition()) {\r\n                    state_1_mut = body(state_1)[1];\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return [void 0, state_1];\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(state);\r\n    };\r\n}\r\n\r\nfunction StateMonad_StateBuilder__bind(this$, k, m, s) {\r\n    const patternInput = m(s);\r\n    return k(patternInput[0], patternInput[1]);\r\n}\r\n\r\nexport function StateMonad_get(unitVar0, state) {\r\n    return [state, state];\r\n}\r\n\r\nexport function StateMonad_transform(f, state) {\r\n    return [void 0, f(state)];\r\n}\r\n\r\nexport function StateMonad_transform1(f, state) {\r\n    const patternInput = f(state);\r\n    return [patternInput[0], patternInput[1]];\r\n}\r\n\r\nexport function StateMonad_set(v, state) {\r\n    return [void 0, v];\r\n}\r\n\r\nexport const StateMonad_state = StateMonad_StateBuilder_$ctor();\r\n\r\nexport function StateMonad_runNoResult(state, m) {\r\n    return m(state)[1];\r\n}\r\n\r\nexport function withState(initialState, monad) {\r\n    return monad(initialState)[0];\r\n}\r\n\r\nexport function toState(initialState, monad) {\r\n    return monad(initialState)[1];\r\n}\r\n\r\nexport function $007CLookup$007C_$007C(key, map) {\r\n    return tryFind(key, map);\r\n}\r\n\r\n","import { Record } from \"../Types.js\";\r\nimport { record_type, array_type, int32_type } from \"../Reflection.js\";\r\nimport { op_LeftShift, op_BitwiseAnd, op_Addition, compare, op_Subtraction, op_Division, equals, fromInteger, op_Multiply, op_Modulus, toInt, fromBits } from \"../Long.js\";\r\nimport { copy, initialize, map, fill } from \"../Array.js\";\r\nimport { toArray, empty, head, tail, isEmpty, cons } from \"../List.js\";\r\nimport { int32ToString } from \"../Util.js\";\r\nimport { isNullOrEmpty, join } from \"../String.js\";\r\n\r\nexport class BigNat extends Record {\r\n    constructor(bound, digits) {\r\n        super();\r\n        this.bound = (bound | 0);\r\n        this.digits = digits;\r\n    }\r\n}\r\n\r\nexport function BigNat$reflection() {\r\n    return record_type(\"BigInt.BigNat\", [], BigNat, () => [[\"bound\", int32_type], [\"digits\", array_type(int32_type)]]);\r\n}\r\n\r\nexport function BigNatModule_FFT_pow32(x_mut, n_mut) {\r\n    BigNatModule_FFT_pow32:\r\n    while (true) {\r\n        const x = x_mut, n = n_mut;\r\n        if (n === 0) {\r\n            return 1;\r\n        }\r\n        else if ((n % 2) === 0) {\r\n            x_mut = (x * x);\r\n            n_mut = (~(~(n / 2)));\r\n            continue BigNatModule_FFT_pow32;\r\n        }\r\n        else {\r\n            return (x * BigNatModule_FFT_pow32(x * x, ~(~(n / 2)))) | 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_FFT_leastBounding2Power(b) {\r\n    const findBounding2Power = (b_1_mut, tp_mut, i_mut) => {\r\n        findBounding2Power:\r\n        while (true) {\r\n            const b_1 = b_1_mut, tp = tp_mut, i = i_mut;\r\n            if (b_1 <= tp) {\r\n                return [tp, i];\r\n            }\r\n            else {\r\n                b_1_mut = b_1;\r\n                tp_mut = (tp * 2);\r\n                i_mut = (i + 1);\r\n                continue findBounding2Power;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return findBounding2Power(b, 1, 0);\r\n}\r\n\r\nexport const BigNatModule_FFT_p = fromBits(2013265921, 0, false);\r\n\r\nconst BigNatModule_FFT_patternInput$004075 = [27, 15, 31, 440564289];\r\n\r\nexport const BigNatModule_FFT_w = BigNatModule_FFT_patternInput$004075[3];\r\n\r\nexport const BigNatModule_FFT_m = BigNatModule_FFT_patternInput$004075[1];\r\n\r\nexport const BigNatModule_FFT_k = BigNatModule_FFT_patternInput$004075[0];\r\n\r\nexport const BigNatModule_FFT_g = BigNatModule_FFT_patternInput$004075[2];\r\n\r\nexport const BigNatModule_FFT_primeP = BigNatModule_FFT_p;\r\n\r\nexport const BigNatModule_FFT_maxBitsInsideFp = 30;\r\n\r\nexport const BigNatModule_FFT_Fp_p = 2013265921;\r\n\r\nexport const BigNatModule_FFT_Fp_p64 = fromBits(2013265921, 0, true);\r\n\r\nexport function BigNatModule_FFT_Fp_toInt(x) {\r\n    return ~(~x);\r\n}\r\n\r\nexport function BigNatModule_FFT_Fp_ofInt32(x) {\r\n    return x >>> 0;\r\n}\r\n\r\nexport const BigNatModule_FFT_Fp_mzero = 0;\r\n\r\nexport const BigNatModule_FFT_Fp_mone = 1;\r\n\r\nexport const BigNatModule_FFT_Fp_mtwo = 2;\r\n\r\nexport function BigNatModule_FFT_Fp_mpow(x_mut, n_mut) {\r\n    BigNatModule_FFT_Fp_mpow:\r\n    while (true) {\r\n        const x = x_mut, n = n_mut;\r\n        if (n === 0) {\r\n            return BigNatModule_FFT_Fp_mone;\r\n        }\r\n        else if ((n % 2) === 0) {\r\n            x_mut = (toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\r\n            n_mut = (~(~(n / 2)));\r\n            continue BigNatModule_FFT_Fp_mpow;\r\n        }\r\n        else {\r\n            const y_2 = BigNatModule_FFT_Fp_mpow(toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0, ~(~(n / 2)));\r\n            return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y_2, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_FFT_Fp_mpowL(x_mut, n_mut) {\r\n    BigNatModule_FFT_Fp_mpowL:\r\n    while (true) {\r\n        const x = x_mut, n = n_mut;\r\n        if (equals(n, fromBits(0, 0, false))) {\r\n            return BigNatModule_FFT_Fp_mone;\r\n        }\r\n        else if (equals(op_Modulus(n, fromBits(2, 0, false)), fromBits(0, 0, false))) {\r\n            x_mut = (toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\r\n            n_mut = op_Division(n, fromBits(2, 0, false));\r\n            continue BigNatModule_FFT_Fp_mpowL;\r\n        }\r\n        else {\r\n            const y_2 = BigNatModule_FFT_Fp_mpowL(toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0, op_Division(n, fromBits(2, 0, false)));\r\n            return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y_2, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_FFT_Fp_m2PowNthRoot(n) {\r\n    return BigNatModule_FFT_Fp_mpow(BigNatModule_FFT_w >>> 0, BigNatModule_FFT_pow32(2, BigNatModule_FFT_k - n));\r\n}\r\n\r\nexport function BigNatModule_FFT_Fp_minv(x) {\r\n    return BigNatModule_FFT_Fp_mpowL(x, op_Subtraction(BigNatModule_FFT_primeP, fromBits(2, 0, false)));\r\n}\r\n\r\nexport function BigNatModule_FFT_computeFFT(lambda, mu, n, w, u, res, offset) {\r\n    let x_1, x_3, y_5;\r\n    if (n === 1) {\r\n        res[offset] = u[mu];\r\n    }\r\n    else {\r\n        const halfN = (~(~(n / 2))) | 0;\r\n        const ww = toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(w, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\r\n        const offsetHalfN = (offset + halfN) | 0;\r\n        BigNatModule_FFT_computeFFT(lambda * 2, mu, halfN, ww, u, res, offset);\r\n        BigNatModule_FFT_computeFFT(lambda * 2, lambda + mu, halfN, ww, u, res, offsetHalfN);\r\n        let wj = BigNatModule_FFT_Fp_mone;\r\n        for (let j = 0; j <= (halfN - 1); j++) {\r\n            const even = res[offset + j];\r\n            const odd = res[offsetHalfN + j];\r\n            res[offset + j] = ((even + ((x_1 = wj, toInt(op_Modulus(op_Multiply(fromInteger(x_1, true, 6), fromInteger(odd, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0))) % BigNatModule_FFT_Fp_p);\r\n            res[offsetHalfN + j] = (((even + BigNatModule_FFT_Fp_p) - ((x_3 = wj, toInt(op_Modulus(op_Multiply(fromInteger(x_3, true, 6), fromInteger(odd, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0))) % BigNatModule_FFT_Fp_p);\r\n            wj = ((y_5 = wj, toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(y_5, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigNatModule_FFT_computFftInPlace(n, w, u) {\r\n    const res = fill(new Uint32Array(n), 0, n, BigNatModule_FFT_Fp_mzero);\r\n    BigNatModule_FFT_computeFFT(1, 0, n, w, u, res, 0);\r\n    return res;\r\n}\r\n\r\nexport function BigNatModule_FFT_computeInverseFftInPlace(n, w, uT) {\r\n    const bigKInv = BigNatModule_FFT_Fp_minv(n >>> 0);\r\n    return map((y) => (toInt(op_Modulus(op_Multiply(fromInteger(bigKInv, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0), BigNatModule_FFT_computFftInPlace(n, BigNatModule_FFT_Fp_minv(w), uT), Uint32Array);\r\n}\r\n\r\nexport const BigNatModule_FFT_maxTwoPower = 29;\r\n\r\nexport const BigNatModule_FFT_twoPowerTable = initialize(BigNatModule_FFT_maxTwoPower - 1, (i) => BigNatModule_FFT_pow32(2, i), Int32Array);\r\n\r\nexport function BigNatModule_FFT_computeFftPaddedPolynomialProduct(bigK, k, u, v) {\r\n    const w = BigNatModule_FFT_Fp_m2PowNthRoot(k);\r\n    const n = bigK | 0;\r\n    const uT = BigNatModule_FFT_computFftInPlace(n, w, u);\r\n    const vT = BigNatModule_FFT_computFftInPlace(n, w, v);\r\n    return BigNatModule_FFT_computeInverseFftInPlace(n, w, initialize(n, (i) => {\r\n        const x = uT[i];\r\n        const y = vT[i];\r\n        return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\r\n    }, Uint32Array));\r\n}\r\n\r\nexport function BigNatModule_FFT_padTo(n, u) {\r\n    const uBound = u.length | 0;\r\n    return initialize(n, (i) => ((i < uBound) ? BigNatModule_FFT_Fp_ofInt32(u[i]) : BigNatModule_FFT_Fp_mzero), Uint32Array);\r\n}\r\n\r\nexport function BigNatModule_FFT_computeFftPolynomialProduct(degu, u, degv, v) {\r\n    const patternInput = BigNatModule_FFT_leastBounding2Power((degu + degv) + 1);\r\n    const bigK = patternInput[0] | 0;\r\n    const w = BigNatModule_FFT_Fp_m2PowNthRoot(patternInput[1]);\r\n    const u_1 = BigNatModule_FFT_padTo(bigK, u);\r\n    const v_1 = BigNatModule_FFT_padTo(bigK, v);\r\n    const n = bigK | 0;\r\n    const uT = BigNatModule_FFT_computFftInPlace(n, w, u_1);\r\n    const vT = BigNatModule_FFT_computFftInPlace(n, w, v_1);\r\n    return map((x_1) => BigNatModule_FFT_Fp_toInt(x_1), BigNatModule_FFT_computeInverseFftInPlace(n, w, initialize(n, (i) => {\r\n        const x = uT[i];\r\n        const y = vT[i];\r\n        return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\r\n    }, Uint32Array)), Int32Array);\r\n}\r\n\r\nexport const BigNatModule_FFT_mzero = BigNatModule_FFT_Fp_mzero;\r\n\r\nexport const BigNatModule_FFT_mone = BigNatModule_FFT_Fp_mone;\r\n\r\nexport const BigNatModule_FFT_maxFp = ((BigNatModule_FFT_Fp_p + BigNatModule_FFT_Fp_p) - BigNatModule_FFT_mone) % BigNatModule_FFT_Fp_p;\r\n\r\nexport function BigNatModule_bound(n) {\r\n    return n.bound;\r\n}\r\n\r\nexport function BigNatModule_setBound(n, v) {\r\n    n.bound = (v | 0);\r\n}\r\n\r\nexport function BigNatModule_coeff(n, i) {\r\n    return n.digits[i];\r\n}\r\n\r\nexport function BigNatModule_coeff64(n, i) {\r\n    return fromInteger(BigNatModule_coeff(n, i), false, 2);\r\n}\r\n\r\nexport function BigNatModule_setCoeff(n, i, v) {\r\n    n.digits[i] = (v | 0);\r\n}\r\n\r\nexport function BigNatModule_pow64(x_mut, n_mut) {\r\n    BigNatModule_pow64:\r\n    while (true) {\r\n        const x = x_mut, n = n_mut;\r\n        if (n === 0) {\r\n            return fromBits(1, 0, false);\r\n        }\r\n        else if ((n % 2) === 0) {\r\n            x_mut = op_Multiply(x, x);\r\n            n_mut = (~(~(n / 2)));\r\n            continue BigNatModule_pow64;\r\n        }\r\n        else {\r\n            return op_Multiply(x, BigNatModule_pow64(op_Multiply(x, x), ~(~(n / 2))));\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_pow32(x_mut, n_mut) {\r\n    BigNatModule_pow32:\r\n    while (true) {\r\n        const x = x_mut, n = n_mut;\r\n        if (n === 0) {\r\n            return 1;\r\n        }\r\n        else if ((n % 2) === 0) {\r\n            x_mut = (x * x);\r\n            n_mut = (~(~(n / 2)));\r\n            continue BigNatModule_pow32;\r\n        }\r\n        else {\r\n            return (x * BigNatModule_pow32(x * x, ~(~(n / 2)))) | 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_hash(n) {\r\n    let res = 0;\r\n    for (let i = 0; i <= (n.bound - 1); i++) {\r\n        res = ((n.digits[i] + (res << 3)) | 0);\r\n    }\r\n    return res | 0;\r\n}\r\n\r\nexport function BigNatModule_maxInt(a, b) {\r\n    if (a < b) {\r\n        return b | 0;\r\n    }\r\n    else {\r\n        return a | 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_minInt(a, b) {\r\n    if (a < b) {\r\n        return a | 0;\r\n    }\r\n    else {\r\n        return b | 0;\r\n    }\r\n}\r\n\r\nexport const BigNatModule_baseBits = 24;\r\n\r\nexport const BigNatModule_baseN = 16777216;\r\n\r\nexport const BigNatModule_baseMask = 16777215;\r\n\r\nexport const BigNatModule_baseNi64 = fromBits(16777216, 0, false);\r\n\r\nexport const BigNatModule_baseMaski64 = fromBits(16777215, 0, false);\r\n\r\nexport const BigNatModule_baseMaskU = fromBits(16777215, 0, true);\r\n\r\nexport const BigNatModule_baseMask32A = 16777215;\r\n\r\nexport const BigNatModule_baseMask32B = 255;\r\n\r\nexport const BigNatModule_baseShift32B = 24;\r\n\r\nexport const BigNatModule_baseMask64A = 16777215;\r\n\r\nexport const BigNatModule_baseMask64B = 16777215;\r\n\r\nexport const BigNatModule_baseMask64C = 65535;\r\n\r\nexport const BigNatModule_baseShift64B = 24;\r\n\r\nexport const BigNatModule_baseShift64C = 48;\r\n\r\nexport function BigNatModule_divbase(x) {\r\n    return ~(~((x >>> 0) >>> BigNatModule_baseBits));\r\n}\r\n\r\nexport function BigNatModule_modbase(x) {\r\n    return x & BigNatModule_baseMask;\r\n}\r\n\r\nexport function BigNatModule_createN(b) {\r\n    return new BigNat(b, new Int32Array(b));\r\n}\r\n\r\nexport function BigNatModule_copyN(x) {\r\n    return new BigNat(x.bound, copy(x.digits));\r\n}\r\n\r\nexport function BigNatModule_normN(n) {\r\n    const findLeastBound = (na_mut, i_mut) => {\r\n        findLeastBound:\r\n        while (true) {\r\n            const na = na_mut, i = i_mut;\r\n            if ((i === -1) ? true : (na[i] !== 0)) {\r\n                return (i + 1) | 0;\r\n            }\r\n            else {\r\n                na_mut = na;\r\n                i_mut = (i - 1);\r\n                continue findLeastBound;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const bound = findLeastBound(n.digits, n.bound - 1) | 0;\r\n    n.bound = (bound | 0);\r\n    return n;\r\n}\r\n\r\nexport const BigNatModule_boundInt = 2;\r\n\r\nexport const BigNatModule_boundInt64 = 3;\r\n\r\nexport const BigNatModule_boundBase = 1;\r\n\r\nexport function BigNatModule_embed(x) {\r\n    const x_1 = ((x < 0) ? 0 : x) | 0;\r\n    if (x_1 < BigNatModule_baseN) {\r\n        const r = BigNatModule_createN(1);\r\n        r.digits[0] = (x_1 | 0);\r\n        return BigNatModule_normN(r);\r\n    }\r\n    else {\r\n        const r_1 = BigNatModule_createN(BigNatModule_boundInt);\r\n        for (let i = 0; i <= (BigNatModule_boundInt - 1); i++) {\r\n            r_1.digits[i] = (((~(~(x_1 / BigNatModule_pow32(BigNatModule_baseN, i)))) % BigNatModule_baseN) | 0);\r\n        }\r\n        return BigNatModule_normN(r_1);\r\n    }\r\n}\r\n\r\nexport function BigNatModule_embed64(x) {\r\n    const x_1 = (compare(x, fromBits(0, 0, false)) < 0) ? fromBits(0, 0, false) : x;\r\n    const r = BigNatModule_createN(BigNatModule_boundInt64);\r\n    for (let i = 0; i <= (BigNatModule_boundInt64 - 1); i++) {\r\n        r.digits[i] = ((~(~toInt(op_Modulus(op_Division(x_1, BigNatModule_pow64(BigNatModule_baseNi64, i)), BigNatModule_baseNi64)))) | 0);\r\n    }\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_eval32(n) {\r\n    if (n.bound === 1) {\r\n        return n.digits[0] | 0;\r\n    }\r\n    else {\r\n        let acc = 0;\r\n        for (let i = n.bound - 1; i >= 0; i--) {\r\n            acc = ((n.digits[i] + (BigNatModule_baseN * acc)) | 0);\r\n        }\r\n        return acc | 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_eval64(n) {\r\n    if (n.bound === 1) {\r\n        return fromInteger(n.digits[0], false, 2);\r\n    }\r\n    else {\r\n        let acc = fromBits(0, 0, false);\r\n        for (let i = n.bound - 1; i >= 0; i--) {\r\n            acc = op_Addition(fromInteger(n.digits[i], false, 2), op_Multiply(BigNatModule_baseNi64, acc));\r\n        }\r\n        return acc;\r\n    }\r\n}\r\n\r\nexport const BigNatModule_one = BigNatModule_embed(1);\r\n\r\nexport const BigNatModule_zero = BigNatModule_embed(0);\r\n\r\nexport function BigNatModule_restrictTo(d, n) {\r\n    return new BigNat(BigNatModule_minInt(d, n.bound), n.digits);\r\n}\r\n\r\nexport function BigNatModule_shiftUp(d, n) {\r\n    const m = BigNatModule_createN(n.bound + d);\r\n    for (let i = 0; i <= (n.bound - 1); i++) {\r\n        m.digits[i + d] = (n.digits[i] | 0);\r\n    }\r\n    return m;\r\n}\r\n\r\nexport function BigNatModule_shiftDown(d, n) {\r\n    if ((n.bound - d) <= 0) {\r\n        return BigNatModule_zero;\r\n    }\r\n    else {\r\n        const m = BigNatModule_createN(n.bound - d);\r\n        for (let i = 0; i <= (m.bound - 1); i++) {\r\n            m.digits[i] = (n.digits[i + d] | 0);\r\n        }\r\n        return m;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_degree(n) {\r\n    return n.bound - 1;\r\n}\r\n\r\nexport function BigNatModule_addP(i_mut, n_mut, c_mut, p_mut, q_mut, r_mut) {\r\n    let z, i_1, z_1, i_2;\r\n    BigNatModule_addP:\r\n    while (true) {\r\n        const i = i_mut, n = n_mut, c = c_mut, p = p_mut, q = q_mut, r = r_mut;\r\n        if (i < n) {\r\n            const x = ((((z = p, (i_1 = (i | 0), (i_1 < z.bound) ? z.digits[i_1] : 0))) + ((z_1 = q, (i_2 = (i | 0), (i_2 < z_1.bound) ? z_1.digits[i_2] : 0)))) + c) | 0;\r\n            r.digits[i] = (BigNatModule_modbase(x) | 0);\r\n            i_mut = (i + 1);\r\n            n_mut = n;\r\n            c_mut = BigNatModule_divbase(x);\r\n            p_mut = p;\r\n            q_mut = q;\r\n            r_mut = r;\r\n            continue BigNatModule_addP;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_add(p, q) {\r\n    const rbound = (1 + BigNatModule_maxInt(p.bound, q.bound)) | 0;\r\n    const r = BigNatModule_createN(rbound);\r\n    BigNatModule_addP(0, rbound, 0, p, q, r);\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_subP(i_mut, n_mut, c_mut, p_mut, q_mut, r_mut) {\r\n    let z, i_1, z_1, i_2;\r\n    BigNatModule_subP:\r\n    while (true) {\r\n        const i = i_mut, n = n_mut, c = c_mut, p = p_mut, q = q_mut, r = r_mut;\r\n        if (i < n) {\r\n            const x = ((((z = p, (i_1 = (i | 0), (i_1 < z.bound) ? z.digits[i_1] : 0))) - ((z_1 = q, (i_2 = (i | 0), (i_2 < z_1.bound) ? z_1.digits[i_2] : 0)))) + c) | 0;\r\n            if (x > 0) {\r\n                r.digits[i] = (BigNatModule_modbase(x) | 0);\r\n                i_mut = (i + 1);\r\n                n_mut = n;\r\n                c_mut = BigNatModule_divbase(x);\r\n                p_mut = p;\r\n                q_mut = q;\r\n                r_mut = r;\r\n                continue BigNatModule_subP;\r\n            }\r\n            else {\r\n                const x_1 = (x + BigNatModule_baseN) | 0;\r\n                r.digits[i] = (BigNatModule_modbase(x_1) | 0);\r\n                i_mut = (i + 1);\r\n                n_mut = n;\r\n                c_mut = (BigNatModule_divbase(x_1) - 1);\r\n                p_mut = p;\r\n                q_mut = q;\r\n                r_mut = r;\r\n                continue BigNatModule_subP;\r\n            }\r\n        }\r\n        else {\r\n            return c !== 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_sub(p, q) {\r\n    const rbound = BigNatModule_maxInt(p.bound, q.bound) | 0;\r\n    const r = BigNatModule_createN(rbound);\r\n    if (BigNatModule_subP(0, rbound, 0, p, q, r)) {\r\n        return BigNatModule_embed(0);\r\n    }\r\n    else {\r\n        return BigNatModule_normN(r);\r\n    }\r\n}\r\n\r\nexport function BigNatModule_isZero(p) {\r\n    return p.bound === 0;\r\n}\r\n\r\nexport function BigNatModule_IsZero(p) {\r\n    return BigNatModule_isZero(p);\r\n}\r\n\r\nexport function BigNatModule_isOne(p) {\r\n    if (p.bound === 1) {\r\n        return p.digits[0] === 1;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_equal(p, q) {\r\n    if (p.bound === q.bound) {\r\n        const check = (pa_mut, qa_mut, i_mut) => {\r\n            check:\r\n            while (true) {\r\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\r\n                if (i === -1) {\r\n                    return true;\r\n                }\r\n                else if (pa[i] === qa[i]) {\r\n                    pa_mut = pa;\r\n                    qa_mut = qa;\r\n                    i_mut = (i - 1);\r\n                    continue check;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return check(p.digits, q.digits, p.bound - 1);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_shiftCompare(p, pn, q, qn) {\r\n    if ((p.bound + pn) < (q.bound + qn)) {\r\n        return -1;\r\n    }\r\n    else if ((p.bound + pn) > (q.bound + pn)) {\r\n        return 1;\r\n    }\r\n    else {\r\n        const check = (pa_mut, qa_mut, i_mut) => {\r\n            check:\r\n            while (true) {\r\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\r\n                if (i === -1) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    const pai = ((i < pn) ? 0 : pa[i - pn]) | 0;\r\n                    const qai = ((i < qn) ? 0 : qa[i - qn]) | 0;\r\n                    if (pai === qai) {\r\n                        pa_mut = pa;\r\n                        qa_mut = qa;\r\n                        i_mut = (i - 1);\r\n                        continue check;\r\n                    }\r\n                    else if (pai < qai) {\r\n                        return -1;\r\n                    }\r\n                    else {\r\n                        return 1;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return check(p.digits, q.digits, (p.bound + pn) - 1) | 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_compare(p, q) {\r\n    if (p.bound < q.bound) {\r\n        return -1;\r\n    }\r\n    else if (p.bound > q.bound) {\r\n        return 1;\r\n    }\r\n    else {\r\n        const check = (pa_mut, qa_mut, i_mut) => {\r\n            check:\r\n            while (true) {\r\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\r\n                if (i === -1) {\r\n                    return 0;\r\n                }\r\n                else if (pa[i] === qa[i]) {\r\n                    pa_mut = pa;\r\n                    qa_mut = qa;\r\n                    i_mut = (i - 1);\r\n                    continue check;\r\n                }\r\n                else if (pa[i] < qa[i]) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return check(p.digits, q.digits, p.bound - 1) | 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_lt(p, q) {\r\n    return BigNatModule_compare(p, q) === -1;\r\n}\r\n\r\nexport function BigNatModule_gt(p, q) {\r\n    return BigNatModule_compare(p, q) === 1;\r\n}\r\n\r\nexport function BigNatModule_lte(p, q) {\r\n    return BigNatModule_compare(p, q) !== 1;\r\n}\r\n\r\nexport function BigNatModule_gte(p, q) {\r\n    return BigNatModule_compare(p, q) !== -1;\r\n}\r\n\r\nexport function BigNatModule_min(a, b) {\r\n    if (BigNatModule_lt(a, b)) {\r\n        return a;\r\n    }\r\n    else {\r\n        return b;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_max(a, b) {\r\n    if (BigNatModule_lt(a, b)) {\r\n        return b;\r\n    }\r\n    else {\r\n        return a;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_contributeArr(a_mut, i_mut, c_mut) {\r\n    BigNatModule_contributeArr:\r\n    while (true) {\r\n        const a = a_mut, i = i_mut, c = c_mut;\r\n        const x = op_Addition(fromInteger(a[i], false, 2), c);\r\n        const c_1 = op_Division(x, BigNatModule_baseNi64);\r\n        const x_3 = (~(~toInt(op_BitwiseAnd(x, BigNatModule_baseMaski64)))) | 0;\r\n        a[i] = (x_3 | 0);\r\n        if (compare(c_1, fromBits(0, 0, false)) > 0) {\r\n            a_mut = a;\r\n            i_mut = (i + 1);\r\n            c_mut = c_1;\r\n            continue BigNatModule_contributeArr;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_scale(k, p) {\r\n    const r = BigNatModule_createN(p.bound + BigNatModule_boundInt);\r\n    const k_1 = fromInteger(k, false, 2);\r\n    for (let i = 0; i <= (p.bound - 1); i++) {\r\n        BigNatModule_contributeArr(r.digits, i, op_Multiply(k_1, fromInteger(p.digits[i], false, 2)));\r\n    }\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_mulSchoolBookBothSmall(p, q) {\r\n    const r = BigNatModule_createN(2);\r\n    const rak = op_Multiply(fromInteger(p, false, 2), fromInteger(q, false, 2));\r\n    BigNatModule_setCoeff(r, 0, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\r\n    BigNatModule_setCoeff(r, 1, ~(~toInt(op_Division(rak, BigNatModule_baseNi64))));\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_mulSchoolBookCarry(r_mut, c_mut, k_mut) {\r\n    BigNatModule_mulSchoolBookCarry:\r\n    while (true) {\r\n        const r = r_mut, c = c_mut, k = k_mut;\r\n        if (compare(c, fromBits(0, 0, false)) > 0) {\r\n            const rak = op_Addition(BigNatModule_coeff64(r, k), c);\r\n            BigNatModule_setCoeff(r, k, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\r\n            r_mut = r;\r\n            c_mut = op_Division(rak, BigNatModule_baseNi64);\r\n            k_mut = (k + 1);\r\n            continue BigNatModule_mulSchoolBookCarry;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_mulSchoolBookOneSmall(p, q) {\r\n    const bp = BigNatModule_bound(p) | 0;\r\n    const r = BigNatModule_createN(bp + 1);\r\n    const q_1 = fromInteger(q, false, 2);\r\n    let c = fromBits(0, 0, false);\r\n    for (let i = 0; i <= (bp - 1); i++) {\r\n        const rak = op_Addition(op_Addition(c, BigNatModule_coeff64(r, i)), op_Multiply(BigNatModule_coeff64(p, i), q_1));\r\n        BigNatModule_setCoeff(r, i, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\r\n        c = op_Division(rak, BigNatModule_baseNi64);\r\n    }\r\n    BigNatModule_mulSchoolBookCarry(r, c, bp);\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_mulSchoolBookNeitherSmall(p, q) {\r\n    const r = BigNatModule_createN(p.bound + q.bound);\r\n    const ra = r.digits;\r\n    for (let i = 0; i <= (p.bound - 1); i++) {\r\n        const pai = fromInteger(p.digits[i], false, 2);\r\n        let c = fromBits(0, 0, false);\r\n        let k = i;\r\n        for (let j = 0; j <= (q.bound - 1); j++) {\r\n            const qaj = fromInteger(q.digits[j], false, 2);\r\n            const rak = op_Addition(op_Addition(fromInteger(ra[k], false, 2), c), op_Multiply(pai, qaj));\r\n            ra[k] = ((~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64)))) | 0);\r\n            c = op_Division(rak, BigNatModule_baseNi64);\r\n            k = ((k + 1) | 0);\r\n        }\r\n        BigNatModule_mulSchoolBookCarry(r, c, k);\r\n    }\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_mulSchoolBook(p, q) {\r\n    const pSmall = BigNatModule_bound(p) === 1;\r\n    const qSmall = BigNatModule_bound(q) === 1;\r\n    if (pSmall && qSmall) {\r\n        return BigNatModule_mulSchoolBookBothSmall(BigNatModule_coeff(p, 0), BigNatModule_coeff(q, 0));\r\n    }\r\n    else if (pSmall) {\r\n        return BigNatModule_mulSchoolBookOneSmall(q, BigNatModule_coeff(p, 0));\r\n    }\r\n    else if (qSmall) {\r\n        return BigNatModule_mulSchoolBookOneSmall(p, BigNatModule_coeff(q, 0));\r\n    }\r\n    else {\r\n        return BigNatModule_mulSchoolBookNeitherSmall(p, q);\r\n    }\r\n}\r\n\r\nexport class BigNatModule_encoding extends Record {\r\n    constructor(bigL, twoToBigL, k, bigK, bigN, split, splits) {\r\n        super();\r\n        this.bigL = (bigL | 0);\r\n        this.twoToBigL = (twoToBigL | 0);\r\n        this.k = (k | 0);\r\n        this.bigK = (bigK | 0);\r\n        this.bigN = (bigN | 0);\r\n        this.split = (split | 0);\r\n        this.splits = splits;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_encoding$reflection() {\r\n    return record_type(\"BigInt.BigNatModule.encoding\", [], BigNatModule_encoding, () => [[\"bigL\", int32_type], [\"twoToBigL\", int32_type], [\"k\", int32_type], [\"bigK\", int32_type], [\"bigN\", int32_type], [\"split\", int32_type], [\"splits\", array_type(int32_type)]]);\r\n}\r\n\r\nexport function BigNatModule_mkEncoding(bigL, k, bigK, bigN) {\r\n    return new BigNatModule_encoding(bigL, BigNatModule_pow32(2, bigL), k, bigK, bigN, ~(~(BigNatModule_baseBits / bigL)), initialize(~(~(BigNatModule_baseBits / bigL)), (i) => BigNatModule_pow32(2, bigL * i), Int32Array));\r\n}\r\n\r\nexport const BigNatModule_table = [BigNatModule_mkEncoding(1, 28, 268435456, 268435456), BigNatModule_mkEncoding(2, 26, 67108864, 134217728), BigNatModule_mkEncoding(3, 24, 16777216, 50331648), BigNatModule_mkEncoding(4, 22, 4194304, 16777216), BigNatModule_mkEncoding(5, 20, 1048576, 5242880), BigNatModule_mkEncoding(6, 18, 262144, 1572864), BigNatModule_mkEncoding(7, 16, 65536, 458752), BigNatModule_mkEncoding(8, 14, 16384, 131072), BigNatModule_mkEncoding(9, 12, 4096, 36864), BigNatModule_mkEncoding(10, 10, 1024, 10240), BigNatModule_mkEncoding(11, 8, 256, 2816), BigNatModule_mkEncoding(12, 6, 64, 768), BigNatModule_mkEncoding(13, 4, 16, 208)];\r\n\r\nexport function BigNatModule_calculateTableTow(bigL) {\r\n    const k = (BigNatModule_FFT_maxBitsInsideFp - (2 * bigL)) | 0;\r\n    const bigK = BigNatModule_pow64(fromBits(2, 0, false), k);\r\n    return [bigL, k, bigK, op_Multiply(bigK, fromInteger(bigL, false, 2))];\r\n}\r\n\r\nexport function BigNatModule_encodingGivenResultBits(bitsRes) {\r\n    const selectFrom = (i_mut) => {\r\n        selectFrom:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (((i + 1) < BigNatModule_table.length) && (bitsRes < BigNatModule_table[i + 1].bigN)) {\r\n                i_mut = (i + 1);\r\n                continue selectFrom;\r\n            }\r\n            else {\r\n                return BigNatModule_table[i];\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    if (bitsRes >= BigNatModule_table[0].bigN) {\r\n        throw (new Error(\"Product is huge, around 268435456 bits, beyond quickmul\"));\r\n    }\r\n    else {\r\n        return selectFrom(0);\r\n    }\r\n}\r\n\r\nexport const BigNatModule_bitmask = initialize(BigNatModule_baseBits, (i) => (BigNatModule_pow32(2, i) - 1), Int32Array);\r\n\r\nexport const BigNatModule_twopowers = initialize(BigNatModule_baseBits, (i) => BigNatModule_pow32(2, i), Int32Array);\r\n\r\nexport const BigNatModule_twopowersI64 = initialize(BigNatModule_baseBits, (i) => BigNatModule_pow64(fromBits(2, 0, false), i));\r\n\r\nexport function BigNatModule_wordBits(word) {\r\n    const hi = (k_mut) => {\r\n        hi:\r\n        while (true) {\r\n            const k = k_mut;\r\n            if (k === 0) {\r\n                return 0;\r\n            }\r\n            else if ((word & BigNatModule_twopowers[k - 1]) !== 0) {\r\n                return k | 0;\r\n            }\r\n            else {\r\n                k_mut = (k - 1);\r\n                continue hi;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return hi(BigNatModule_baseBits) | 0;\r\n}\r\n\r\nexport function BigNatModule_bits(u) {\r\n    if (u.bound === 0) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return ((BigNatModule_degree(u) * BigNatModule_baseBits) + BigNatModule_wordBits(u.digits[BigNatModule_degree(u)])) | 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_extractBits(n, enc, bi) {\r\n    let z, i, z_1, i_1, z_2, i_2;\r\n    const biw = (~(~(bi / BigNatModule_baseBits))) | 0;\r\n    const bjw = (~(~(((bi + enc.bigL) - 1) / BigNatModule_baseBits))) | 0;\r\n    if (biw !== bjw) {\r\n        const xbit = (bi % BigNatModule_baseBits) | 0;\r\n        return (((((z = n, (i = (biw | 0), (i < z.bound) ? z.digits[i] : 0))) >> xbit) | (((z_1 = n, (i_1 = (bjw | 0), (i_1 < z_1.bound) ? z_1.digits[i_1] : 0))) << (BigNatModule_baseBits - xbit))) & BigNatModule_bitmask[enc.bigL]) | 0;\r\n    }\r\n    else {\r\n        return ((((z_2 = n, (i_2 = (biw | 0), (i_2 < z_2.bound) ? z_2.digits[i_2] : 0))) >> (bi % BigNatModule_baseBits)) & BigNatModule_bitmask[enc.bigL]) | 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_encodePoly(enc, n) {\r\n    const poly = fill(new Uint32Array(enc.bigK), 0, enc.bigK, BigNatModule_FFT_Fp_ofInt32(0));\r\n    const biMax = (n.bound * BigNatModule_baseBits) | 0;\r\n    const encoder = (i_mut, bi_mut) => {\r\n        encoder:\r\n        while (true) {\r\n            const i = i_mut, bi = bi_mut;\r\n            if ((i === enc.bigK) ? true : (bi > biMax)) {\r\n            }\r\n            else {\r\n                const pi = BigNatModule_extractBits(n, enc, bi) | 0;\r\n                poly[i] = BigNatModule_FFT_Fp_ofInt32(pi);\r\n                i_mut = (i + 1);\r\n                bi_mut = (bi + enc.bigL);\r\n                continue encoder;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    encoder(0, 0);\r\n    return poly;\r\n}\r\n\r\nexport function BigNatModule_decodeResultBits(enc, poly) {\r\n    let n = 0;\r\n    for (let i = 0; i <= (poly.length - 1); i++) {\r\n        if (poly[i] !== BigNatModule_FFT_mzero) {\r\n            n = (i | 0);\r\n        }\r\n    }\r\n    return (((BigNatModule_FFT_maxBitsInsideFp + (enc.bigL * n)) + 1) + 1) | 0;\r\n}\r\n\r\nexport function BigNatModule_decodePoly(enc, poly) {\r\n    const rbound = ((~(~(BigNatModule_decodeResultBits(enc, poly) / BigNatModule_baseBits))) + 1) | 0;\r\n    const r = BigNatModule_createN(rbound);\r\n    const evaluate = (i_mut, j_mut, d_mut) => {\r\n        evaluate:\r\n        while (true) {\r\n            const i = i_mut, j = j_mut, d = d_mut;\r\n            if (i === enc.bigK) {\r\n            }\r\n            else {\r\n                if (j >= rbound) {\r\n                }\r\n                else {\r\n                    BigNatModule_contributeArr(r.digits, j, op_Multiply(fromInteger(BigNatModule_FFT_Fp_toInt(poly[i]), false, 2), BigNatModule_twopowersI64[d]));\r\n                }\r\n                const d_1 = (d + enc.bigL) | 0;\r\n                const patternInput = (d_1 >= BigNatModule_baseBits) ? [j + 1, d_1 - BigNatModule_baseBits] : [j, d_1];\r\n                i_mut = (i + 1);\r\n                j_mut = patternInput[0];\r\n                d_mut = patternInput[1];\r\n                continue evaluate;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    evaluate(0, 0, 0);\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_quickMulUsingFft(u, v) {\r\n    const enc = BigNatModule_encodingGivenResultBits(BigNatModule_bits(u) + BigNatModule_bits(v));\r\n    return BigNatModule_normN(BigNatModule_decodePoly(enc, BigNatModule_FFT_computeFftPaddedPolynomialProduct(enc.bigK, enc.k, BigNatModule_encodePoly(enc, u), BigNatModule_encodePoly(enc, v))));\r\n}\r\n\r\nexport const BigNatModule_minDigitsKaratsuba = 16;\r\n\r\nexport function BigNatModule_recMulKaratsuba(mul, p, q) {\r\n    const bmax = BigNatModule_maxInt(p.bound, q.bound) | 0;\r\n    if (bmax > BigNatModule_minDigitsKaratsuba) {\r\n        const k = (~(~(bmax / 2))) | 0;\r\n        const a0 = BigNatModule_restrictTo(k, p);\r\n        const a1 = BigNatModule_shiftDown(k, p);\r\n        const b0 = BigNatModule_restrictTo(k, q);\r\n        const b1 = BigNatModule_shiftDown(k, q);\r\n        const q0 = mul(a0, b0);\r\n        const q1 = mul(BigNatModule_add(a0, a1), BigNatModule_add(b0, b1));\r\n        const q2 = mul(a1, b1);\r\n        return BigNatModule_add(q0, BigNatModule_shiftUp(k, BigNatModule_add(BigNatModule_sub(q1, BigNatModule_add(q0, q2)), BigNatModule_shiftUp(k, q2))));\r\n    }\r\n    else {\r\n        return BigNatModule_mulSchoolBook(p, q);\r\n    }\r\n}\r\n\r\nexport function BigNatModule_mulKaratsuba(x, y) {\r\n    return BigNatModule_recMulKaratsuba((x_1, y_1) => BigNatModule_mulKaratsuba(x_1, y_1), x, y);\r\n}\r\n\r\nexport const BigNatModule_productDigitsUpperSchoolBook = ~(~(64000 / BigNatModule_baseBits));\r\n\r\nexport const BigNatModule_singleDigitForceSchoolBook = ~(~(32000 / BigNatModule_baseBits));\r\n\r\nexport const BigNatModule_productDigitsUpperFft = ~(~(BigNatModule_table[0].bigN / BigNatModule_baseBits));\r\n\r\nexport function BigNatModule_mul(p, q) {\r\n    return BigNatModule_mulSchoolBook(p, q);\r\n}\r\n\r\nexport function BigNatModule_scaleSubInPlace(x, f, a, n) {\r\n    const patternInput = [x.digits, BigNatModule_degree(x)];\r\n    const x_1 = patternInput[0];\r\n    const patternInput_1 = [a.digits, BigNatModule_degree(a)];\r\n    const ad = patternInput_1[1] | 0;\r\n    const a_1 = patternInput_1[0];\r\n    const f_1 = fromInteger(f, false, 2);\r\n    let j = 0;\r\n    let z = op_Multiply(f_1, fromInteger(a_1[0], false, 2));\r\n    while ((compare(z, fromBits(0, 0, false)) > 0) ? true : (j < ad)) {\r\n        if (j > patternInput[1]) {\r\n            throw (new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\"));\r\n        }\r\n        let zLo = ~(~toInt(op_BitwiseAnd(z, BigNatModule_baseMaski64)));\r\n        let zHi = op_Division(z, BigNatModule_baseNi64);\r\n        if (zLo <= x_1[j + n]) {\r\n            x_1[j + n] = ((x_1[j + n] - zLo) | 0);\r\n        }\r\n        else {\r\n            x_1[j + n] = ((x_1[j + n] + (BigNatModule_baseN - zLo)) | 0);\r\n            zHi = op_Addition(zHi, fromBits(1, 0, false));\r\n        }\r\n        if (j < ad) {\r\n            z = op_Addition(zHi, op_Multiply(f_1, fromInteger(a_1[j + 1], false, 2)));\r\n        }\r\n        else {\r\n            z = zHi;\r\n        }\r\n        j = ((j + 1) | 0);\r\n    }\r\n    BigNatModule_normN(x);\r\n}\r\n\r\nexport function BigNatModule_scaleSub(x, f, a, n) {\r\n    const freshx = BigNatModule_add(x, BigNatModule_zero);\r\n    BigNatModule_scaleSubInPlace(freshx, f, a, n);\r\n    return BigNatModule_normN(freshx);\r\n}\r\n\r\nexport function BigNatModule_scaleAddInPlace(x, f, a, n) {\r\n    const patternInput = [x.digits, BigNatModule_degree(x)];\r\n    const x_1 = patternInput[0];\r\n    const patternInput_1 = [a.digits, BigNatModule_degree(a)];\r\n    const ad = patternInput_1[1] | 0;\r\n    const a_1 = patternInput_1[0];\r\n    const f_1 = fromInteger(f, false, 2);\r\n    let j = 0;\r\n    let z = op_Multiply(f_1, fromInteger(a_1[0], false, 2));\r\n    while ((compare(z, fromBits(0, 0, false)) > 0) ? true : (j < ad)) {\r\n        if (j > patternInput[1]) {\r\n            throw (new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\"));\r\n        }\r\n        let zLo = ~(~toInt(op_BitwiseAnd(z, BigNatModule_baseMaski64)));\r\n        let zHi = op_Division(z, BigNatModule_baseNi64);\r\n        if (zLo < (BigNatModule_baseN - x_1[j + n])) {\r\n            x_1[j + n] = ((x_1[j + n] + zLo) | 0);\r\n        }\r\n        else {\r\n            x_1[j + n] = ((zLo - (BigNatModule_baseN - x_1[j + n])) | 0);\r\n            zHi = op_Addition(zHi, fromBits(1, 0, false));\r\n        }\r\n        if (j < ad) {\r\n            z = op_Addition(zHi, op_Multiply(f_1, fromInteger(a_1[j + 1], false, 2)));\r\n        }\r\n        else {\r\n            z = zHi;\r\n        }\r\n        j = ((j + 1) | 0);\r\n    }\r\n    BigNatModule_normN(x);\r\n}\r\n\r\nexport function BigNatModule_scaleAdd(x, f, a, n) {\r\n    const freshx = BigNatModule_add(x, BigNatModule_zero);\r\n    BigNatModule_scaleAddInPlace(freshx, f, a, n);\r\n    return BigNatModule_normN(freshx);\r\n}\r\n\r\nexport function BigNatModule_removeFactor(x, a, n) {\r\n    const patternInput = [BigNatModule_degree(a), BigNatModule_degree(x)];\r\n    const degx = patternInput[1] | 0;\r\n    const dega = patternInput[0] | 0;\r\n    if (degx < (dega + n)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        const patternInput_1 = [a.digits, x.digits];\r\n        const xa = patternInput_1[1];\r\n        const aa = patternInput_1[0];\r\n        const f = ((dega === 0) ? ((degx === n) ? (~(~(xa[n] / aa[0]))) : (~(~toInt(op_Division(op_Addition(op_Multiply(fromInteger(xa[degx], false, 2), BigNatModule_baseNi64), fromInteger(xa[degx - 1], false, 2)), fromInteger(aa[0], false, 2)))))) : ((degx === (dega + n)) ? (~(~(xa[degx] / (aa[dega] + 1)))) : (~(~toInt(op_Division(op_Addition(op_Multiply(fromInteger(xa[degx], false, 2), BigNatModule_baseNi64), fromInteger(xa[degx - 1], false, 2)), op_Addition(fromInteger(aa[dega], false, 2), fromBits(1, 0, false)))))))) | 0;\r\n        if (f === 0) {\r\n            if (BigNatModule_shiftCompare(a, n, x, 0) !== 1) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        }\r\n        else {\r\n            return f | 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigNatModule_divmod(b, a) {\r\n    if (BigNatModule_isZero(a)) {\r\n        throw (new Error());\r\n    }\r\n    else if (BigNatModule_degree(b) < BigNatModule_degree(a)) {\r\n        return [BigNatModule_zero, b];\r\n    }\r\n    else {\r\n        const x = BigNatModule_copyN(b);\r\n        const d = BigNatModule_createN(((BigNatModule_degree(b) - BigNatModule_degree(a)) + 1) + 1);\r\n        let p = BigNatModule_degree(b);\r\n        const m = BigNatModule_degree(a) | 0;\r\n        let n = p - m;\r\n        const Invariant = (tupledArg) => {\r\n        };\r\n        let finished = false;\r\n        while (!finished) {\r\n            Invariant([d, x, n, p]);\r\n            const f = BigNatModule_removeFactor(x, a, n) | 0;\r\n            if (f > 0) {\r\n                BigNatModule_scaleSubInPlace(x, f, a, n);\r\n                BigNatModule_scaleAddInPlace(d, f, BigNatModule_one, n);\r\n                Invariant([d, x, n, p]);\r\n            }\r\n            else {\r\n                finished = ((f === 0) && (n === 0));\r\n                if (!finished) {\r\n                    if (p === (m + n)) {\r\n                        Invariant([d, x, n - 1, p]);\r\n                        n = ((n - 1) | 0);\r\n                    }\r\n                    else {\r\n                        Invariant([d, x, n - 1, p - 1]);\r\n                        n = ((n - 1) | 0);\r\n                        p = ((p - 1) | 0);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return [BigNatModule_normN(d), BigNatModule_normN(x)];\r\n    }\r\n}\r\n\r\nexport function BigNatModule_div(b, a) {\r\n    return BigNatModule_divmod(b, a)[0];\r\n}\r\n\r\nexport function BigNatModule_rem(b, a) {\r\n    return BigNatModule_divmod(b, a)[1];\r\n}\r\n\r\nexport function BigNatModule_bitAnd(a, b) {\r\n    const r = BigNatModule_createN(BigNatModule_minInt(a.bound, b.bound));\r\n    for (let i = 0; i <= (r.bound - 1); i++) {\r\n        r.digits[i] = ((a.digits[i] & b.digits[i]) | 0);\r\n    }\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_bitOr(a, b) {\r\n    const r = BigNatModule_createN(BigNatModule_maxInt(a.bound, b.bound));\r\n    for (let i = 0; i <= (a.bound - 1); i++) {\r\n        r.digits[i] = ((r.digits[i] | a.digits[i]) | 0);\r\n    }\r\n    for (let i_1 = 0; i_1 <= (b.bound - 1); i_1++) {\r\n        r.digits[i_1] = ((r.digits[i_1] | b.digits[i_1]) | 0);\r\n    }\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_bitXor(a, b) {\r\n    const r = BigNatModule_createN(BigNatModule_maxInt(a.bound, b.bound));\r\n    for (let i = 0; i <= (a.bound - 1); i++) {\r\n        r.digits[i] = ((r.digits[i] ^ a.digits[i]) | 0);\r\n    }\r\n    for (let i_1 = 0; i_1 <= (b.bound - 1); i_1++) {\r\n        r.digits[i_1] = ((r.digits[i_1] ^ b.digits[i_1]) | 0);\r\n    }\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_hcf(a, b) {\r\n    const hcfloop = (a_1_mut, b_1_mut) => {\r\n        hcfloop:\r\n        while (true) {\r\n            const a_1 = a_1_mut, b_1 = b_1_mut;\r\n            if (BigNatModule_equal(BigNatModule_zero, a_1)) {\r\n                return b_1;\r\n            }\r\n            else {\r\n                a_1_mut = BigNatModule_divmod(b_1, a_1)[1];\r\n                b_1_mut = a_1;\r\n                continue hcfloop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    if (BigNatModule_lt(a, b)) {\r\n        return hcfloop(a, b);\r\n    }\r\n    else {\r\n        return hcfloop(b, a);\r\n    }\r\n}\r\n\r\nexport const BigNatModule_two = BigNatModule_embed(2);\r\n\r\nexport function BigNatModule_powi(x, n) {\r\n    const power = (acc_mut, x_1_mut, n_1_mut) => {\r\n        power:\r\n        while (true) {\r\n            const acc = acc_mut, x_1 = x_1_mut, n_1 = n_1_mut;\r\n            if (n_1 === 0) {\r\n                return acc;\r\n            }\r\n            else if ((n_1 % 2) === 0) {\r\n                acc_mut = acc;\r\n                x_1_mut = BigNatModule_mul(x_1, x_1);\r\n                n_1_mut = (~(~(n_1 / 2)));\r\n                continue power;\r\n            }\r\n            else {\r\n                acc_mut = BigNatModule_mul(x_1, acc);\r\n                x_1_mut = BigNatModule_mul(x_1, x_1);\r\n                n_1_mut = (~(~(n_1 / 2)));\r\n                continue power;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return power(BigNatModule_one, x, n);\r\n}\r\n\r\nexport function BigNatModule_pow(x, n) {\r\n    const power = (acc_mut, x_1_mut, n_1_mut) => {\r\n        power:\r\n        while (true) {\r\n            const acc = acc_mut, x_1 = x_1_mut, n_1 = n_1_mut;\r\n            if (BigNatModule_isZero(n_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                const patternInput = BigNatModule_divmod(n_1, BigNatModule_two);\r\n                const ndiv2 = patternInput[0];\r\n                if (BigNatModule_isZero(patternInput[1])) {\r\n                    acc_mut = acc;\r\n                    x_1_mut = BigNatModule_mul(x_1, x_1);\r\n                    n_1_mut = ndiv2;\r\n                    continue power;\r\n                }\r\n                else {\r\n                    acc_mut = BigNatModule_mul(x_1, acc);\r\n                    x_1_mut = BigNatModule_mul(x_1, x_1);\r\n                    n_1_mut = ndiv2;\r\n                    continue power;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return power(BigNatModule_one, x, n);\r\n}\r\n\r\nexport function BigNatModule_toFloat(n) {\r\n    const evalFloat = (acc_mut, k_mut, i_mut) => {\r\n        evalFloat:\r\n        while (true) {\r\n            const acc = acc_mut, k = k_mut, i = i_mut;\r\n            if (i === n.bound) {\r\n                return acc;\r\n            }\r\n            else {\r\n                acc_mut = (acc + (k * n.digits[i]));\r\n                k_mut = (k * BigNatModule_baseN);\r\n                i_mut = (i + 1);\r\n                continue evalFloat;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return evalFloat(0, 1, 0);\r\n}\r\n\r\nexport function BigNatModule_ofInt32(n) {\r\n    return BigNatModule_embed(n);\r\n}\r\n\r\nexport function BigNatModule_ofInt64(n) {\r\n    return BigNatModule_embed64(n);\r\n}\r\n\r\nexport function BigNatModule_toUInt32(n) {\r\n    const matchValue = n.bound | 0;\r\n    switch (matchValue) {\r\n        case 0: {\r\n            return 0;\r\n        }\r\n        case 1: {\r\n            const value = n.digits[0] | 0;\r\n            return value >>> 0;\r\n        }\r\n        case 2: {\r\n            const patternInput = [n.digits[0], n.digits[1]];\r\n            const xB = patternInput[1] | 0;\r\n            if (xB > BigNatModule_baseMask32B) {\r\n                throw (new Error());\r\n            }\r\n            return ((patternInput[0] & BigNatModule_baseMask32A) >>> 0) + ((((xB & BigNatModule_baseMask32B) >>> 0) << BigNatModule_baseShift32B) >>> 0);\r\n        }\r\n        default: {\r\n            throw (new Error());\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigNatModule_toUInt64(n) {\r\n    const matchValue = n.bound | 0;\r\n    switch (matchValue) {\r\n        case 0: {\r\n            return fromBits(0, 0, true);\r\n        }\r\n        case 1: {\r\n            return fromInteger(n.digits[0], true, 2);\r\n        }\r\n        case 2: {\r\n            const patternInput = [n.digits[0], n.digits[1]];\r\n            return op_Addition(fromInteger(patternInput[0] & BigNatModule_baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput[1] & BigNatModule_baseMask64B, true, 2), BigNatModule_baseShift64B));\r\n        }\r\n        case 3: {\r\n            const patternInput_1 = [n.digits[0], n.digits[1], n.digits[2]];\r\n            const xC = patternInput_1[2] | 0;\r\n            if (xC > BigNatModule_baseMask64C) {\r\n                throw (new Error());\r\n            }\r\n            return op_Addition(op_Addition(fromInteger(patternInput_1[0] & BigNatModule_baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput_1[1] & BigNatModule_baseMask64B, true, 2), BigNatModule_baseShift64B)), op_LeftShift(fromInteger(xC & BigNatModule_baseMask64C, true, 2), BigNatModule_baseShift64C));\r\n        }\r\n        default: {\r\n            throw (new Error());\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigNatModule_toString(n) {\r\n    const degn = BigNatModule_degree(n) | 0;\r\n    const route = (prior_mut, k_mut, ten2k_mut) => {\r\n        route:\r\n        while (true) {\r\n            const prior = prior_mut, k = k_mut, ten2k = ten2k_mut;\r\n            if (BigNatModule_degree(ten2k) > degn) {\r\n                return cons([k, ten2k], prior);\r\n            }\r\n            else {\r\n                prior_mut = cons([k, ten2k], prior);\r\n                k_mut = (k + 1);\r\n                ten2k_mut = BigNatModule_mul(ten2k, ten2k);\r\n                continue route;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const collect = (isLeading_mut, digits_mut, n_1_mut, _arg1_mut) => {\r\n        collect:\r\n        while (true) {\r\n            const isLeading = isLeading_mut, digits = digits_mut, n_1 = n_1_mut, _arg1 = _arg1_mut;\r\n            if (!isEmpty(_arg1)) {\r\n                const prior_1 = tail(_arg1);\r\n                const patternInput = BigNatModule_divmod(n_1, head(_arg1)[1]);\r\n                const nL = patternInput[1];\r\n                const nH = patternInput[0];\r\n                if (isLeading && BigNatModule_isZero(nH)) {\r\n                    isLeading_mut = isLeading;\r\n                    digits_mut = digits;\r\n                    n_1_mut = nL;\r\n                    _arg1_mut = prior_1;\r\n                    continue collect;\r\n                }\r\n                else {\r\n                    isLeading_mut = isLeading;\r\n                    digits_mut = collect(false, digits, nL, prior_1);\r\n                    n_1_mut = nH;\r\n                    _arg1_mut = prior_1;\r\n                    continue collect;\r\n                }\r\n            }\r\n            else {\r\n                const n_2 = BigNatModule_eval32(n_1) | 0;\r\n                if (isLeading && (n_2 === 0)) {\r\n                    return digits;\r\n                }\r\n                else {\r\n                    return cons(int32ToString(n_2), digits);\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const digits_4 = collect(true, empty(), n, route(empty(), 0, BigNatModule_embed(10)));\r\n    if (isEmpty(digits_4)) {\r\n        return \"0\";\r\n    }\r\n    else {\r\n        return join(\"\", toArray(digits_4));\r\n    }\r\n}\r\n\r\nexport function BigNatModule_ofString(str) {\r\n    const len = str.length | 0;\r\n    if (isNullOrEmpty(str)) {\r\n        throw (new Error(\"empty string\\\\nParameter name: str\"));\r\n    }\r\n    const ten = BigNatModule_embed(10);\r\n    const build = (acc_mut, i_mut) => {\r\n        build:\r\n        while (true) {\r\n            const acc = acc_mut, i = i_mut;\r\n            if (i === len) {\r\n                return acc;\r\n            }\r\n            else {\r\n                const d = (str[i].charCodeAt(0) - 48) | 0;\r\n                if ((0 <= d) && (d <= 9)) {\r\n                    acc_mut = BigNatModule_add(BigNatModule_mul(ten, acc), BigNatModule_embed(d));\r\n                    i_mut = (i + 1);\r\n                    continue build;\r\n                }\r\n                else {\r\n                    throw (new Error());\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return build(BigNatModule_embed(0), 0);\r\n}\r\n\r\nexport function BigNatModule_isSmall(n) {\r\n    return n.bound <= 1;\r\n}\r\n\r\nexport function BigNatModule_getSmall(n) {\r\n    const z = n;\r\n    const i = 0;\r\n    if (i < z.bound) {\r\n        return z.digits[i] | 0;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_factorial(n) {\r\n    const productR = (a, b) => {\r\n        if (BigNatModule_equal(a, b)) {\r\n            return a;\r\n        }\r\n        else {\r\n            const m = BigNatModule_div(BigNatModule_add(a, b), BigNatModule_ofInt32(2));\r\n            return BigNatModule_mul(productR(a, m), productR(BigNatModule_add(m, BigNatModule_one), b));\r\n        }\r\n    };\r\n    return productR(BigNatModule_one, n);\r\n}\r\n\r\n","import { BigNatModule_factorial, BigNatModule_ofString, BigNatModule_toFloat, BigNatModule_toUInt64, BigNatModule_toUInt32, BigNatModule_pow, BigNatModule_two, BigNatModule_rem, BigNatModule_lte, BigNatModule_hcf, BigNatModule_bitXor, BigNatModule_bitOr, BigNatModule_bitAnd, BigNatModule_divmod, BigNatModule_mul, BigNatModule_isOne, BigNatModule_sub, BigNatModule_gte, BigNatModule_scale, BigNatModule_one, BigNatModule_add, BigNatModule_ofInt64, BigNatModule_hash, BigNatModule_gt, BigNatModule_lt, BigNatModule_equal, BigNatModule_getSmall, BigNatModule_isSmall, BigNatModule_ofInt32, BigNatModule_toString, BigNatModule_isZero } from \"./n.js\";\r\nimport { Record, toString } from \"../Types.js\";\r\nimport { class_type } from \"../Reflection.js\";\r\nimport { initialize } from \"../Array.js\";\r\nimport { op_Addition, op_Multiply, fromValue, equals, fromBits, compare, fromInteger, op_UnaryNegation } from \"../Long.js\";\r\nimport { op_UnaryNegation_Int32 } from \"../Int32.js\";\r\nimport Decimal from \"../Decimal.js\";\r\n\r\nexport class BigInteger extends Record {\r\n    constructor(signInt, v) {\r\n        super();\r\n        this.signInt = (signInt | 0);\r\n        this.v = v;\r\n    }\r\n    toString() {\r\n        const x = this;\r\n        const matchValue = BigInteger__get_SignInt(x) | 0;\r\n        switch (matchValue) {\r\n            case -1: {\r\n                return BigNatModule_isZero(BigInteger__get_V(x)) ? \"0\" : (\"-\" + BigNatModule_toString(BigInteger__get_V(x)));\r\n            }\r\n            case 0: {\r\n                return \"0\";\r\n            }\r\n            case 1: {\r\n                return BigNatModule_toString(BigInteger__get_V(x));\r\n            }\r\n            default: {\r\n                throw (new Error(\"signs should be +/- 1 or 0\"));\r\n            }\r\n        }\r\n    }\r\n    Equals(obj) {\r\n        const this$ = this;\r\n        return (obj instanceof BigInteger) && BigInteger_op_Equality_56F059C0(this$, obj);\r\n    }\r\n    GetHashCode() {\r\n        const x = this;\r\n        return BigInteger_hash_Z665282C2(x) | 0;\r\n    }\r\n    toJSON(_key) {\r\n        const this$ = this;\r\n        return toString(this$);\r\n    }\r\n    CompareTo(obj) {\r\n        const this$ = this;\r\n        if (obj instanceof BigInteger) {\r\n            return BigInteger_compare_56F059C0(this$, obj) | 0;\r\n        }\r\n        else {\r\n            throw (new Error(\"the objects are not comparable\\\\nParameter name: obj\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger$reflection() {\r\n    return class_type(\"BigInt.BigInteger\", void 0, BigInteger, class_type(\"System.ValueType\"));\r\n}\r\n\r\nexport function BigInteger_$ctor_Z2BE94A1(signInt, v) {\r\n    return new BigInteger(signInt, v);\r\n}\r\n\r\n(() => {\r\n    BigInteger.smallLim = 4096;\r\n    BigInteger.smallPosTab = initialize(BigInteger.smallLim, (n) => BigNatModule_ofInt32(n));\r\n    BigInteger.one = BigInteger_$ctor_Z524259A4(1);\r\n    BigInteger.two = BigInteger_$ctor_Z524259A4(2);\r\n    BigInteger.zero = BigInteger_$ctor_Z524259A4(0);\r\n})();\r\n\r\nexport function BigInteger_nat_Z67CCE57D(n) {\r\n    if (BigNatModule_isSmall(n) && (BigNatModule_getSmall(n) < BigInteger.smallLim)) {\r\n        return BigInteger.smallPosTab[BigNatModule_getSmall(n)];\r\n    }\r\n    else {\r\n        return n;\r\n    }\r\n}\r\n\r\nexport function BigInteger_create_Z2BE94A1(s, n) {\r\n    return BigInteger_$ctor_Z2BE94A1(s, BigInteger_nat_Z67CCE57D(n));\r\n}\r\n\r\nexport function BigInteger_posn_Z67CCE57D(n) {\r\n    return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(n));\r\n}\r\n\r\nexport function BigInteger_negn_Z67CCE57D(n) {\r\n    return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(n));\r\n}\r\n\r\nexport function BigInteger__get_Sign(x) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return x.signInt | 0;\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_SignInt(x) {\r\n    return x.signInt;\r\n}\r\n\r\nexport function BigInteger__get_V(x) {\r\n    return x.v;\r\n}\r\n\r\nexport function BigInteger_op_Equality_56F059C0(x, y) {\r\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n    let pattern_matching_result;\r\n    if (matchValue[0] === -1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 1;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 8;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 3;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 0) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 6;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 4;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 5;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 7;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 9;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return BigNatModule_equal(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        }\r\n        case 1: {\r\n            return BigNatModule_equal(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        }\r\n        case 2: {\r\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\r\n                return BigNatModule_isZero(BigInteger__get_V(y));\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        case 3: {\r\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\r\n                return BigNatModule_isZero(BigInteger__get_V(y));\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        case 4: {\r\n            return true;\r\n        }\r\n        case 5: {\r\n            return BigNatModule_isZero(BigInteger__get_V(y));\r\n        }\r\n        case 6: {\r\n            return BigNatModule_isZero(BigInteger__get_V(y));\r\n        }\r\n        case 7: {\r\n            return BigNatModule_isZero(BigInteger__get_V(x));\r\n        }\r\n        case 8: {\r\n            return BigNatModule_isZero(BigInteger__get_V(x));\r\n        }\r\n        case 9: {\r\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_Inequality_56F059C0(x, y) {\r\n    return !BigInteger_op_Equality_56F059C0(x, y);\r\n}\r\n\r\nexport function BigInteger_op_LessThan_56F059C0(x, y) {\r\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n    let pattern_matching_result;\r\n    if (matchValue[0] === -1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 1;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 8;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 3;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 0) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 6;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 4;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 5;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 7;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 9;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return BigNatModule_lt(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        }\r\n        case 1: {\r\n            return BigNatModule_lt(BigInteger__get_V(y), BigInteger__get_V(x));\r\n        }\r\n        case 2: {\r\n            return false;\r\n        }\r\n        case 3: {\r\n            if (!BigNatModule_isZero(BigInteger__get_V(x))) {\r\n                return true;\r\n            }\r\n            else {\r\n                return !BigNatModule_isZero(BigInteger__get_V(y));\r\n            }\r\n        }\r\n        case 4: {\r\n            return false;\r\n        }\r\n        case 5: {\r\n            return !BigNatModule_isZero(BigInteger__get_V(y));\r\n        }\r\n        case 6: {\r\n            return false;\r\n        }\r\n        case 7: {\r\n            return false;\r\n        }\r\n        case 8: {\r\n            return !BigNatModule_isZero(BigInteger__get_V(x));\r\n        }\r\n        case 9: {\r\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_GreaterThan_56F059C0(x, y) {\r\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n    let pattern_matching_result;\r\n    if (matchValue[0] === -1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 1;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 8;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 3;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 0) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 6;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 4;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 5;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 7;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 9;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return BigNatModule_gt(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        }\r\n        case 1: {\r\n            return BigNatModule_gt(BigInteger__get_V(y), BigInteger__get_V(x));\r\n        }\r\n        case 2: {\r\n            if (!BigNatModule_isZero(BigInteger__get_V(x))) {\r\n                return true;\r\n            }\r\n            else {\r\n                return !BigNatModule_isZero(BigInteger__get_V(y));\r\n            }\r\n        }\r\n        case 3: {\r\n            return false;\r\n        }\r\n        case 4: {\r\n            return false;\r\n        }\r\n        case 5: {\r\n            return false;\r\n        }\r\n        case 6: {\r\n            return !BigNatModule_isZero(BigInteger__get_V(y));\r\n        }\r\n        case 7: {\r\n            return !BigNatModule_isZero(BigInteger__get_V(x));\r\n        }\r\n        case 8: {\r\n            return false;\r\n        }\r\n        case 9: {\r\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_compare_56F059C0(n, nn) {\r\n    if (BigInteger_op_LessThan_56F059C0(n, nn)) {\r\n        return -1;\r\n    }\r\n    else if (BigInteger_op_Equality_56F059C0(n, nn)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nexport function BigInteger_hash_Z665282C2(z) {\r\n    if (BigInteger__get_SignInt(z) === 0) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return (BigInteger__get_SignInt(z) + BigNatModule_hash(BigInteger__get_V(z))) | 0;\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_StructuredDisplayString(x) {\r\n    return toString(x);\r\n}\r\n\r\nexport function BigInteger_$ctor_Z524259A4(n) {\r\n    if (n >= 0) {\r\n        return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt32(n)));\r\n    }\r\n    else if (n === -2147483648) {\r\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(op_UnaryNegation(fromInteger(n, false, 2)))));\r\n    }\r\n    else {\r\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt32(op_UnaryNegation_Int32(n))));\r\n    }\r\n}\r\n\r\nexport function BigInteger_$ctor_Z524259C1(n) {\r\n    if (compare(n, fromBits(0, 0, false)) >= 0) {\r\n        return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(n)));\r\n    }\r\n    else if (equals(n, fromBits(0, 2147483648, false))) {\r\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_add(BigNatModule_ofInt64(fromBits(4294967295, 2147483647, false)), BigNatModule_one)));\r\n    }\r\n    else {\r\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(op_UnaryNegation(n))));\r\n    }\r\n}\r\n\r\nexport function BigInteger_get_One() {\r\n    return BigInteger.one;\r\n}\r\n\r\nexport function BigInteger_get_Two() {\r\n    return BigInteger.two;\r\n}\r\n\r\nexport function BigInteger_get_Zero() {\r\n    return BigInteger.zero;\r\n}\r\n\r\nexport function BigInteger_op_UnaryNegation_Z665282C2(z) {\r\n    const matchValue = BigInteger__get_SignInt(z) | 0;\r\n    if (matchValue === 0) {\r\n        return BigInteger_get_Zero();\r\n    }\r\n    else {\r\n        return BigInteger_create_Z2BE94A1(op_UnaryNegation_Int32(matchValue), BigInteger__get_V(z));\r\n    }\r\n}\r\n\r\nexport function BigInteger_Scale_Z320F31E(k, z) {\r\n    if (BigInteger__get_SignInt(z) === 0) {\r\n        return BigInteger_get_Zero();\r\n    }\r\n    else if (k < 0) {\r\n        return BigInteger_create_Z2BE94A1(op_UnaryNegation_Int32(BigInteger__get_SignInt(z)), BigNatModule_scale(op_UnaryNegation_Int32(k), BigInteger__get_V(z)));\r\n    }\r\n    else {\r\n        return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(z), BigNatModule_scale(k, BigInteger__get_V(z)));\r\n    }\r\n}\r\n\r\nexport function BigInteger_subnn_6A57060(nx, ny) {\r\n    if (BigNatModule_gte(nx, ny)) {\r\n        return BigInteger_posn_Z67CCE57D(BigNatModule_sub(nx, ny));\r\n    }\r\n    else {\r\n        return BigInteger_negn_Z67CCE57D(BigNatModule_sub(ny, nx));\r\n    }\r\n}\r\n\r\nexport function BigInteger_addnn_6A57060(nx, ny) {\r\n    return BigInteger_posn_Z67CCE57D(BigNatModule_add(nx, ny));\r\n}\r\n\r\nexport function BigInteger__get_IsZero(x) {\r\n    if (BigInteger__get_SignInt(x) === 0) {\r\n        return true;\r\n    }\r\n    else {\r\n        return BigNatModule_isZero(BigInteger__get_V(x));\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_IsOne(x) {\r\n    if (BigInteger__get_SignInt(x) === 1) {\r\n        return BigNatModule_isOne(BigInteger__get_V(x));\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_Addition_56F059C0(x, y) {\r\n    if (BigInteger__get_IsZero(y)) {\r\n        return x;\r\n    }\r\n    else if (BigInteger__get_IsZero(x)) {\r\n        return y;\r\n    }\r\n    else {\r\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n        let pattern_matching_result;\r\n        if (matchValue[0] === -1) {\r\n            if (matchValue[1] === -1) {\r\n                pattern_matching_result = 1;\r\n            }\r\n            else if (matchValue[1] === 1) {\r\n                pattern_matching_result = 3;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else if (matchValue[0] === 1) {\r\n            if (matchValue[1] === -1) {\r\n                pattern_matching_result = 2;\r\n            }\r\n            else if (matchValue[1] === 1) {\r\n                pattern_matching_result = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 4;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\r\n            }\r\n            case 1: {\r\n                return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y)));\r\n            }\r\n            case 2: {\r\n                return BigInteger_subnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\r\n            }\r\n            case 3: {\r\n                return BigInteger_subnn_6A57060(BigInteger__get_V(y), BigInteger__get_V(x));\r\n            }\r\n            case 4: {\r\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_Subtraction_56F059C0(x, y) {\r\n    if (BigInteger__get_IsZero(y)) {\r\n        return x;\r\n    }\r\n    else if (BigInteger__get_IsZero(x)) {\r\n        return BigInteger_op_UnaryNegation_Z665282C2(y);\r\n    }\r\n    else {\r\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n        let pattern_matching_result;\r\n        if (matchValue[0] === -1) {\r\n            if (matchValue[1] === -1) {\r\n                pattern_matching_result = 1;\r\n            }\r\n            else if (matchValue[1] === 1) {\r\n                pattern_matching_result = 3;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else if (matchValue[0] === 1) {\r\n            if (matchValue[1] === -1) {\r\n                pattern_matching_result = 2;\r\n            }\r\n            else if (matchValue[1] === 1) {\r\n                pattern_matching_result = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 4;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return BigInteger_subnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\r\n            }\r\n            case 1: {\r\n                return BigInteger_subnn_6A57060(BigInteger__get_V(y), BigInteger__get_V(x));\r\n            }\r\n            case 2: {\r\n                return BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\r\n            }\r\n            case 3: {\r\n                return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y)));\r\n            }\r\n            case 4: {\r\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_Multiply_56F059C0(x, y) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return x;\r\n    }\r\n    else if (BigInteger__get_IsZero(y)) {\r\n        return y;\r\n    }\r\n    else if (BigInteger__get_IsOne(x)) {\r\n        return y;\r\n    }\r\n    else if (BigInteger__get_IsOne(y)) {\r\n        return x;\r\n    }\r\n    else {\r\n        const m = BigNatModule_mul(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(x) * BigInteger__get_SignInt(y), m);\r\n    }\r\n}\r\n\r\nexport function BigInteger_DivRem_56F059C0(x, y) {\r\n    if (BigInteger__get_IsZero(y)) {\r\n        throw (new Error());\r\n    }\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return [BigInteger_get_Zero(), BigInteger_get_Zero()];\r\n    }\r\n    else {\r\n        const patternInput = BigNatModule_divmod(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        const r = patternInput[1];\r\n        const d = patternInput[0];\r\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n        let pattern_matching_result;\r\n        if (matchValue[0] === -1) {\r\n            if (matchValue[1] === -1) {\r\n                pattern_matching_result = 1;\r\n            }\r\n            else if (matchValue[1] === 1) {\r\n                pattern_matching_result = 3;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else if (matchValue[0] === 1) {\r\n            if (matchValue[1] === -1) {\r\n                pattern_matching_result = 2;\r\n            }\r\n            else if (matchValue[1] === 1) {\r\n                pattern_matching_result = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 4;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return [BigInteger_posn_Z67CCE57D(d), BigInteger_posn_Z67CCE57D(r)];\r\n            }\r\n            case 1: {\r\n                return [BigInteger_posn_Z67CCE57D(d), BigInteger_negn_Z67CCE57D(r)];\r\n            }\r\n            case 2: {\r\n                return [BigInteger_negn_Z67CCE57D(d), BigInteger_posn_Z67CCE57D(r)];\r\n            }\r\n            case 3: {\r\n                return [BigInteger_negn_Z67CCE57D(d), BigInteger_negn_Z67CCE57D(r)];\r\n            }\r\n            case 4: {\r\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_Division_56F059C0(x, y) {\r\n    return BigInteger_DivRem_56F059C0(x, y)[0];\r\n}\r\n\r\nexport function BigInteger_op_Modulus_56F059C0(x, y) {\r\n    return BigInteger_DivRem_56F059C0(x, y)[1];\r\n}\r\n\r\nexport function BigInteger_op_RightShift_62E082A2(x, y) {\r\n    return BigInteger_op_Division_56F059C0(x, BigInteger_Pow_62E082A2(BigInteger_get_Two(), y));\r\n}\r\n\r\nexport function BigInteger_op_LeftShift_62E082A2(x, y) {\r\n    return BigInteger_op_Multiply_56F059C0(x, BigInteger_Pow_62E082A2(BigInteger_get_Two(), y));\r\n}\r\n\r\nexport function BigInteger_op_BitwiseAnd_56F059C0(x, y) {\r\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitAnd(BigInteger__get_V(x), BigInteger__get_V(y)));\r\n}\r\n\r\nexport function BigInteger_op_BitwiseOr_56F059C0(x, y) {\r\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitOr(BigInteger__get_V(x), BigInteger__get_V(y)));\r\n}\r\n\r\nexport function BigInteger_op_ExclusiveOr_56F059C0(x, y) {\r\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitXor(BigInteger__get_V(x), BigInteger__get_V(y)));\r\n}\r\n\r\nexport function BigInteger_GreatestCommonDivisor_56F059C0(x, y) {\r\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n    if (matchValue[0] === 0) {\r\n        if (matchValue[1] === 0) {\r\n            return BigInteger_get_Zero();\r\n        }\r\n        else {\r\n            return BigInteger_posn_Z67CCE57D(BigInteger__get_V(y));\r\n        }\r\n    }\r\n    else if (matchValue[1] === 0) {\r\n        return BigInteger_posn_Z67CCE57D(BigInteger__get_V(x));\r\n    }\r\n    else {\r\n        return BigInteger_posn_Z67CCE57D(BigNatModule_hcf(BigInteger__get_V(x), BigInteger__get_V(y)));\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_IsNegative(x) {\r\n    if (BigInteger__get_SignInt(x) === -1) {\r\n        return !BigInteger__get_IsZero(x);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_IsPositive(x) {\r\n    if (BigInteger__get_SignInt(x) === 1) {\r\n        return !BigInteger__get_IsZero(x);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function BigInteger_Abs_Z665282C2(x) {\r\n    if (BigInteger__get_SignInt(x) === -1) {\r\n        return BigInteger_op_UnaryNegation_Z665282C2(x);\r\n    }\r\n    else {\r\n        return x;\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_LessThanOrEqual_56F059C0(x, y) {\r\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n    let pattern_matching_result;\r\n    if (matchValue[0] === -1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 1;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 6;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 3;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 0) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 8;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 4;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 7;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 5;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 9;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return BigNatModule_lte(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        }\r\n        case 1: {\r\n            return BigNatModule_lte(BigInteger__get_V(y), BigInteger__get_V(x));\r\n        }\r\n        case 2: {\r\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\r\n                return BigNatModule_isZero(BigInteger__get_V(y));\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        case 3: {\r\n            return true;\r\n        }\r\n        case 4: {\r\n            return true;\r\n        }\r\n        case 5: {\r\n            return BigNatModule_isZero(BigInteger__get_V(x));\r\n        }\r\n        case 6: {\r\n            return true;\r\n        }\r\n        case 7: {\r\n            return true;\r\n        }\r\n        case 8: {\r\n            return BigNatModule_isZero(BigInteger__get_V(y));\r\n        }\r\n        case 9: {\r\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_GreaterThanOrEqual_56F059C0(x, y) {\r\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n    let pattern_matching_result;\r\n    if (matchValue[0] === -1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 1;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 6;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 3;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 0) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 8;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 4;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 7;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 5;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 9;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return BigNatModule_gte(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        }\r\n        case 1: {\r\n            return BigNatModule_gte(BigInteger__get_V(y), BigInteger__get_V(x));\r\n        }\r\n        case 2: {\r\n            return true;\r\n        }\r\n        case 3: {\r\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\r\n                return BigNatModule_isZero(BigInteger__get_V(y));\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        case 4: {\r\n            return true;\r\n        }\r\n        case 5: {\r\n            return true;\r\n        }\r\n        case 6: {\r\n            return BigNatModule_isZero(BigInteger__get_V(x));\r\n        }\r\n        case 7: {\r\n            return BigNatModule_isZero(BigInteger__get_V(y));\r\n        }\r\n        case 8: {\r\n            return true;\r\n        }\r\n        case 9: {\r\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_Pow_62E082A2(x, y) {\r\n    if (y < 0) {\r\n        throw (new Error(\"y\"));\r\n    }\r\n    const matchValue = [BigInteger__get_IsZero(x), y];\r\n    if (matchValue[0]) {\r\n        if (matchValue[1] === 0) {\r\n            return BigInteger_get_One();\r\n        }\r\n        else {\r\n            return BigInteger_get_Zero();\r\n        }\r\n    }\r\n    else {\r\n        const yval = BigInteger_$ctor_Z524259A4(y);\r\n        return BigInteger_create_Z2BE94A1(BigNatModule_isZero(BigNatModule_rem(BigInteger__get_V(yval), BigNatModule_two)) ? 1 : BigInteger__get_SignInt(x), BigNatModule_pow(BigInteger__get_V(x), BigInteger__get_V(yval)));\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_ToInt32(x) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        const u = BigNatModule_toUInt32(BigInteger__get_V(x));\r\n        if (u <= (2147483647 >>> 0)) {\r\n            return (BigInteger__get_SignInt(x) * (~(~u))) | 0;\r\n        }\r\n        else if ((BigInteger__get_SignInt(x) === -1) && (u === ((2147483647 + 1) >>> 0))) {\r\n            return -2147483648;\r\n        }\r\n        else {\r\n            throw (new Error());\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_ToUInt32(x) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return BigNatModule_toUInt32(BigInteger__get_V(x));\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_ToInt64(x) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return fromBits(0, 0, false);\r\n    }\r\n    else {\r\n        const u = BigNatModule_toUInt64(BigInteger__get_V(x));\r\n        if (compare(u, fromValue(fromBits(4294967295, 2147483647, false), true)) <= 0) {\r\n            return op_Multiply(fromInteger(BigInteger__get_SignInt(x), false, 2), fromValue(u, false));\r\n        }\r\n        else if ((BigInteger__get_SignInt(x) === -1) && equals(u, fromValue(op_Addition(fromBits(4294967295, 2147483647, false), fromBits(1, 0, false)), true))) {\r\n            return fromBits(0, 2147483648, false);\r\n        }\r\n        else {\r\n            throw (new Error());\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_ToUInt64(x) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return fromBits(0, 0, true);\r\n    }\r\n    else {\r\n        return BigNatModule_toUInt64(BigInteger__get_V(x));\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_ToDouble(x) {\r\n    const matchValue = BigInteger__get_SignInt(x) | 0;\r\n    switch (matchValue) {\r\n        case -1: {\r\n            return -BigNatModule_toFloat(BigInteger__get_V(x));\r\n        }\r\n        case 0: {\r\n            return 0;\r\n        }\r\n        case 1: {\r\n            return BigNatModule_toFloat(BigInteger__get_V(x));\r\n        }\r\n        default: {\r\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_ToSByte(x) {\r\n    return (BigInteger__get_ToInt32(x) + 0x80 & 0xFF) - 0x80;\r\n}\r\n\r\nexport function BigInteger__get_ToByte(x) {\r\n    return BigInteger__get_ToUInt32(x) & 0xFF;\r\n}\r\n\r\nexport function BigInteger__get_ToInt16(x) {\r\n    return (BigInteger__get_ToInt32(x) + 0x8000 & 0xFFFF) - 0x8000;\r\n}\r\n\r\nexport function BigInteger__get_ToUInt16(x) {\r\n    return BigInteger__get_ToUInt32(x) & 0xFFFF;\r\n}\r\n\r\nexport function BigInteger__get_ToSingle(x) {\r\n    return BigInteger__get_ToDouble(x);\r\n}\r\n\r\nexport function BigInteger__get_ToDecimal(x) {\r\n    return new Decimal(BigInteger__get_ToDouble(x));\r\n}\r\n\r\nexport function BigInteger_Parse_Z721C83C5(text) {\r\n    if (text == null) {\r\n        throw (new Error(\"text\"));\r\n    }\r\n    const text_1 = text.trim();\r\n    const len = text_1.length | 0;\r\n    if (len === 0) {\r\n        throw (new Error());\r\n    }\r\n    const matchValue = [text_1[0], len];\r\n    if (matchValue[0] === \"+\") {\r\n        if (matchValue[1] === 1) {\r\n            throw (new Error());\r\n        }\r\n        else {\r\n            return BigInteger_posn_Z67CCE57D(BigNatModule_ofString(text_1.slice(1, (len - 1) + 1)));\r\n        }\r\n    }\r\n    else if (matchValue[0] === \"-\") {\r\n        if (matchValue[1] === 1) {\r\n            throw (new Error());\r\n        }\r\n        else {\r\n            return BigInteger_negn_Z67CCE57D(BigNatModule_ofString(text_1.slice(1, (len - 1) + 1)));\r\n        }\r\n    }\r\n    else {\r\n        return BigInteger_posn_Z67CCE57D(BigNatModule_ofString(text_1));\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_IsSmall(x) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return true;\r\n    }\r\n    else {\r\n        return BigNatModule_isSmall(BigInteger__get_V(x));\r\n    }\r\n}\r\n\r\nexport function BigInteger_Factorial_Z665282C2(x) {\r\n    if (BigInteger__get_IsNegative(x)) {\r\n        throw (new Error(\"mustBeNonNegative\\\\nParameter name: x\"));\r\n    }\r\n    if (BigInteger__get_IsPositive(x)) {\r\n        return BigInteger_posn_Z67CCE57D(BigNatModule_factorial(BigInteger__get_V(x)));\r\n    }\r\n    else {\r\n        return BigInteger_get_One();\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_UnaryPlus_Z665282C2(n1) {\r\n    return n1;\r\n}\r\n\r\nexport function BigInteger_FromInt64_Z524259C1(x) {\r\n    return BigInteger_$ctor_Z524259C1(x);\r\n}\r\n\r\nexport function BigInteger_FromInt32_Z524259A4(x) {\r\n    return BigInteger_$ctor_Z524259A4(x);\r\n}\r\n\r\n","import { BigInteger_op_Inequality_56F059C0, BigInteger_op_Equality_56F059C0, BigInteger_op_GreaterThanOrEqual_56F059C0, BigInteger_op_GreaterThan_56F059C0, BigInteger_op_LessThanOrEqual_56F059C0, BigInteger_op_LessThan_56F059C0, BigInteger_op_ExclusiveOr_56F059C0, BigInteger_op_BitwiseOr_56F059C0, BigInteger_op_BitwiseAnd_56F059C0, BigInteger_op_LeftShift_62E082A2, BigInteger_op_RightShift_62E082A2, BigInteger_op_UnaryPlus_Z665282C2, BigInteger_op_UnaryNegation_Z665282C2, BigInteger_op_Modulus_56F059C0, BigInteger_op_Division_56F059C0, BigInteger_op_Multiply_56F059C0, BigInteger_op_Subtraction_56F059C0, BigInteger_op_Addition_56F059C0, BigInteger__get_IsOne, BigInteger__get_IsZero, BigInteger__get_Sign, BigInteger__get_ToDecimal, BigInteger__get_ToDouble, BigInteger__get_ToSingle, BigInteger__get_ToUInt64, BigInteger__get_ToInt64, BigInteger__get_ToUInt32, BigInteger__get_ToInt32, BigInteger__get_ToUInt16, BigInteger__get_ToInt16, BigInteger__get_ToByte, BigInteger__get_ToSByte, BigInteger_$ctor_Z524259A4, BigInteger_$ctor_Z524259C1, BigInteger_get_Two, BigInteger_get_One, BigInteger_get_Zero, BigInteger_Abs_Z665282C2, BigInteger_Pow_62E082A2, BigInteger_GreatestCommonDivisor_56F059C0, BigInteger_DivRem_56F059C0, BigInteger_Parse_Z721C83C5, BigInteger } from \"./BigInt/z.js\";\r\nimport { fromInteger } from \"./Long.js\";\r\nimport { comparePrimitives, min, compare as compare_1, equals as equals_1, safeHash } from \"./Util.js\";\r\nimport { toString as toString_1 } from \"./Types.js\";\r\nimport { fold, empty, ofArrayWithTail, cons, toArray, head, skipWhile } from \"./List.js\";\r\nimport { fill, reverse } from \"./Array.js\";\r\n\r\nexport function isBigInt(x) {\r\n    return x instanceof BigInteger;\r\n}\r\n\r\nexport function tryParse(str, res) {\r\n    try {\r\n        res.contents = BigInteger_Parse_Z721C83C5(str);\r\n        return true;\r\n    }\r\n    catch (matchValue) {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function divRem(x, y, remainder) {\r\n    const patternInput = BigInteger_DivRem_56F059C0(x, y);\r\n    remainder.contents = patternInput[1];\r\n    return patternInput[0];\r\n}\r\n\r\nexport function parse(arg00) {\r\n    return BigInteger_Parse_Z721C83C5(arg00);\r\n}\r\n\r\nexport function greatestCommonDivisor(arg00, arg01) {\r\n    return BigInteger_GreatestCommonDivisor_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function pow(arg00, arg01) {\r\n    return BigInteger_Pow_62E082A2(arg00, arg01);\r\n}\r\n\r\nexport function abs(arg00) {\r\n    return BigInteger_Abs_Z665282C2(arg00);\r\n}\r\n\r\nexport const zero = BigInteger_get_Zero();\r\n\r\nexport const one = BigInteger_get_One();\r\n\r\nexport const two = BigInteger_get_Two();\r\n\r\nexport function fromString(s) {\r\n    return BigInteger_Parse_Z721C83C5(s);\r\n}\r\n\r\nexport function fromZero() {\r\n    return BigInteger_get_Zero();\r\n}\r\n\r\nexport function fromOne() {\r\n    return BigInteger_get_One();\r\n}\r\n\r\nexport function fromInt64(i) {\r\n    return BigInteger_$ctor_Z524259C1(i);\r\n}\r\n\r\nexport function fromInt32(i) {\r\n    if (i > 2147483647) {\r\n        return BigInteger_$ctor_Z524259C1(fromInteger(i, false, 6));\r\n    }\r\n    else {\r\n        return BigInteger_$ctor_Z524259A4(i);\r\n    }\r\n}\r\n\r\nexport function toSByte(x) {\r\n    return BigInteger__get_ToSByte(x);\r\n}\r\n\r\nexport function toByte(x) {\r\n    return BigInteger__get_ToByte(x);\r\n}\r\n\r\nexport function toInt16(x) {\r\n    return BigInteger__get_ToInt16(x);\r\n}\r\n\r\nexport function toUInt16(x) {\r\n    return BigInteger__get_ToUInt16(x);\r\n}\r\n\r\nexport function toInt32(x) {\r\n    return BigInteger__get_ToInt32(x);\r\n}\r\n\r\nexport function toUInt32(x) {\r\n    return BigInteger__get_ToUInt32(x);\r\n}\r\n\r\nexport function toInt64(x) {\r\n    return BigInteger__get_ToInt64(x);\r\n}\r\n\r\nexport function toUInt64(x) {\r\n    return BigInteger__get_ToUInt64(x);\r\n}\r\n\r\nexport function toSingle(x) {\r\n    return BigInteger__get_ToSingle(x);\r\n}\r\n\r\nexport function toDouble(x) {\r\n    return BigInteger__get_ToDouble(x);\r\n}\r\n\r\nexport function toDecimal(x) {\r\n    return BigInteger__get_ToDecimal(x);\r\n}\r\n\r\nexport function sign(x) {\r\n    return BigInteger__get_Sign(x);\r\n}\r\n\r\nexport function isZero(x) {\r\n    return BigInteger__get_IsZero(x);\r\n}\r\n\r\nexport function isOne(x) {\r\n    return BigInteger__get_IsOne(x);\r\n}\r\n\r\nexport function hash(x) {\r\n    return safeHash(x);\r\n}\r\n\r\nexport function compare(x, y) {\r\n    return x.CompareTo(y);\r\n}\r\n\r\nexport function equals(x, y) {\r\n    return equals_1(x, y);\r\n}\r\n\r\nexport function toString(x) {\r\n    return toString_1(x);\r\n}\r\n\r\nexport const get_Zero = BigInteger_get_Zero();\r\n\r\nexport const get_One = BigInteger_get_One();\r\n\r\nexport function op_Addition(arg00, arg01) {\r\n    return BigInteger_op_Addition_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_Subtraction(arg00, arg01) {\r\n    return BigInteger_op_Subtraction_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_Multiply(arg00, arg01) {\r\n    return BigInteger_op_Multiply_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_Division(arg00, arg01) {\r\n    return BigInteger_op_Division_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_Modulus(arg00, arg01) {\r\n    return BigInteger_op_Modulus_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_UnaryNegation(arg00) {\r\n    return BigInteger_op_UnaryNegation_Z665282C2(arg00);\r\n}\r\n\r\nexport function op_UnaryPlus(arg00) {\r\n    return BigInteger_op_UnaryPlus_Z665282C2(arg00);\r\n}\r\n\r\nexport function op_RightShift(arg00, arg01) {\r\n    return BigInteger_op_RightShift_62E082A2(arg00, arg01);\r\n}\r\n\r\nexport function op_LeftShift(arg00, arg01) {\r\n    return BigInteger_op_LeftShift_62E082A2(arg00, arg01);\r\n}\r\n\r\nexport function op_BitwiseAnd(arg00, arg01) {\r\n    return BigInteger_op_BitwiseAnd_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_BitwiseOr(arg00, arg01) {\r\n    return BigInteger_op_BitwiseOr_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_ExclusiveOr(arg00, arg01) {\r\n    return BigInteger_op_ExclusiveOr_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_LessThan(arg00, arg01) {\r\n    return BigInteger_op_LessThan_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_LessThanOrEqual(arg00, arg01) {\r\n    return BigInteger_op_LessThanOrEqual_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_GreaterThan(arg00, arg01) {\r\n    return BigInteger_op_GreaterThan_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_GreaterThanOrEqual(arg00, arg01) {\r\n    return BigInteger_op_GreaterThanOrEqual_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_Equality(arg00, arg01) {\r\n    return BigInteger_op_Equality_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_Inequality(arg00, arg01) {\r\n    return BigInteger_op_Inequality_56F059C0(arg00, arg01);\r\n}\r\n\r\nfunction flipTwosComplement(currByte, lowBitFound) {\r\n    const matchValue = [currByte, lowBitFound];\r\n    if (matchValue[1]) {\r\n        return [(currByte ^ 255) & 255, true];\r\n    }\r\n    else if (matchValue[0] === 0) {\r\n        return [0, false];\r\n    }\r\n    else {\r\n        return [(currByte ^ (254 << (new Int32Array([0, 1, 2, 3, 4, 5, 6, 7])).find((i) => ((currByte & (1 << i)) > 0)))) & 255, true];\r\n    }\r\n}\r\n\r\nexport function toByteArray(value) {\r\n    if (equals_1(value, zero)) {\r\n        return new Uint8Array([0]);\r\n    }\r\n    else {\r\n        const isPositive = compare_1(value, zero) > 0;\r\n        const value_1 = isPositive ? value : BigInteger_op_Multiply_56F059C0(BigInteger_$ctor_Z524259A4(-1), value);\r\n        const mask32 = fromInt64(fromInteger(4294967295, false, 6));\r\n        const loop = (accumBytes_mut, consumeValue_mut, lowBitFound_mut) => {\r\n            let value_6, value_8, value_9, value_10;\r\n            loop:\r\n            while (true) {\r\n                const accumBytes = accumBytes_mut, consumeValue = consumeValue_mut, lowBitFound = lowBitFound_mut;\r\n                if (compare_1(consumeValue, zero) <= 0) {\r\n                    const accumBytes_1 = isPositive ? skipWhile((b) => (b === 0), accumBytes) : skipWhile((b_1) => (b_1 === 255), accumBytes);\r\n                    const isHighBitOne = (head(accumBytes_1) & 128) !== 0;\r\n                    return reverse(toArray((isPositive && isHighBitOne) ? cons(0, accumBytes_1) : (((!isPositive) && (!isHighBitOne)) ? cons(255, accumBytes_1) : accumBytes_1)));\r\n                }\r\n                else {\r\n                    const currValue = toUInt32(BigInteger_op_BitwiseAnd_56F059C0(consumeValue, mask32));\r\n                    if (isPositive) {\r\n                        const b0 = currValue & 0xFF;\r\n                        let b1;\r\n                        const value_4 = currValue >>> 8;\r\n                        b1 = (value_4 & 0xFF);\r\n                        let b2;\r\n                        const value_5 = currValue >>> 16;\r\n                        b2 = (value_5 & 0xFF);\r\n                        accumBytes_mut = ofArrayWithTail([(value_6 = (currValue >>> 24), value_6 & 0xFF), b2, b1, b0], accumBytes);\r\n                        consumeValue_mut = BigInteger_op_RightShift_62E082A2(consumeValue, 32);\r\n                        lowBitFound_mut = false;\r\n                        continue loop;\r\n                    }\r\n                    else {\r\n                        const patternInput = flipTwosComplement(currValue & 0xFF, lowBitFound);\r\n                        const patternInput_1 = flipTwosComplement((value_8 = (currValue >>> 8), value_8 & 0xFF), patternInput[1]);\r\n                        const patternInput_2 = flipTwosComplement((value_9 = (currValue >>> 16), value_9 & 0xFF), patternInput_1[1]);\r\n                        const patternInput_3 = flipTwosComplement((value_10 = (currValue >>> 24), value_10 & 0xFF), patternInput_2[1]);\r\n                        accumBytes_mut = ofArrayWithTail([patternInput_3[0], patternInput_2[0], patternInput_1[0], patternInput[0]], accumBytes);\r\n                        consumeValue_mut = BigInteger_op_RightShift_62E082A2(consumeValue, 32);\r\n                        lowBitFound_mut = patternInput_3[1];\r\n                        continue loop;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(empty(), value_1, false);\r\n    }\r\n}\r\n\r\nexport function fromByteArray(bytes) {\r\n    if (bytes == null) {\r\n        throw (new Error(\"bytes\"));\r\n    }\r\n    if (bytes.length === 0) {\r\n        return zero;\r\n    }\r\n    else {\r\n        const isPositive = (bytes[bytes.length - 1] & 128) === 0;\r\n        const buffer = fill(new Uint8Array(4), 0, 4, 0);\r\n        const loop = (accumUInt32_mut, currIndex_mut, bytesRemaining_mut, lowBitFound_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const accumUInt32 = accumUInt32_mut, currIndex = currIndex_mut, bytesRemaining = bytesRemaining_mut, lowBitFound = lowBitFound_mut;\r\n                if (bytesRemaining === 0) {\r\n                    const value_2 = fold((acc, value) => BigInteger_op_Addition_56F059C0(BigInteger_op_LeftShift_62E082A2(acc, 32), fromInt64(fromInteger(value, false, 6))), zero, accumUInt32);\r\n                    if (isPositive) {\r\n                        return value_2;\r\n                    }\r\n                    else {\r\n                        return BigInteger_op_Multiply_56F059C0(BigInteger_$ctor_Z524259A4(-1), value_2);\r\n                    }\r\n                }\r\n                else {\r\n                    const bytesToProcess = min((x, y) => comparePrimitives(x, y), bytesRemaining, 4) | 0;\r\n                    for (let i_1 = 0; i_1 <= (bytesToProcess - 1); i_1++) {\r\n                        buffer[i_1] = bytes[currIndex + i_1];\r\n                    }\r\n                    if (isPositive) {\r\n                        fill(buffer, bytesToProcess, 4 - bytesToProcess, 0);\r\n                        accumUInt32_mut = cons((((((buffer[0] | ((buffer[1] << 8) >>> 0)) >>> 0) | ((buffer[2] << 16) >>> 0)) >>> 0) | ((buffer[3] << 24) >>> 0)) >>> 0, accumUInt32);\r\n                        currIndex_mut = (currIndex + bytesToProcess);\r\n                        bytesRemaining_mut = (bytesRemaining - bytesToProcess);\r\n                        lowBitFound_mut = false;\r\n                        continue loop;\r\n                    }\r\n                    else {\r\n                        fill(buffer, bytesToProcess, 4 - bytesToProcess, 255);\r\n                        const patternInput = flipTwosComplement(buffer[0], lowBitFound);\r\n                        const patternInput_1 = flipTwosComplement(buffer[1], patternInput[1]);\r\n                        const patternInput_2 = flipTwosComplement(buffer[2], patternInput_1[1]);\r\n                        const patternInput_3 = flipTwosComplement(buffer[3], patternInput_2[1]);\r\n                        accumUInt32_mut = cons((((((patternInput[0] | ((patternInput_1[0] << 8) >>> 0)) >>> 0) | ((patternInput_2[0] << 16) >>> 0)) >>> 0) | ((patternInput_3[0] << 24) >>> 0)) >>> 0, accumUInt32);\r\n                        currIndex_mut = (currIndex + bytesToProcess);\r\n                        bytesRemaining_mut = (bytesRemaining - bytesToProcess);\r\n                        lowBitFound_mut = patternInput_3[1];\r\n                        continue loop;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(empty(), 0, bytes.length, false);\r\n    }\r\n}\r\n\r\n","import { compare } from \"./Util.js\";\r\nimport { unfold, delay } from \"./Seq.js\";\r\nimport { op_Addition, fromZero } from \"./BigInt.js\";\r\nimport { op_Addition as op_Addition_1, fromParts } from \"./Decimal.js\";\r\nimport { op_Addition as op_Addition_2, fromBits } from \"./Long.js\";\r\n\r\nexport function makeRangeStepFunction(step, stop, zero, add) {\r\n    const stepComparedWithZero = compare(step, zero) | 0;\r\n    if (stepComparedWithZero === 0) {\r\n        throw (new Error(\"The step of a range cannot be zero\"));\r\n    }\r\n    const stepGreaterThanZero = stepComparedWithZero > 0;\r\n    return (x) => {\r\n        const comparedWithLast = compare(x, stop) | 0;\r\n        return ((stepGreaterThanZero && (comparedWithLast <= 0)) ? true : ((!stepGreaterThanZero) && (comparedWithLast >= 0))) ? [x, add(x, step)] : (void 0);\r\n    };\r\n}\r\n\r\nexport function integralRangeStep(start, step, stop, zero, add) {\r\n    const stepFn = makeRangeStepFunction(step, stop, zero, add);\r\n    return delay(() => unfold(stepFn, start));\r\n}\r\n\r\nexport function rangeBigInt(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, fromZero(), (x, y) => op_Addition(x, y));\r\n}\r\n\r\nexport function rangeDecimal(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, fromParts(0, 0, 0, false, 0), (x, y) => op_Addition_1(x, y));\r\n}\r\n\r\nexport function rangeDouble(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, 0, (x, y) => (x + y));\r\n}\r\n\r\nexport function rangeInt64(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, fromBits(0, 0, false), (x, y) => op_Addition_2(x, y));\r\n}\r\n\r\nexport function rangeUInt64(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, fromBits(0, 0, true), (x, y) => op_Addition_2(x, y));\r\n}\r\n\r\nexport function rangeChar(start, stop) {\r\n    const intStop = stop.charCodeAt(0) | 0;\r\n    return delay(() => unfold((c) => {\r\n        if (c <= intStop) {\r\n            return [String.fromCharCode(c), c + 1];\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, start.charCodeAt(0)));\r\n}\r\n\r\n","import { toString as toString_1, Union, Record } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Types.js\";\r\nimport { class_type, union_type, record_type, bool_type, int32_type, list_type } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Reflection.js\";\r\nimport { head as head_2, tail, isEmpty, contains, collect as collect_1, mapIndexed, empty as empty_1, item, map, singleton, append, length } from \"../ShiningSword/fable_modules/fable-library.3.6.2/List.js\";\r\nimport { ofList, change, FSharpMap__get_Item, add, tryFind, empty } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Map.js\";\r\nimport { structuralHash, equals, getEnumerator } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Util.js\";\r\nimport { singleton as singleton_1, empty as empty_2, append as append_1, collect, delay, toList } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Seq.js\";\r\nimport { tuple2, $007CLookup$007C_$007C } from \"./Common.fs.js\";\r\nimport { value as value_2 } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Option.js\";\r\nimport { join } from \"../ShiningSword/fable_modules/fable-library.3.6.2/String.js\";\r\nimport { rangeDouble } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Range.js\";\r\n\r\nexport class Choice$1 extends Record {\r\n    constructor(options, numberAllowed, mustBeDistinct, elideFromDisplayAndSummary, autopick) {\r\n        super();\r\n        this.options = options;\r\n        this.numberAllowed = (numberAllowed | 0);\r\n        this.mustBeDistinct = mustBeDistinct;\r\n        this.elideFromDisplayAndSummary = elideFromDisplayAndSummary;\r\n        this.autopick = autopick;\r\n    }\r\n}\r\n\r\nexport function Choice$1$reflection(gen0) {\r\n    return record_type(\"DerivedTraits.Choice`1\", [gen0], Choice$1, () => [[\"options\", list_type(gen0)], [\"numberAllowed\", int32_type], [\"mustBeDistinct\", bool_type], [\"elideFromDisplayAndSummary\", bool_type], [\"autopick\", bool_type]]);\r\n}\r\n\r\nexport function fresh(options) {\r\n    return new Choice$1(options, 1, false, false, false);\r\n}\r\n\r\nexport class DerivationRule$1 extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Rule\"];\r\n    }\r\n}\r\n\r\nexport function DerivationRule$1$reflection(gen0) {\r\n    return union_type(\"DerivedTraits.DerivationRule`1\", [gen0], DerivationRule$1, () => [[[\"key\", gen0], [\"choice\", Choice$1$reflection(gen0)]]]);\r\n}\r\n\r\nexport class Setting$1 extends Record {\r\n    constructor(instance, summary, validated) {\r\n        super();\r\n        this.instance = instance;\r\n        this.summary = summary;\r\n        this.validated = validated;\r\n    }\r\n}\r\n\r\nexport function Setting$1$reflection(gen0) {\r\n    return record_type(\"DerivedTraits.Setting`1\", [gen0], Setting$1, () => [[\"instance\", class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [gen0, class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [int32_type, list_type(int32_type)])])], [\"summary\", class_type(\"Microsoft.FSharp.Collections.FSharpSet`1\", [gen0])], [\"validated\", bool_type]]);\r\n}\r\n\r\nexport function op_EqualsEqualsGreater(trait0, options) {\r\n    return [trait0, fresh(options)];\r\n}\r\n\r\nexport function confer(trait0, options) {\r\n    let inputRecord;\r\n    return [trait0, (inputRecord = fresh(options), new Choice$1(inputRecord.options, length(options), inputRecord.mustBeDistinct, inputRecord.elideFromDisplayAndSummary, true))];\r\n}\r\n\r\nexport function rulesOf(rules) {\r\n    let table_2;\r\n    let derivationRules = empty();\r\n    const enumerator = getEnumerator(rules);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const forLoopVar = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            const key = forLoopVar[0];\r\n            const choice = forLoopVar[1];\r\n            const matchValue = tryFind(key, derivationRules);\r\n            if (matchValue != null) {\r\n                const choices = matchValue;\r\n                derivationRules = ((table_2 = derivationRules, add(key, append(choices, singleton(choice)), table_2)));\r\n            }\r\n            else {\r\n                derivationRules = add(key, singleton(choice), derivationRules);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        enumerator.Dispose();\r\n    }\r\n    return derivationRules;\r\n}\r\n\r\nexport function summarize(f, rules, instance, roots) {\r\n    const recur = (roots_1) => toList(delay(() => collect((root) => {\r\n        const activePatternResult12415 = $007CLookup$007C_$007C(root, rules);\r\n        if (activePatternResult12415 != null) {\r\n            const choices = activePatternResult12415;\r\n            return collect((matchValue) => {\r\n                let activePatternResult12409, activePatternResult12411, decision, matchValue_1;\r\n                const ix = matchValue[0] | 0;\r\n                const choice = matchValue[1];\r\n                const chosenOptions = choice.autopick ? choice.options : ((activePatternResult12409 = $007CLookup$007C_$007C(root, instance), (activePatternResult12409 != null) ? ((activePatternResult12411 = $007CLookup$007C_$007C(ix, activePatternResult12409), (activePatternResult12411 != null) ? ((decision = activePatternResult12411, map((i) => item(i, choice.options), FSharpMap__get_Item(FSharpMap__get_Item(instance, root), ix)))) : empty_1())) : empty_1()));\r\n                return append_1((choice.elideFromDisplayAndSummary === false) ? ((matchValue_1 = f([root, ix, choice, chosenOptions]), (matchValue_1 == null) ? ((empty_2())) : singleton_1(value_2(matchValue_1)))) : empty_2(), delay(() => recur(chosenOptions)));\r\n            }, mapIndexed((x, y) => tuple2(x, y), choices));\r\n        }\r\n        else {\r\n            return empty_2();\r\n        }\r\n    }, roots_1)));\r\n    return recur(roots);\r\n}\r\n\r\nexport function describeChoiceAsText(head, ix, choice, decision) {\r\n    if (length(choice.options) === length(decision)) {\r\n        return `${decision}`;\r\n    }\r\n    else {\r\n        return `${head} can be ${join(\", \", map((x) => {\r\n            let copyOfStruct = x;\r\n            return toString_1(copyOfStruct);\r\n        }, choice.options))}. Current: ${decision}`;\r\n    }\r\n}\r\n\r\nexport function toSetting(toSet, rules, roots, instance) {\r\n    let isValid = true;\r\n    return new Setting$1(instance, toSet(collect_1((x) => x, summarize((tupledArg) => {\r\n        const chosenOptions = tupledArg[3];\r\n        if (tupledArg[2].numberAllowed === length(chosenOptions)) {\r\n            return chosenOptions;\r\n        }\r\n        else {\r\n            isValid = false;\r\n            return void 0;\r\n        }\r\n    }, rules, instance, roots))), isValid);\r\n}\r\n\r\nexport function choose(rules, roots, head, value, instance) {\r\n    const matchValue = summarize((tupledArg) => {\r\n        const choice = tupledArg[2];\r\n        if (equals(head, tupledArg[0]) && contains(value, choice.options, {\r\n            Equals: (x, y) => equals(x, y),\r\n            GetHashCode: (x) => structuralHash(x),\r\n        })) {\r\n            return [head, tupledArg[1], choice];\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, rules, instance, roots);\r\n    let pattern_matching_result, choice_1, head_1, ix_1;\r\n    if (!isEmpty(matchValue)) {\r\n        if (isEmpty(tail(matchValue))) {\r\n            pattern_matching_result = 0;\r\n            choice_1 = head_2(matchValue)[2];\r\n            head_1 = head_2(matchValue)[0];\r\n            ix_1 = head_2(matchValue)[1];\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            const choiceIx = toList(delay(() => collect((i) => (equals(item(i, choice_1.options), value) ? singleton_1(i) : empty_2()), rangeDouble(0, 1, length(choice_1.options) - 1))));\r\n            return change(head_1, (_arg2) => {\r\n                if (_arg2 != null) {\r\n                    return add(ix_1, choiceIx, _arg2);\r\n                }\r\n                else {\r\n                    return ofList(singleton([ix_1, choiceIx]));\r\n                }\r\n            }, instance);\r\n        }\r\n        case 1: {\r\n            return instance;\r\n        }\r\n    }\r\n}\r\n\r\n","import { equals } from \"./Util.js\";\nimport { Union } from \"./Types.js\";\nconst CaseRules = {\n    None: 0,\n    LowerFirst: 1,\n    SnakeCase: 2,\n    SnakeCaseAllCaps: 3,\n    KebabCase: 4,\n};\nfunction dashify(str, separator) {\n    return str.replace(/[a-z]?[A-Z]/g, (m) => m.length === 1\n        ? m.toLowerCase()\n        : m.charAt(0) + separator + m.charAt(1).toLowerCase());\n}\nfunction changeCase(str, caseRule) {\n    switch (caseRule) {\n        case CaseRules.LowerFirst:\n            return str.charAt(0).toLowerCase() + str.slice(1);\n        case CaseRules.SnakeCase:\n            return dashify(str, \"_\");\n        case CaseRules.SnakeCaseAllCaps:\n            return dashify(str, \"_\").toUpperCase();\n        case CaseRules.KebabCase:\n            return dashify(str, \"-\");\n        case CaseRules.None:\n        default:\n            return str;\n    }\n}\nexport function keyValueList(fields, caseRule = CaseRules.None) {\n    const obj = {};\n    const definedCaseRule = caseRule;\n    function fail(kvPair) {\n        throw new Error(\"Cannot infer key and value of \" + String(kvPair));\n    }\n    function assign(key, caseRule, value) {\n        key = changeCase(key, caseRule);\n        obj[key] = value;\n    }\n    for (let kvPair of fields) {\n        let caseRule = CaseRules.None;\n        if (kvPair == null) {\n            fail(kvPair);\n        }\n        // Deflate unions and use the defined case rule\n        if (kvPair instanceof Union) {\n            const name = kvPair.cases()[kvPair.tag];\n            kvPair = kvPair.fields.length === 0 ? name : [name].concat(kvPair.fields);\n            caseRule = definedCaseRule;\n        }\n        if (Array.isArray(kvPair)) {\n            switch (kvPair.length) {\n                case 0:\n                    fail(kvPair);\n                    break;\n                case 1:\n                    assign(kvPair[0], caseRule, true);\n                    break;\n                case 2:\n                    const value = kvPair[1];\n                    assign(kvPair[0], caseRule, value);\n                    break;\n                default:\n                    assign(kvPair[0], caseRule, kvPair.slice(1));\n            }\n        }\n        else if (typeof kvPair === \"string\") {\n            assign(kvPair, caseRule, true);\n        }\n        else {\n            fail(kvPair);\n        }\n    }\n    return obj;\n}\n// TODO: Move these methods to Map and Set modules\nexport function containsValue(v, map) {\n    for (const kv of map) {\n        if (equals(v, kv[1])) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tryGetValue(map, key, defaultValue) {\n    if (map.has(key)) {\n        defaultValue.contents = map.get(key);\n        return true;\n    }\n    return false;\n}\nexport function addToSet(v, set) {\n    if (set.has(v)) {\n        return false;\n    }\n    set.add(v);\n    return true;\n}\nexport function addToDict(dict, k, v) {\n    if (dict.has(k)) {\n        throw new Error(\"An item with the same key has already been added. Key: \" + k);\n    }\n    dict.set(k, v);\n}\nexport function getItemFromDict(map, key) {\n    if (map.has(key)) {\n        return map.get(key);\n    }\n    else {\n        throw new Error(`The given key '${key}' was not present in the dictionary.`);\n    }\n}\n","import { record_type, bool_type, list_type, option_type, class_type } from \"./Reflection.js\";\r\nimport { some, value as value_1 } from \"./Option.js\";\r\nimport { toString, Record } from \"./Types.js\";\r\nimport { FSharpList, fold as fold_2, cons, singleton as singleton_1, empty as empty_1, ofArrayWithTail, tail, head, isEmpty as isEmpty_1 } from \"./List.js\";\r\nimport { fold as fold_1, fill } from \"./Array.js\";\r\nimport { structuralHash, toIterator, getEnumerator, isArrayLike } from \"./Util.js\";\r\nimport { join } from \"./String.js\";\r\nimport { exists as exists_1, cache, forAll as forAll_1, fold as fold_3, reduce, iterate as iterate_1, map as map_1 } from \"./Seq.js\";\r\nimport { HashSet__get_Comparer, HashSet_$ctor_Z6150332D, HashSet } from \"./MutableSet.js\";\r\n\r\nexport class SetTreeLeaf$1 {\r\n    constructor(k) {\r\n        this.k = k;\r\n    }\r\n}\r\n\r\nexport function SetTreeLeaf$1$reflection(gen0) {\r\n    return class_type(\"Set.SetTreeLeaf`1\", [gen0], SetTreeLeaf$1);\r\n}\r\n\r\nexport function SetTreeLeaf$1_$ctor_2B595(k) {\r\n    return new SetTreeLeaf$1(k);\r\n}\r\n\r\nexport function SetTreeLeaf$1__get_Key(_) {\r\n    return _.k;\r\n}\r\n\r\nexport class SetTreeNode$1 extends SetTreeLeaf$1 {\r\n    constructor(v, left, right, h) {\r\n        super(v);\r\n        this.left = left;\r\n        this.right = right;\r\n        this.h = (h | 0);\r\n    }\r\n}\r\n\r\nexport function SetTreeNode$1$reflection(gen0) {\r\n    return class_type(\"Set.SetTreeNode`1\", [gen0], SetTreeNode$1, SetTreeLeaf$1$reflection(gen0));\r\n}\r\n\r\nexport function SetTreeNode$1_$ctor_Z6E7BE5F7(v, left, right, h) {\r\n    return new SetTreeNode$1(v, left, right, h);\r\n}\r\n\r\nexport function SetTreeNode$1__get_Left(_) {\r\n    return _.left;\r\n}\r\n\r\nexport function SetTreeNode$1__get_Right(_) {\r\n    return _.right;\r\n}\r\n\r\nexport function SetTreeNode$1__get_Height(_) {\r\n    return _.h;\r\n}\r\n\r\nexport function SetTreeModule_empty() {\r\n    return void 0;\r\n}\r\n\r\nexport function SetTreeModule_countAux(t_mut, acc_mut) {\r\n    SetTreeModule_countAux:\r\n    while (true) {\r\n        const t = t_mut, acc = acc_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                t_mut = SetTreeNode$1__get_Left(t2);\r\n                acc_mut = SetTreeModule_countAux(SetTreeNode$1__get_Right(t2), acc + 1);\r\n                continue SetTreeModule_countAux;\r\n            }\r\n            else {\r\n                return (acc + 1) | 0;\r\n            }\r\n        }\r\n        else {\r\n            return acc | 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_count(s) {\r\n    return SetTreeModule_countAux(s, 0);\r\n}\r\n\r\nexport function SetTreeModule_mk(l, k, r) {\r\n    let hl;\r\n    const t = l;\r\n    if (t != null) {\r\n        const t2 = t;\r\n        hl = ((t2 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2) : 1);\r\n    }\r\n    else {\r\n        hl = 0;\r\n    }\r\n    let hr;\r\n    const t_1 = r;\r\n    if (t_1 != null) {\r\n        const t2_1 = t_1;\r\n        hr = ((t2_1 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_1) : 1);\r\n    }\r\n    else {\r\n        hr = 0;\r\n    }\r\n    const m = ((hl < hr) ? hr : hl) | 0;\r\n    if (m === 0) {\r\n        return SetTreeLeaf$1_$ctor_2B595(k);\r\n    }\r\n    else {\r\n        return SetTreeNode$1_$ctor_Z6E7BE5F7(k, l, r, m + 1);\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_rebalance(t1, v, t2) {\r\n    let t_2, t2_3, t_3, t2_4;\r\n    let t1h;\r\n    const t = t1;\r\n    if (t != null) {\r\n        const t2_1 = t;\r\n        t1h = ((t2_1 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_1) : 1);\r\n    }\r\n    else {\r\n        t1h = 0;\r\n    }\r\n    let t2h;\r\n    const t_1 = t2;\r\n    if (t_1 != null) {\r\n        const t2_2 = t_1;\r\n        t2h = ((t2_2 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_2) : 1);\r\n    }\r\n    else {\r\n        t2h = 0;\r\n    }\r\n    if (t2h > (t1h + 2)) {\r\n        const matchValue = value_1(t2);\r\n        if (matchValue instanceof SetTreeNode$1) {\r\n            if (((t_2 = SetTreeNode$1__get_Left(matchValue), (t_2 != null) ? ((t2_3 = t_2, (t2_3 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_3) : 1)) : 0)) > (t1h + 1)) {\r\n                const matchValue_1 = value_1(SetTreeNode$1__get_Left(matchValue));\r\n                if (matchValue_1 instanceof SetTreeNode$1) {\r\n                    return SetTreeModule_mk(SetTreeModule_mk(t1, v, SetTreeNode$1__get_Left(matchValue_1)), SetTreeLeaf$1__get_Key(matchValue_1), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_1), SetTreeLeaf$1__get_Key(matchValue), SetTreeNode$1__get_Right(matchValue)));\r\n                }\r\n                else {\r\n                    throw (new Error(\"internal error: Set.rebalance\"));\r\n                }\r\n            }\r\n            else {\r\n                return SetTreeModule_mk(SetTreeModule_mk(t1, v, SetTreeNode$1__get_Left(matchValue)), SetTreeLeaf$1__get_Key(matchValue), SetTreeNode$1__get_Right(matchValue));\r\n            }\r\n        }\r\n        else {\r\n            throw (new Error(\"internal error: Set.rebalance\"));\r\n        }\r\n    }\r\n    else if (t1h > (t2h + 2)) {\r\n        const matchValue_2 = value_1(t1);\r\n        if (matchValue_2 instanceof SetTreeNode$1) {\r\n            if (((t_3 = SetTreeNode$1__get_Right(matchValue_2), (t_3 != null) ? ((t2_4 = t_3, (t2_4 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_4) : 1)) : 0)) > (t2h + 1)) {\r\n                const matchValue_3 = value_1(SetTreeNode$1__get_Right(matchValue_2));\r\n                if (matchValue_3 instanceof SetTreeNode$1) {\r\n                    return SetTreeModule_mk(SetTreeModule_mk(SetTreeNode$1__get_Left(matchValue_2), SetTreeLeaf$1__get_Key(matchValue_2), SetTreeNode$1__get_Left(matchValue_3)), SetTreeLeaf$1__get_Key(matchValue_3), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_3), v, t2));\r\n                }\r\n                else {\r\n                    throw (new Error(\"internal error: Set.rebalance\"));\r\n                }\r\n            }\r\n            else {\r\n                return SetTreeModule_mk(SetTreeNode$1__get_Left(matchValue_2), SetTreeLeaf$1__get_Key(matchValue_2), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_2), v, t2));\r\n            }\r\n        }\r\n        else {\r\n            throw (new Error(\"internal error: Set.rebalance\"));\r\n        }\r\n    }\r\n    else {\r\n        return SetTreeModule_mk(t1, v, t2);\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_add(comparer, k, t) {\r\n    if (t != null) {\r\n        const t2 = t;\r\n        const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\r\n        if (t2 instanceof SetTreeNode$1) {\r\n            if (c < 0) {\r\n                return SetTreeModule_rebalance(SetTreeModule_add(comparer, k, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2));\r\n            }\r\n            else if (c === 0) {\r\n                return t;\r\n            }\r\n            else {\r\n                return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), SetTreeModule_add(comparer, k, SetTreeNode$1__get_Right(t2)));\r\n            }\r\n        }\r\n        else {\r\n            const c_1 = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\r\n            if (c_1 < 0) {\r\n                return SetTreeNode$1_$ctor_Z6E7BE5F7(k, SetTreeModule_empty(), t, 2);\r\n            }\r\n            else if (c_1 === 0) {\r\n                return t;\r\n            }\r\n            else {\r\n                return SetTreeNode$1_$ctor_Z6E7BE5F7(k, t, SetTreeModule_empty(), 2);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        return SetTreeLeaf$1_$ctor_2B595(k);\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_balance(comparer, t1, k, t2) {\r\n    if (t1 != null) {\r\n        const t1$0027 = t1;\r\n        if (t2 != null) {\r\n            const t2$0027 = t2;\r\n            if (t1$0027 instanceof SetTreeNode$1) {\r\n                if (t2$0027 instanceof SetTreeNode$1) {\r\n                    if ((SetTreeNode$1__get_Height(t1$0027) + 2) < SetTreeNode$1__get_Height(t2$0027)) {\r\n                        return SetTreeModule_rebalance(SetTreeModule_balance(comparer, t1, k, SetTreeNode$1__get_Left(t2$0027)), SetTreeLeaf$1__get_Key(t2$0027), SetTreeNode$1__get_Right(t2$0027));\r\n                    }\r\n                    else if ((SetTreeNode$1__get_Height(t2$0027) + 2) < SetTreeNode$1__get_Height(t1$0027)) {\r\n                        return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t1$0027), SetTreeLeaf$1__get_Key(t1$0027), SetTreeModule_balance(comparer, SetTreeNode$1__get_Right(t1$0027), k, t2));\r\n                    }\r\n                    else {\r\n                        return SetTreeModule_mk(t1, k, t2);\r\n                    }\r\n                }\r\n                else {\r\n                    return SetTreeModule_add(comparer, k, SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1));\r\n                }\r\n            }\r\n            else {\r\n                return SetTreeModule_add(comparer, k, SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2));\r\n            }\r\n        }\r\n        else {\r\n            return SetTreeModule_add(comparer, k, t1);\r\n        }\r\n    }\r\n    else {\r\n        return SetTreeModule_add(comparer, k, t2);\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_split(comparer, pivot, t) {\r\n    if (t != null) {\r\n        const t2 = t;\r\n        if (t2 instanceof SetTreeNode$1) {\r\n            const c = comparer.Compare(pivot, SetTreeLeaf$1__get_Key(t2)) | 0;\r\n            if (c < 0) {\r\n                const patternInput = SetTreeModule_split(comparer, pivot, SetTreeNode$1__get_Left(t2));\r\n                return [patternInput[0], patternInput[1], SetTreeModule_balance(comparer, patternInput[2], SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2))];\r\n            }\r\n            else if (c === 0) {\r\n                return [SetTreeNode$1__get_Left(t2), true, SetTreeNode$1__get_Right(t2)];\r\n            }\r\n            else {\r\n                const patternInput_1 = SetTreeModule_split(comparer, pivot, SetTreeNode$1__get_Right(t2));\r\n                return [SetTreeModule_balance(comparer, SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), patternInput_1[0]), patternInput_1[1], patternInput_1[2]];\r\n            }\r\n        }\r\n        else {\r\n            const c_1 = comparer.Compare(SetTreeLeaf$1__get_Key(t2), pivot) | 0;\r\n            if (c_1 < 0) {\r\n                return [t, false, SetTreeModule_empty()];\r\n            }\r\n            else if (c_1 === 0) {\r\n                return [SetTreeModule_empty(), true, SetTreeModule_empty()];\r\n            }\r\n            else {\r\n                return [SetTreeModule_empty(), false, t];\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        return [SetTreeModule_empty(), false, SetTreeModule_empty()];\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_spliceOutSuccessor(t) {\r\n    if (t != null) {\r\n        const t2 = t;\r\n        if (t2 instanceof SetTreeNode$1) {\r\n            if (SetTreeNode$1__get_Left(t2) == null) {\r\n                return [SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2)];\r\n            }\r\n            else {\r\n                const patternInput = SetTreeModule_spliceOutSuccessor(SetTreeNode$1__get_Left(t2));\r\n                return [patternInput[0], SetTreeModule_mk(patternInput[1], SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2))];\r\n            }\r\n        }\r\n        else {\r\n            return [SetTreeLeaf$1__get_Key(t2), SetTreeModule_empty()];\r\n        }\r\n    }\r\n    else {\r\n        throw (new Error(\"internal error: Set.spliceOutSuccessor\"));\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_remove(comparer, k, t) {\r\n    if (t != null) {\r\n        const t2 = t;\r\n        const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\r\n        if (t2 instanceof SetTreeNode$1) {\r\n            if (c < 0) {\r\n                return SetTreeModule_rebalance(SetTreeModule_remove(comparer, k, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2));\r\n            }\r\n            else if (c === 0) {\r\n                if (SetTreeNode$1__get_Left(t2) == null) {\r\n                    return SetTreeNode$1__get_Right(t2);\r\n                }\r\n                else if (SetTreeNode$1__get_Right(t2) == null) {\r\n                    return SetTreeNode$1__get_Left(t2);\r\n                }\r\n                else {\r\n                    const patternInput = SetTreeModule_spliceOutSuccessor(SetTreeNode$1__get_Right(t2));\r\n                    return SetTreeModule_mk(SetTreeNode$1__get_Left(t2), patternInput[0], patternInput[1]);\r\n                }\r\n            }\r\n            else {\r\n                return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), SetTreeModule_remove(comparer, k, SetTreeNode$1__get_Right(t2)));\r\n            }\r\n        }\r\n        else if (c === 0) {\r\n            return SetTreeModule_empty();\r\n        }\r\n        else {\r\n            return t;\r\n        }\r\n    }\r\n    else {\r\n        return t;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_mem(comparer_mut, k_mut, t_mut) {\r\n    SetTreeModule_mem:\r\n    while (true) {\r\n        const comparer = comparer_mut, k = k_mut, t = t_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                if (c < 0) {\r\n                    comparer_mut = comparer;\r\n                    k_mut = k;\r\n                    t_mut = SetTreeNode$1__get_Left(t2);\r\n                    continue SetTreeModule_mem;\r\n                }\r\n                else if (c === 0) {\r\n                    return true;\r\n                }\r\n                else {\r\n                    comparer_mut = comparer;\r\n                    k_mut = k;\r\n                    t_mut = SetTreeNode$1__get_Right(t2);\r\n                    continue SetTreeModule_mem;\r\n                }\r\n            }\r\n            else {\r\n                return c === 0;\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_iter(f_mut, t_mut) {\r\n    SetTreeModule_iter:\r\n    while (true) {\r\n        const f = f_mut, t = t_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                SetTreeModule_iter(f, SetTreeNode$1__get_Left(t2));\r\n                f(SetTreeLeaf$1__get_Key(t2));\r\n                f_mut = f;\r\n                t_mut = SetTreeNode$1__get_Right(t2);\r\n                continue SetTreeModule_iter;\r\n            }\r\n            else {\r\n                f(SetTreeLeaf$1__get_Key(t2));\r\n            }\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_foldBackOpt(f_mut, t_mut, x_mut) {\r\n    SetTreeModule_foldBackOpt:\r\n    while (true) {\r\n        const f = f_mut, t = t_mut, x = x_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                f_mut = f;\r\n                t_mut = SetTreeNode$1__get_Left(t2);\r\n                x_mut = f(SetTreeLeaf$1__get_Key(t2), SetTreeModule_foldBackOpt(f, SetTreeNode$1__get_Right(t2), x));\r\n                continue SetTreeModule_foldBackOpt;\r\n            }\r\n            else {\r\n                return f(SetTreeLeaf$1__get_Key(t2), x);\r\n            }\r\n        }\r\n        else {\r\n            return x;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_foldBack(f, m, x) {\r\n    return SetTreeModule_foldBackOpt(f, m, x);\r\n}\r\n\r\nexport function SetTreeModule_foldOpt(f_mut, x_mut, t_mut) {\r\n    SetTreeModule_foldOpt:\r\n    while (true) {\r\n        const f = f_mut, x = x_mut, t = t_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                f_mut = f;\r\n                x_mut = f(SetTreeModule_foldOpt(f, x, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2));\r\n                t_mut = SetTreeNode$1__get_Right(t2);\r\n                continue SetTreeModule_foldOpt;\r\n            }\r\n            else {\r\n                return f(x, SetTreeLeaf$1__get_Key(t2));\r\n            }\r\n        }\r\n        else {\r\n            return x;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_fold(f, x, m) {\r\n    return SetTreeModule_foldOpt(f, x, m);\r\n}\r\n\r\nexport function SetTreeModule_forall(f_mut, t_mut) {\r\n    SetTreeModule_forall:\r\n    while (true) {\r\n        const f = f_mut, t = t_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                if (f(SetTreeLeaf$1__get_Key(t2)) && SetTreeModule_forall(f, SetTreeNode$1__get_Left(t2))) {\r\n                    f_mut = f;\r\n                    t_mut = SetTreeNode$1__get_Right(t2);\r\n                    continue SetTreeModule_forall;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return f(SetTreeLeaf$1__get_Key(t2));\r\n            }\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_exists(f_mut, t_mut) {\r\n    SetTreeModule_exists:\r\n    while (true) {\r\n        const f = f_mut, t = t_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                if (f(SetTreeLeaf$1__get_Key(t2)) ? true : SetTreeModule_exists(f, SetTreeNode$1__get_Left(t2))) {\r\n                    return true;\r\n                }\r\n                else {\r\n                    f_mut = f;\r\n                    t_mut = SetTreeNode$1__get_Right(t2);\r\n                    continue SetTreeModule_exists;\r\n                }\r\n            }\r\n            else {\r\n                return f(SetTreeLeaf$1__get_Key(t2));\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_subset(comparer, a, b) {\r\n    return SetTreeModule_forall((x) => SetTreeModule_mem(comparer, x, b), a);\r\n}\r\n\r\nexport function SetTreeModule_properSubset(comparer, a, b) {\r\n    if (SetTreeModule_forall((x) => SetTreeModule_mem(comparer, x, b), a)) {\r\n        return SetTreeModule_exists((x_1) => (!SetTreeModule_mem(comparer, x_1, a)), b);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_filterAux(comparer_mut, f_mut, t_mut, acc_mut) {\r\n    SetTreeModule_filterAux:\r\n    while (true) {\r\n        const comparer = comparer_mut, f = f_mut, t = t_mut, acc = acc_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                const acc_1 = f(SetTreeLeaf$1__get_Key(t2)) ? SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc) : acc;\r\n                comparer_mut = comparer;\r\n                f_mut = f;\r\n                t_mut = SetTreeNode$1__get_Left(t2);\r\n                acc_mut = SetTreeModule_filterAux(comparer, f, SetTreeNode$1__get_Right(t2), acc_1);\r\n                continue SetTreeModule_filterAux;\r\n            }\r\n            else if (f(SetTreeLeaf$1__get_Key(t2))) {\r\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc);\r\n            }\r\n            else {\r\n                return acc;\r\n            }\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_filter(comparer, f, s) {\r\n    return SetTreeModule_filterAux(comparer, f, s, SetTreeModule_empty());\r\n}\r\n\r\nexport function SetTreeModule_diffAux(comparer_mut, t_mut, acc_mut) {\r\n    SetTreeModule_diffAux:\r\n    while (true) {\r\n        const comparer = comparer_mut, t = t_mut, acc = acc_mut;\r\n        if (acc == null) {\r\n            return acc;\r\n        }\r\n        else if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                comparer_mut = comparer;\r\n                t_mut = SetTreeNode$1__get_Left(t2);\r\n                acc_mut = SetTreeModule_diffAux(comparer, SetTreeNode$1__get_Right(t2), SetTreeModule_remove(comparer, SetTreeLeaf$1__get_Key(t2), acc));\r\n                continue SetTreeModule_diffAux;\r\n            }\r\n            else {\r\n                return SetTreeModule_remove(comparer, SetTreeLeaf$1__get_Key(t2), acc);\r\n            }\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_diff(comparer, a, b) {\r\n    return SetTreeModule_diffAux(comparer, b, a);\r\n}\r\n\r\nexport function SetTreeModule_union(comparer, t1, t2) {\r\n    if (t1 != null) {\r\n        const t1$0027 = t1;\r\n        if (t2 != null) {\r\n            const t2$0027 = t2;\r\n            if (t1$0027 instanceof SetTreeNode$1) {\r\n                if (t2$0027 instanceof SetTreeNode$1) {\r\n                    if (SetTreeNode$1__get_Height(t1$0027) > SetTreeNode$1__get_Height(t2$0027)) {\r\n                        const patternInput = SetTreeModule_split(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2);\r\n                        return SetTreeModule_balance(comparer, SetTreeModule_union(comparer, SetTreeNode$1__get_Left(t1$0027), patternInput[0]), SetTreeLeaf$1__get_Key(t1$0027), SetTreeModule_union(comparer, SetTreeNode$1__get_Right(t1$0027), patternInput[2]));\r\n                    }\r\n                    else {\r\n                        const patternInput_1 = SetTreeModule_split(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1);\r\n                        return SetTreeModule_balance(comparer, SetTreeModule_union(comparer, SetTreeNode$1__get_Left(t2$0027), patternInput_1[0]), SetTreeLeaf$1__get_Key(t2$0027), SetTreeModule_union(comparer, SetTreeNode$1__get_Right(t2$0027), patternInput_1[2]));\r\n                    }\r\n                }\r\n                else {\r\n                    return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1);\r\n                }\r\n            }\r\n            else {\r\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2);\r\n            }\r\n        }\r\n        else {\r\n            return t1;\r\n        }\r\n    }\r\n    else {\r\n        return t2;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_intersectionAux(comparer_mut, b_mut, t_mut, acc_mut) {\r\n    SetTreeModule_intersectionAux:\r\n    while (true) {\r\n        const comparer = comparer_mut, b = b_mut, t = t_mut, acc = acc_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                const acc_1 = SetTreeModule_intersectionAux(comparer, b, SetTreeNode$1__get_Right(t2), acc);\r\n                const acc_2 = SetTreeModule_mem(comparer, SetTreeLeaf$1__get_Key(t2), b) ? SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc_1) : acc_1;\r\n                comparer_mut = comparer;\r\n                b_mut = b;\r\n                t_mut = SetTreeNode$1__get_Left(t2);\r\n                acc_mut = acc_2;\r\n                continue SetTreeModule_intersectionAux;\r\n            }\r\n            else if (SetTreeModule_mem(comparer, SetTreeLeaf$1__get_Key(t2), b)) {\r\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc);\r\n            }\r\n            else {\r\n                return acc;\r\n            }\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_intersection(comparer, a, b) {\r\n    return SetTreeModule_intersectionAux(comparer, b, a, SetTreeModule_empty());\r\n}\r\n\r\nexport function SetTreeModule_partition1(comparer, f, k, acc1, acc2) {\r\n    if (f(k)) {\r\n        return [SetTreeModule_add(comparer, k, acc1), acc2];\r\n    }\r\n    else {\r\n        return [acc1, SetTreeModule_add(comparer, k, acc2)];\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_partitionAux(comparer_mut, f_mut, t_mut, acc_0_mut, acc_1_mut) {\r\n    SetTreeModule_partitionAux:\r\n    while (true) {\r\n        const comparer = comparer_mut, f = f_mut, t = t_mut, acc_0 = acc_0_mut, acc_1 = acc_1_mut;\r\n        const acc = [acc_0, acc_1];\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                const acc_2 = SetTreeModule_partitionAux(comparer, f, SetTreeNode$1__get_Right(t2), acc[0], acc[1]);\r\n                const acc_3 = SetTreeModule_partition1(comparer, f, SetTreeLeaf$1__get_Key(t2), acc_2[0], acc_2[1]);\r\n                comparer_mut = comparer;\r\n                f_mut = f;\r\n                t_mut = SetTreeNode$1__get_Left(t2);\r\n                acc_0_mut = acc_3[0];\r\n                acc_1_mut = acc_3[1];\r\n                continue SetTreeModule_partitionAux;\r\n            }\r\n            else {\r\n                return SetTreeModule_partition1(comparer, f, SetTreeLeaf$1__get_Key(t2), acc[0], acc[1]);\r\n            }\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_partition(comparer, f, s) {\r\n    return SetTreeModule_partitionAux(comparer, f, s, SetTreeModule_empty(), SetTreeModule_empty());\r\n}\r\n\r\nexport function SetTreeModule_minimumElementAux(t_mut, n_mut) {\r\n    SetTreeModule_minimumElementAux:\r\n    while (true) {\r\n        const t = t_mut, n = n_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                t_mut = SetTreeNode$1__get_Left(t2);\r\n                n_mut = SetTreeLeaf$1__get_Key(t2);\r\n                continue SetTreeModule_minimumElementAux;\r\n            }\r\n            else {\r\n                return SetTreeLeaf$1__get_Key(t2);\r\n            }\r\n        }\r\n        else {\r\n            return n;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_minimumElementOpt(t) {\r\n    if (t != null) {\r\n        const t2 = t;\r\n        if (t2 instanceof SetTreeNode$1) {\r\n            return some(SetTreeModule_minimumElementAux(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2)));\r\n        }\r\n        else {\r\n            return some(SetTreeLeaf$1__get_Key(t2));\r\n        }\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_maximumElementAux(t_mut, n_mut) {\r\n    SetTreeModule_maximumElementAux:\r\n    while (true) {\r\n        const t = t_mut, n = n_mut;\r\n        if (t != null) {\r\n            const t2 = t;\r\n            if (t2 instanceof SetTreeNode$1) {\r\n                t_mut = SetTreeNode$1__get_Right(t2);\r\n                n_mut = SetTreeLeaf$1__get_Key(t2);\r\n                continue SetTreeModule_maximumElementAux;\r\n            }\r\n            else {\r\n                return SetTreeLeaf$1__get_Key(t2);\r\n            }\r\n        }\r\n        else {\r\n            return n;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_maximumElementOpt(t) {\r\n    if (t != null) {\r\n        const t2 = t;\r\n        if (t2 instanceof SetTreeNode$1) {\r\n            return some(SetTreeModule_maximumElementAux(SetTreeNode$1__get_Right(t2), SetTreeLeaf$1__get_Key(t2)));\r\n        }\r\n        else {\r\n            return some(SetTreeLeaf$1__get_Key(t2));\r\n        }\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_minimumElement(s) {\r\n    const matchValue = SetTreeModule_minimumElementOpt(s);\r\n    if (matchValue == null) {\r\n        throw (new Error(\"Set contains no elements\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_maximumElement(s) {\r\n    const matchValue = SetTreeModule_maximumElementOpt(s);\r\n    if (matchValue == null) {\r\n        throw (new Error(\"Set contains no elements\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport class SetTreeModule_SetIterator$1 extends Record {\r\n    constructor(stack, started) {\r\n        super();\r\n        this.stack = stack;\r\n        this.started = started;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_SetIterator$1$reflection(gen0) {\r\n    return record_type(\"Set.SetTreeModule.SetIterator`1\", [gen0], SetTreeModule_SetIterator$1, () => [[\"stack\", list_type(option_type(SetTreeLeaf$1$reflection(gen0)))], [\"started\", bool_type]]);\r\n}\r\n\r\nexport function SetTreeModule_collapseLHS(stack_mut) {\r\n    SetTreeModule_collapseLHS:\r\n    while (true) {\r\n        const stack = stack_mut;\r\n        if (!isEmpty_1(stack)) {\r\n            const x = head(stack);\r\n            const rest = tail(stack);\r\n            if (x != null) {\r\n                const x2 = x;\r\n                if (x2 instanceof SetTreeNode$1) {\r\n                    stack_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2)), SetTreeNode$1__get_Right(x2)], rest);\r\n                    continue SetTreeModule_collapseLHS;\r\n                }\r\n                else {\r\n                    return stack;\r\n                }\r\n            }\r\n            else {\r\n                stack_mut = rest;\r\n                continue SetTreeModule_collapseLHS;\r\n            }\r\n        }\r\n        else {\r\n            return empty_1();\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_mkIterator(s) {\r\n    return new SetTreeModule_SetIterator$1(SetTreeModule_collapseLHS(singleton_1(s)), false);\r\n}\r\n\r\nexport function SetTreeModule_notStarted() {\r\n    throw (new Error(\"Enumeration not started\"));\r\n}\r\n\r\nexport function SetTreeModule_alreadyFinished() {\r\n    throw (new Error(\"Enumeration already started\"));\r\n}\r\n\r\nexport function SetTreeModule_current(i) {\r\n    if (i.started) {\r\n        const matchValue = i.stack;\r\n        if (isEmpty_1(matchValue)) {\r\n            return SetTreeModule_alreadyFinished();\r\n        }\r\n        else if (head(matchValue) != null) {\r\n            const t = head(matchValue);\r\n            return SetTreeLeaf$1__get_Key(t);\r\n        }\r\n        else {\r\n            throw (new Error(\"Please report error: Set iterator, unexpected stack for current\"));\r\n        }\r\n    }\r\n    else {\r\n        return SetTreeModule_notStarted();\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_moveNext(i) {\r\n    if (i.started) {\r\n        const matchValue = i.stack;\r\n        if (!isEmpty_1(matchValue)) {\r\n            if (head(matchValue) != null) {\r\n                const t = head(matchValue);\r\n                if (t instanceof SetTreeNode$1) {\r\n                    throw (new Error(\"Please report error: Set iterator, unexpected stack for moveNext\"));\r\n                }\r\n                else {\r\n                    i.stack = SetTreeModule_collapseLHS(tail(matchValue));\r\n                    return !isEmpty_1(i.stack);\r\n                }\r\n            }\r\n            else {\r\n                throw (new Error(\"Please report error: Set iterator, unexpected stack for moveNext\"));\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        i.started = true;\r\n        return !isEmpty_1(i.stack);\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_mkIEnumerator(s) {\r\n    let i = SetTreeModule_mkIterator(s);\r\n    return {\r\n        [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\r\n            return SetTreeModule_current(i);\r\n        },\r\n        [\"System.Collections.IEnumerator.get_Current\"]() {\r\n            return SetTreeModule_current(i);\r\n        },\r\n        [\"System.Collections.IEnumerator.MoveNext\"]() {\r\n            return SetTreeModule_moveNext(i);\r\n        },\r\n        [\"System.Collections.IEnumerator.Reset\"]() {\r\n            i = SetTreeModule_mkIterator(s);\r\n        },\r\n        Dispose() {\r\n        },\r\n    };\r\n}\r\n\r\nexport function SetTreeModule_compareStacks(comparer_mut, l1_mut, l2_mut) {\r\n    SetTreeModule_compareStacks:\r\n    while (true) {\r\n        const comparer = comparer_mut, l1 = l1_mut, l2 = l2_mut;\r\n        const matchValue = [l1, l2];\r\n        if (!isEmpty_1(matchValue[0])) {\r\n            if (!isEmpty_1(matchValue[1])) {\r\n                if (head(matchValue[1]) != null) {\r\n                    if (head(matchValue[0]) != null) {\r\n                        const x1_3 = head(matchValue[0]);\r\n                        const x2_3 = head(matchValue[1]);\r\n                        if (x1_3 instanceof SetTreeNode$1) {\r\n                            if (SetTreeNode$1__get_Left(x1_3) == null) {\r\n                                if (x2_3 instanceof SetTreeNode$1) {\r\n                                    if (SetTreeNode$1__get_Left(x2_3) == null) {\r\n                                        const c = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\r\n                                        if (c !== 0) {\r\n                                            return c | 0;\r\n                                        }\r\n                                        else {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = cons(SetTreeNode$1__get_Right(x1_3), tail(matchValue[0]));\r\n                                            l2_mut = cons(SetTreeNode$1__get_Right(x2_3), tail(matchValue[1]));\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        const matchValue_3 = [l1, l2];\r\n                                        let pattern_matching_result, t1_6, x1_4, t2_6, x2_4;\r\n                                        if (!isEmpty_1(matchValue_3[0])) {\r\n                                            if (head(matchValue_3[0]) != null) {\r\n                                                pattern_matching_result = 0;\r\n                                                t1_6 = tail(matchValue_3[0]);\r\n                                                x1_4 = head(matchValue_3[0]);\r\n                                            }\r\n                                            else if (!isEmpty_1(matchValue_3[1])) {\r\n                                                if (head(matchValue_3[1]) != null) {\r\n                                                    pattern_matching_result = 1;\r\n                                                    t2_6 = tail(matchValue_3[1]);\r\n                                                    x2_4 = head(matchValue_3[1]);\r\n                                                }\r\n                                                else {\r\n                                                    pattern_matching_result = 2;\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result = 2;\r\n                                            }\r\n                                        }\r\n                                        else if (!isEmpty_1(matchValue_3[1])) {\r\n                                            if (head(matchValue_3[1]) != null) {\r\n                                                pattern_matching_result = 1;\r\n                                                t2_6 = tail(matchValue_3[1]);\r\n                                                x2_4 = head(matchValue_3[1]);\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result = 2;\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result = 2;\r\n                                        }\r\n                                        switch (pattern_matching_result) {\r\n                                            case 0: {\r\n                                                if (x1_4 instanceof SetTreeNode$1) {\r\n                                                    comparer_mut = comparer;\r\n                                                    l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1_4), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_4), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_4), 0)], t1_6);\r\n                                                    l2_mut = l2;\r\n                                                    continue SetTreeModule_compareStacks;\r\n                                                }\r\n                                                else {\r\n                                                    comparer_mut = comparer;\r\n                                                    l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_4))], t1_6);\r\n                                                    l2_mut = l2;\r\n                                                    continue SetTreeModule_compareStacks;\r\n                                                }\r\n                                            }\r\n                                            case 1: {\r\n                                                if (x2_4 instanceof SetTreeNode$1) {\r\n                                                    comparer_mut = comparer;\r\n                                                    l1_mut = l1;\r\n                                                    l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_4), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_4), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_4), 0)], t2_6);\r\n                                                    continue SetTreeModule_compareStacks;\r\n                                                }\r\n                                                else {\r\n                                                    comparer_mut = comparer;\r\n                                                    l1_mut = l1;\r\n                                                    l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_4))], t2_6);\r\n                                                    continue SetTreeModule_compareStacks;\r\n                                                }\r\n                                            }\r\n                                            case 2: {\r\n                                                throw (new Error(\"unexpected state in SetTree.compareStacks\"));\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    const c_1 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\r\n                                    if (c_1 !== 0) {\r\n                                        return c_1 | 0;\r\n                                    }\r\n                                    else {\r\n                                        comparer_mut = comparer;\r\n                                        l1_mut = cons(SetTreeNode$1__get_Right(x1_3), tail(matchValue[0]));\r\n                                        l2_mut = cons(SetTreeModule_empty(), tail(matchValue[1]));\r\n                                        continue SetTreeModule_compareStacks;\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                const matchValue_4 = [l1, l2];\r\n                                let pattern_matching_result_1, t1_7, x1_5, t2_7, x2_5;\r\n                                if (!isEmpty_1(matchValue_4[0])) {\r\n                                    if (head(matchValue_4[0]) != null) {\r\n                                        pattern_matching_result_1 = 0;\r\n                                        t1_7 = tail(matchValue_4[0]);\r\n                                        x1_5 = head(matchValue_4[0]);\r\n                                    }\r\n                                    else if (!isEmpty_1(matchValue_4[1])) {\r\n                                        if (head(matchValue_4[1]) != null) {\r\n                                            pattern_matching_result_1 = 1;\r\n                                            t2_7 = tail(matchValue_4[1]);\r\n                                            x2_5 = head(matchValue_4[1]);\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result_1 = 2;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_1 = 2;\r\n                                    }\r\n                                }\r\n                                else if (!isEmpty_1(matchValue_4[1])) {\r\n                                    if (head(matchValue_4[1]) != null) {\r\n                                        pattern_matching_result_1 = 1;\r\n                                        t2_7 = tail(matchValue_4[1]);\r\n                                        x2_5 = head(matchValue_4[1]);\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_1 = 2;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_1 = 2;\r\n                                }\r\n                                switch (pattern_matching_result_1) {\r\n                                    case 0: {\r\n                                        if (x1_5 instanceof SetTreeNode$1) {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1_5), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_5), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_5), 0)], t1_7);\r\n                                            l2_mut = l2;\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                        else {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_5))], t1_7);\r\n                                            l2_mut = l2;\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                    }\r\n                                    case 1: {\r\n                                        if (x2_5 instanceof SetTreeNode$1) {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = l1;\r\n                                            l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_5), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_5), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_5), 0)], t2_7);\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                        else {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = l1;\r\n                                            l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_5))], t2_7);\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                    }\r\n                                    case 2: {\r\n                                        throw (new Error(\"unexpected state in SetTree.compareStacks\"));\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (x2_3 instanceof SetTreeNode$1) {\r\n                            if (SetTreeNode$1__get_Left(x2_3) == null) {\r\n                                const c_2 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\r\n                                if (c_2 !== 0) {\r\n                                    return c_2 | 0;\r\n                                }\r\n                                else {\r\n                                    comparer_mut = comparer;\r\n                                    l1_mut = cons(SetTreeModule_empty(), tail(matchValue[0]));\r\n                                    l2_mut = cons(SetTreeNode$1__get_Right(x2_3), tail(matchValue[1]));\r\n                                    continue SetTreeModule_compareStacks;\r\n                                }\r\n                            }\r\n                            else {\r\n                                const matchValue_5 = [l1, l2];\r\n                                let pattern_matching_result_2, t1_8, x1_6, t2_8, x2_6;\r\n                                if (!isEmpty_1(matchValue_5[0])) {\r\n                                    if (head(matchValue_5[0]) != null) {\r\n                                        pattern_matching_result_2 = 0;\r\n                                        t1_8 = tail(matchValue_5[0]);\r\n                                        x1_6 = head(matchValue_5[0]);\r\n                                    }\r\n                                    else if (!isEmpty_1(matchValue_5[1])) {\r\n                                        if (head(matchValue_5[1]) != null) {\r\n                                            pattern_matching_result_2 = 1;\r\n                                            t2_8 = tail(matchValue_5[1]);\r\n                                            x2_6 = head(matchValue_5[1]);\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result_2 = 2;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_2 = 2;\r\n                                    }\r\n                                }\r\n                                else if (!isEmpty_1(matchValue_5[1])) {\r\n                                    if (head(matchValue_5[1]) != null) {\r\n                                        pattern_matching_result_2 = 1;\r\n                                        t2_8 = tail(matchValue_5[1]);\r\n                                        x2_6 = head(matchValue_5[1]);\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_2 = 2;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_2 = 2;\r\n                                }\r\n                                switch (pattern_matching_result_2) {\r\n                                    case 0: {\r\n                                        if (x1_6 instanceof SetTreeNode$1) {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1_6), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_6), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_6), 0)], t1_8);\r\n                                            l2_mut = l2;\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                        else {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_6))], t1_8);\r\n                                            l2_mut = l2;\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                    }\r\n                                    case 1: {\r\n                                        if (x2_6 instanceof SetTreeNode$1) {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = l1;\r\n                                            l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_6), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_6), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_6), 0)], t2_8);\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                        else {\r\n                                            comparer_mut = comparer;\r\n                                            l1_mut = l1;\r\n                                            l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_6))], t2_8);\r\n                                            continue SetTreeModule_compareStacks;\r\n                                        }\r\n                                    }\r\n                                    case 2: {\r\n                                        throw (new Error(\"unexpected state in SetTree.compareStacks\"));\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            const c_3 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\r\n                            if (c_3 !== 0) {\r\n                                return c_3 | 0;\r\n                            }\r\n                            else {\r\n                                comparer_mut = comparer;\r\n                                l1_mut = tail(matchValue[0]);\r\n                                l2_mut = tail(matchValue[1]);\r\n                                continue SetTreeModule_compareStacks;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        const x2 = head(matchValue[1]);\r\n                        const matchValue_1 = [l1, l2];\r\n                        let pattern_matching_result_3, t1_2, x1, t2_2, x2_1;\r\n                        if (!isEmpty_1(matchValue_1[0])) {\r\n                            if (head(matchValue_1[0]) != null) {\r\n                                pattern_matching_result_3 = 0;\r\n                                t1_2 = tail(matchValue_1[0]);\r\n                                x1 = head(matchValue_1[0]);\r\n                            }\r\n                            else if (!isEmpty_1(matchValue_1[1])) {\r\n                                if (head(matchValue_1[1]) != null) {\r\n                                    pattern_matching_result_3 = 1;\r\n                                    t2_2 = tail(matchValue_1[1]);\r\n                                    x2_1 = head(matchValue_1[1]);\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_3 = 2;\r\n                                }\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_3 = 2;\r\n                            }\r\n                        }\r\n                        else if (!isEmpty_1(matchValue_1[1])) {\r\n                            if (head(matchValue_1[1]) != null) {\r\n                                pattern_matching_result_3 = 1;\r\n                                t2_2 = tail(matchValue_1[1]);\r\n                                x2_1 = head(matchValue_1[1]);\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_3 = 2;\r\n                            }\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_3 = 2;\r\n                        }\r\n                        switch (pattern_matching_result_3) {\r\n                            case 0: {\r\n                                if (x1 instanceof SetTreeNode$1) {\r\n                                    comparer_mut = comparer;\r\n                                    l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1), 0)], t1_2);\r\n                                    l2_mut = l2;\r\n                                    continue SetTreeModule_compareStacks;\r\n                                }\r\n                                else {\r\n                                    comparer_mut = comparer;\r\n                                    l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1))], t1_2);\r\n                                    l2_mut = l2;\r\n                                    continue SetTreeModule_compareStacks;\r\n                                }\r\n                            }\r\n                            case 1: {\r\n                                if (x2_1 instanceof SetTreeNode$1) {\r\n                                    comparer_mut = comparer;\r\n                                    l1_mut = l1;\r\n                                    l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_1), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_1), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_1), 0)], t2_2);\r\n                                    continue SetTreeModule_compareStacks;\r\n                                }\r\n                                else {\r\n                                    comparer_mut = comparer;\r\n                                    l1_mut = l1;\r\n                                    l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_1))], t2_2);\r\n                                    continue SetTreeModule_compareStacks;\r\n                                }\r\n                            }\r\n                            case 2: {\r\n                                throw (new Error(\"unexpected state in SetTree.compareStacks\"));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else if (head(matchValue[0]) != null) {\r\n                    const x1_1 = head(matchValue[0]);\r\n                    const matchValue_2 = [l1, l2];\r\n                    let pattern_matching_result_4, t1_4, x1_2, t2_4, x2_2;\r\n                    if (!isEmpty_1(matchValue_2[0])) {\r\n                        if (head(matchValue_2[0]) != null) {\r\n                            pattern_matching_result_4 = 0;\r\n                            t1_4 = tail(matchValue_2[0]);\r\n                            x1_2 = head(matchValue_2[0]);\r\n                        }\r\n                        else if (!isEmpty_1(matchValue_2[1])) {\r\n                            if (head(matchValue_2[1]) != null) {\r\n                                pattern_matching_result_4 = 1;\r\n                                t2_4 = tail(matchValue_2[1]);\r\n                                x2_2 = head(matchValue_2[1]);\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_4 = 2;\r\n                            }\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_4 = 2;\r\n                        }\r\n                    }\r\n                    else if (!isEmpty_1(matchValue_2[1])) {\r\n                        if (head(matchValue_2[1]) != null) {\r\n                            pattern_matching_result_4 = 1;\r\n                            t2_4 = tail(matchValue_2[1]);\r\n                            x2_2 = head(matchValue_2[1]);\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_4 = 2;\r\n                        }\r\n                    }\r\n                    else {\r\n                        pattern_matching_result_4 = 2;\r\n                    }\r\n                    switch (pattern_matching_result_4) {\r\n                        case 0: {\r\n                            if (x1_2 instanceof SetTreeNode$1) {\r\n                                comparer_mut = comparer;\r\n                                l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1_2), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_2), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_2), 0)], t1_4);\r\n                                l2_mut = l2;\r\n                                continue SetTreeModule_compareStacks;\r\n                            }\r\n                            else {\r\n                                comparer_mut = comparer;\r\n                                l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_2))], t1_4);\r\n                                l2_mut = l2;\r\n                                continue SetTreeModule_compareStacks;\r\n                            }\r\n                        }\r\n                        case 1: {\r\n                            if (x2_2 instanceof SetTreeNode$1) {\r\n                                comparer_mut = comparer;\r\n                                l1_mut = l1;\r\n                                l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_2), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_2), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_2), 0)], t2_4);\r\n                                continue SetTreeModule_compareStacks;\r\n                            }\r\n                            else {\r\n                                comparer_mut = comparer;\r\n                                l1_mut = l1;\r\n                                l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_2))], t2_4);\r\n                                continue SetTreeModule_compareStacks;\r\n                            }\r\n                        }\r\n                        case 2: {\r\n                            throw (new Error(\"unexpected state in SetTree.compareStacks\"));\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    comparer_mut = comparer;\r\n                    l1_mut = tail(matchValue[0]);\r\n                    l2_mut = tail(matchValue[1]);\r\n                    continue SetTreeModule_compareStacks;\r\n                }\r\n            }\r\n            else {\r\n                return 1;\r\n            }\r\n        }\r\n        else if (isEmpty_1(matchValue[1])) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_compare(comparer, t1, t2) {\r\n    if (t1 == null) {\r\n        if (t2 == null) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    }\r\n    else if (t2 == null) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return SetTreeModule_compareStacks(comparer, singleton_1(t1), singleton_1(t2)) | 0;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_choose(s) {\r\n    return SetTreeModule_minimumElement(s);\r\n}\r\n\r\nexport function SetTreeModule_toList(t) {\r\n    const loop = (t$0027_mut, acc_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const t$0027 = t$0027_mut, acc = acc_mut;\r\n            if (t$0027 != null) {\r\n                const t2 = t$0027;\r\n                if (t2 instanceof SetTreeNode$1) {\r\n                    t$0027_mut = SetTreeNode$1__get_Left(t2);\r\n                    acc_mut = cons(SetTreeLeaf$1__get_Key(t2), loop(SetTreeNode$1__get_Right(t2), acc));\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return cons(SetTreeLeaf$1__get_Key(t2), acc);\r\n                }\r\n            }\r\n            else {\r\n                return acc;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(t, empty_1());\r\n}\r\n\r\nexport function SetTreeModule_copyToArray(s, arr, i) {\r\n    let j = i;\r\n    SetTreeModule_iter((x) => {\r\n        arr[j] = x;\r\n        j = ((j + 1) | 0);\r\n    }, s);\r\n}\r\n\r\nexport function SetTreeModule_toArray(s) {\r\n    const n = SetTreeModule_count(s) | 0;\r\n    const res = fill(new Array(n), 0, n, null);\r\n    SetTreeModule_copyToArray(s, res, 0);\r\n    return res;\r\n}\r\n\r\nexport function SetTreeModule_mkFromEnumerator(comparer_mut, acc_mut, e_mut) {\r\n    SetTreeModule_mkFromEnumerator:\r\n    while (true) {\r\n        const comparer = comparer_mut, acc = acc_mut, e = e_mut;\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            comparer_mut = comparer;\r\n            acc_mut = SetTreeModule_add(comparer, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), acc);\r\n            e_mut = e;\r\n            continue SetTreeModule_mkFromEnumerator;\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function SetTreeModule_ofArray(comparer, l) {\r\n    return fold_1((acc, k) => SetTreeModule_add(comparer, k, acc), SetTreeModule_empty(), l);\r\n}\r\n\r\nexport function SetTreeModule_ofList(comparer, l) {\r\n    return fold_2((acc, k) => SetTreeModule_add(comparer, k, acc), SetTreeModule_empty(), l);\r\n}\r\n\r\nexport function SetTreeModule_ofSeq(comparer, c) {\r\n    if (isArrayLike(c)) {\r\n        return SetTreeModule_ofArray(comparer, c);\r\n    }\r\n    else if (c instanceof FSharpList) {\r\n        return SetTreeModule_ofList(comparer, c);\r\n    }\r\n    else {\r\n        const ie = getEnumerator(c);\r\n        try {\r\n            return SetTreeModule_mkFromEnumerator(comparer, SetTreeModule_empty(), ie);\r\n        }\r\n        finally {\r\n            ie.Dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport class FSharpSet {\r\n    constructor(comparer, tree) {\r\n        this.comparer = comparer;\r\n        this.tree = tree;\r\n    }\r\n    GetHashCode() {\r\n        const this$ = this;\r\n        return FSharpSet__ComputeHashCode(this$) | 0;\r\n    }\r\n    Equals(that) {\r\n        const this$ = this;\r\n        return (that instanceof FSharpSet) && (SetTreeModule_compare(FSharpSet__get_Comparer(this$), FSharpSet__get_Tree(this$), FSharpSet__get_Tree(that)) === 0);\r\n    }\r\n    toString() {\r\n        const this$ = this;\r\n        return (\"set [\" + join(\"; \", map_1((x) => {\r\n            let copyOfStruct = x;\r\n            return toString(copyOfStruct);\r\n        }, this$))) + \"]\";\r\n    }\r\n    get [Symbol.toStringTag]() {\r\n        return \"FSharpSet\";\r\n    }\r\n    toJSON(_key) {\r\n        const this$ = this;\r\n        return Array.from(this$);\r\n    }\r\n    CompareTo(that) {\r\n        const s = this;\r\n        return SetTreeModule_compare(FSharpSet__get_Comparer(s), FSharpSet__get_Tree(s), FSharpSet__get_Tree(that)) | 0;\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](x) {\r\n        throw (new Error(\"ReadOnlyCollection\"));\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\r\n        throw (new Error(\"ReadOnlyCollection\"));\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](x) {\r\n        throw (new Error(\"ReadOnlyCollection\"));\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](x) {\r\n        const s = this;\r\n        return SetTreeModule_mem(FSharpSet__get_Comparer(s), x, FSharpSet__get_Tree(s));\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](arr, i) {\r\n        const s = this;\r\n        SetTreeModule_copyToArray(FSharpSet__get_Tree(s), arr, i);\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\r\n        return true;\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\r\n        const s = this;\r\n        return FSharpSet__get_Count(s) | 0;\r\n    }\r\n    [\"System.Collections.Generic.IReadOnlyCollection`1.get_Count\"]() {\r\n        const s = this;\r\n        return FSharpSet__get_Count(s) | 0;\r\n    }\r\n    GetEnumerator() {\r\n        const s = this;\r\n        return SetTreeModule_mkIEnumerator(FSharpSet__get_Tree(s));\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const s = this;\r\n        return SetTreeModule_mkIEnumerator(FSharpSet__get_Tree(s));\r\n    }\r\n    get size() {\r\n        const s = this;\r\n        return FSharpSet__get_Count(s) | 0;\r\n    }\r\n    add(k) {\r\n        const s = this;\r\n        throw (new Error(\"Set cannot be mutated\"));\r\n        return s;\r\n    }\r\n    clear() {\r\n        throw (new Error(\"Set cannot be mutated\"));\r\n    }\r\n    delete(k) {\r\n        throw (new Error(\"Set cannot be mutated\"));\r\n        return false;\r\n    }\r\n    has(k) {\r\n        const s = this;\r\n        return FSharpSet__Contains(s, k);\r\n    }\r\n    keys() {\r\n        const s = this;\r\n        return map_1((x) => x, s);\r\n    }\r\n    values() {\r\n        const s = this;\r\n        return map_1((x) => x, s);\r\n    }\r\n    entries() {\r\n        const s = this;\r\n        return map_1((v) => [v, v], s);\r\n    }\r\n    forEach(f, thisArg) {\r\n        const s = this;\r\n        iterate_1((x) => {\r\n            f(x, x, s);\r\n        }, s);\r\n    }\r\n}\r\n\r\nexport function FSharpSet$reflection(gen0) {\r\n    return class_type(\"Set.FSharpSet\", [gen0], FSharpSet);\r\n}\r\n\r\nexport function FSharpSet_$ctor(comparer, tree) {\r\n    return new FSharpSet(comparer, tree);\r\n}\r\n\r\nexport function FSharpSet__get_Comparer(set$) {\r\n    return set$.comparer;\r\n}\r\n\r\nexport function FSharpSet__get_Tree(set$) {\r\n    return set$.tree;\r\n}\r\n\r\nexport function FSharpSet_Empty(comparer) {\r\n    return FSharpSet_$ctor(comparer, SetTreeModule_empty());\r\n}\r\n\r\nexport function FSharpSet__Add(s, value) {\r\n    return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_add(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s)));\r\n}\r\n\r\nexport function FSharpSet__Remove(s, value) {\r\n    return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_remove(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s)));\r\n}\r\n\r\nexport function FSharpSet__get_Count(s) {\r\n    return SetTreeModule_count(FSharpSet__get_Tree(s));\r\n}\r\n\r\nexport function FSharpSet__Contains(s, value) {\r\n    return SetTreeModule_mem(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s));\r\n}\r\n\r\nexport function FSharpSet__Iterate(s, x) {\r\n    SetTreeModule_iter(x, FSharpSet__get_Tree(s));\r\n}\r\n\r\nexport function FSharpSet__Fold(s, f, z) {\r\n    const f_1 = f;\r\n    return SetTreeModule_fold((x, z_1) => f_1(z_1, x), z, FSharpSet__get_Tree(s));\r\n}\r\n\r\nexport function FSharpSet__get_IsEmpty(s) {\r\n    return FSharpSet__get_Tree(s) == null;\r\n}\r\n\r\nexport function FSharpSet__Partition(s, f) {\r\n    if (FSharpSet__get_Tree(s) == null) {\r\n        return [s, s];\r\n    }\r\n    else {\r\n        const patternInput = SetTreeModule_partition(FSharpSet__get_Comparer(s), f, FSharpSet__get_Tree(s));\r\n        return [FSharpSet_$ctor(FSharpSet__get_Comparer(s), patternInput[0]), FSharpSet_$ctor(FSharpSet__get_Comparer(s), patternInput[1])];\r\n    }\r\n}\r\n\r\nexport function FSharpSet__Filter(s, f) {\r\n    if (FSharpSet__get_Tree(s) == null) {\r\n        return s;\r\n    }\r\n    else {\r\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_filter(FSharpSet__get_Comparer(s), f, FSharpSet__get_Tree(s)));\r\n    }\r\n}\r\n\r\nexport function FSharpSet__Map(s, f, comparer) {\r\n    return FSharpSet_$ctor(comparer, SetTreeModule_fold((acc, k) => SetTreeModule_add(comparer, f(k), acc), SetTreeModule_empty(), FSharpSet__get_Tree(s)));\r\n}\r\n\r\nexport function FSharpSet__Exists(s, f) {\r\n    return SetTreeModule_exists(f, FSharpSet__get_Tree(s));\r\n}\r\n\r\nexport function FSharpSet__ForAll(s, f) {\r\n    return SetTreeModule_forall(f, FSharpSet__get_Tree(s));\r\n}\r\n\r\nexport function FSharpSet_op_Subtraction(set1, set2) {\r\n    if (FSharpSet__get_Tree(set1) == null) {\r\n        return set1;\r\n    }\r\n    else if (FSharpSet__get_Tree(set2) == null) {\r\n        return set1;\r\n    }\r\n    else {\r\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(set1), SetTreeModule_diff(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2)));\r\n    }\r\n}\r\n\r\nexport function FSharpSet_op_Addition(set1, set2) {\r\n    if (FSharpSet__get_Tree(set2) == null) {\r\n        return set1;\r\n    }\r\n    else if (FSharpSet__get_Tree(set1) == null) {\r\n        return set2;\r\n    }\r\n    else {\r\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(set1), SetTreeModule_union(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2)));\r\n    }\r\n}\r\n\r\nexport function FSharpSet_Intersection(a, b) {\r\n    if (FSharpSet__get_Tree(b) == null) {\r\n        return b;\r\n    }\r\n    else if (FSharpSet__get_Tree(a) == null) {\r\n        return a;\r\n    }\r\n    else {\r\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(a), SetTreeModule_intersection(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b)));\r\n    }\r\n}\r\n\r\nexport function FSharpSet_IntersectionMany(sets) {\r\n    return reduce((s1, s2) => FSharpSet_Intersection(s1, s2), sets);\r\n}\r\n\r\nexport function FSharpSet_Equality(a, b) {\r\n    return SetTreeModule_compare(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b)) === 0;\r\n}\r\n\r\nexport function FSharpSet_Compare(a, b) {\r\n    return SetTreeModule_compare(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b));\r\n}\r\n\r\nexport function FSharpSet__get_Choose(x) {\r\n    return SetTreeModule_choose(FSharpSet__get_Tree(x));\r\n}\r\n\r\nexport function FSharpSet__get_MinimumElement(x) {\r\n    return SetTreeModule_minimumElement(FSharpSet__get_Tree(x));\r\n}\r\n\r\nexport function FSharpSet__get_MaximumElement(x) {\r\n    return SetTreeModule_maximumElement(FSharpSet__get_Tree(x));\r\n}\r\n\r\nexport function FSharpSet__IsSubsetOf(x, otherSet) {\r\n    return SetTreeModule_subset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(x), FSharpSet__get_Tree(otherSet));\r\n}\r\n\r\nexport function FSharpSet__IsSupersetOf(x, otherSet) {\r\n    return SetTreeModule_subset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(otherSet), FSharpSet__get_Tree(x));\r\n}\r\n\r\nexport function FSharpSet__IsProperSubsetOf(x, otherSet) {\r\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(x), FSharpSet__get_Tree(otherSet));\r\n}\r\n\r\nexport function FSharpSet__IsProperSupersetOf(x, otherSet) {\r\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(otherSet), FSharpSet__get_Tree(x));\r\n}\r\n\r\nexport function FSharpSet__ToList(x) {\r\n    return SetTreeModule_toList(FSharpSet__get_Tree(x));\r\n}\r\n\r\nexport function FSharpSet__ToArray(x) {\r\n    return SetTreeModule_toArray(FSharpSet__get_Tree(x));\r\n}\r\n\r\nexport function FSharpSet__ComputeHashCode(this$) {\r\n    let y;\r\n    let res = 0;\r\n    const enumerator = getEnumerator(this$);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const x_1 = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            res = (((y = (structuralHash(x_1) | 0), ((res << 1) + y) + 631)) | 0);\r\n        }\r\n    }\r\n    finally {\r\n        enumerator.Dispose();\r\n    }\r\n    return Math.abs(res) | 0;\r\n}\r\n\r\nexport function isEmpty(set$) {\r\n    return FSharpSet__get_IsEmpty(set$);\r\n}\r\n\r\nexport function contains(element, set$) {\r\n    return FSharpSet__Contains(set$, element);\r\n}\r\n\r\nexport function add(value, set$) {\r\n    return FSharpSet__Add(set$, value);\r\n}\r\n\r\nexport function singleton(value, comparer) {\r\n    return FSharpSet__Add(FSharpSet_Empty(comparer), value);\r\n}\r\n\r\nexport function remove(value, set$) {\r\n    return FSharpSet__Remove(set$, value);\r\n}\r\n\r\nexport function union(set1, set2) {\r\n    return FSharpSet_op_Addition(set1, set2);\r\n}\r\n\r\nexport function unionMany(sets, comparer) {\r\n    return fold_3((s1, s2) => FSharpSet_op_Addition(s1, s2), FSharpSet_Empty(comparer), sets);\r\n}\r\n\r\nexport function intersect(set1, set2) {\r\n    return FSharpSet_Intersection(set1, set2);\r\n}\r\n\r\nexport function intersectMany(sets) {\r\n    return FSharpSet_IntersectionMany(sets);\r\n}\r\n\r\nexport function iterate(action, set$) {\r\n    FSharpSet__Iterate(set$, action);\r\n}\r\n\r\nexport function empty(comparer) {\r\n    return FSharpSet_Empty(comparer);\r\n}\r\n\r\nexport function forAll(predicate, set$) {\r\n    return FSharpSet__ForAll(set$, predicate);\r\n}\r\n\r\nexport function exists(predicate, set$) {\r\n    return FSharpSet__Exists(set$, predicate);\r\n}\r\n\r\nexport function filter(predicate, set$) {\r\n    return FSharpSet__Filter(set$, predicate);\r\n}\r\n\r\nexport function partition(predicate, set$) {\r\n    return FSharpSet__Partition(set$, predicate);\r\n}\r\n\r\nexport function fold(folder, state, set$) {\r\n    return SetTreeModule_fold(folder, state, FSharpSet__get_Tree(set$));\r\n}\r\n\r\nexport function foldBack(folder, set$, state) {\r\n    return SetTreeModule_foldBack(folder, FSharpSet__get_Tree(set$), state);\r\n}\r\n\r\nexport function map(mapping, set$, comparer) {\r\n    return FSharpSet__Map(set$, mapping, comparer);\r\n}\r\n\r\nexport function count(set$) {\r\n    return FSharpSet__get_Count(set$);\r\n}\r\n\r\nexport function ofList(elements, comparer) {\r\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofSeq(comparer, elements));\r\n}\r\n\r\nexport function ofArray(array, comparer) {\r\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofArray(comparer, array));\r\n}\r\n\r\nexport function toList(set$) {\r\n    return FSharpSet__ToList(set$);\r\n}\r\n\r\nexport function toArray(set$) {\r\n    return FSharpSet__ToArray(set$);\r\n}\r\n\r\nexport function toSeq(set$) {\r\n    return map_1((x) => x, set$);\r\n}\r\n\r\nexport function ofSeq(elements, comparer) {\r\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofSeq(comparer, elements));\r\n}\r\n\r\nexport function difference(set1, set2) {\r\n    return FSharpSet_op_Subtraction(set1, set2);\r\n}\r\n\r\nexport function isSubset(set1, set2) {\r\n    return SetTreeModule_subset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2));\r\n}\r\n\r\nexport function isSuperset(set1, set2) {\r\n    return SetTreeModule_subset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set2), FSharpSet__get_Tree(set1));\r\n}\r\n\r\nexport function isProperSubset(set1, set2) {\r\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2));\r\n}\r\n\r\nexport function isProperSuperset(set1, set2) {\r\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set2), FSharpSet__get_Tree(set1));\r\n}\r\n\r\nexport function minElement(set$) {\r\n    return FSharpSet__get_MinimumElement(set$);\r\n}\r\n\r\nexport function maxElement(set$) {\r\n    return FSharpSet__get_MaximumElement(set$);\r\n}\r\n\r\nexport function unionWith(s1, s2) {\r\n    return fold_3((acc, x) => acc.add(x), s1, s2);\r\n}\r\n\r\nexport function newMutableSetWith(s1, s2) {\r\n    if (s1 instanceof HashSet) {\r\n        return HashSet_$ctor_Z6150332D(s2, HashSet__get_Comparer(s1));\r\n    }\r\n    else {\r\n        return new Set(s2);\r\n    }\r\n}\r\n\r\nexport function intersectWith(s1, s2) {\r\n    const s2_1 = newMutableSetWith(s1, s2);\r\n    iterate_1((x) => {\r\n        if (!s2_1.has(x)) {\r\n            s1.delete(x);\r\n        }\r\n    }, s1.values());\r\n}\r\n\r\nexport function exceptWith(s1, s2) {\r\n    iterate_1((x) => {\r\n        s1.delete(x);\r\n    }, s2);\r\n}\r\n\r\nexport function isSubsetOf(s1, s2) {\r\n    const s2_1 = newMutableSetWith(s1, s2);\r\n    return forAll_1((arg00) => s2_1.has(arg00), s1.values());\r\n}\r\n\r\nexport function isSupersetOf(s1, s2) {\r\n    return forAll_1((arg00) => s1.has(arg00), s2);\r\n}\r\n\r\nexport function isProperSubsetOf(s1, s2) {\r\n    const s2_1 = newMutableSetWith(s1, s2);\r\n    if (s2_1.size > s1.size) {\r\n        return forAll_1((arg00) => s2_1.has(arg00), s1.values());\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function isProperSupersetOf(s1, s2) {\r\n    const s2_1 = cache(s2);\r\n    if (exists_1((arg) => (!s1.has(arg)), s2_1)) {\r\n        return forAll_1((arg00_1) => s1.has(arg00_1), s2_1);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\n","import * as Unicode from \"./Unicode.13.0.0.js\";\nfunction getCategoryFunc() {\n    // unpack Unicode codepoint ranges (delta encoded) and general categories\n    const offset = 35; // offsets unprintable characters\n    const a1 = [...Unicode.rangeDeltas].map((ch) => { var _a; return ((_a = ch.codePointAt(0)) !== null && _a !== void 0 ? _a : 0) - offset; });\n    const a2 = [...Unicode.categories].map((ch) => { var _a; return ((_a = ch.codePointAt(0)) !== null && _a !== void 0 ? _a : 0) - offset; });\n    const codepoints = new Uint32Array(a1);\n    const categories = new Uint8Array(a2);\n    for (let i = 1; i < codepoints.length; ++i) {\n        codepoints[i] += codepoints[i - 1];\n    }\n    // binary search in unicode ranges\n    return (cp) => {\n        let hi = codepoints.length;\n        let lo = 0;\n        while (hi - lo > 1) {\n            const mid = Math.floor((hi + lo) / 2);\n            const test = codepoints[mid];\n            if (cp < test) {\n                hi = mid;\n            }\n            else if (cp === test) {\n                hi = lo = mid;\n                break;\n            }\n            else if (test < cp) {\n                lo = mid;\n            }\n        }\n        return categories[lo];\n    };\n}\nconst isControlMask = 1 << 14 /* Control */;\nconst isDigitMask = 1 << 8 /* DecimalDigitNumber */;\nconst isLetterMask = 0\n    | 1 << 0 /* UppercaseLetter */\n    | 1 << 1 /* LowercaseLetter */\n    | 1 << 2 /* TitlecaseLetter */\n    | 1 << 3 /* ModifierLetter */\n    | 1 << 4 /* OtherLetter */;\nconst isLetterOrDigitMask = isLetterMask | isDigitMask;\nconst isUpperMask = 1 << 0 /* UppercaseLetter */;\nconst isLowerMask = 1 << 1 /* LowercaseLetter */;\nconst isNumberMask = 0\n    | 1 << 8 /* DecimalDigitNumber */\n    | 1 << 9 /* LetterNumber */\n    | 1 << 10 /* OtherNumber */;\nconst isPunctuationMask = 0\n    | 1 << 18 /* ConnectorPunctuation */\n    | 1 << 19 /* DashPunctuation */\n    | 1 << 20 /* OpenPunctuation */\n    | 1 << 21 /* ClosePunctuation */\n    | 1 << 22 /* InitialQuotePunctuation */\n    | 1 << 23 /* FinalQuotePunctuation */\n    | 1 << 24 /* OtherPunctuation */;\nconst isSeparatorMask = 0\n    | 1 << 11 /* SpaceSeparator */\n    | 1 << 12 /* LineSeparator */\n    | 1 << 13 /* ParagraphSeparator */;\nconst isSymbolMask = 0\n    | 1 << 25 /* MathSymbol */\n    | 1 << 26 /* CurrencySymbol */\n    | 1 << 27 /* ModifierSymbol */\n    | 1 << 28 /* OtherSymbol */;\nconst isWhiteSpaceMask = 0\n    | 1 << 11 /* SpaceSeparator */\n    | 1 << 12 /* LineSeparator */\n    | 1 << 13 /* ParagraphSeparator */;\nconst unicodeCategoryFunc = getCategoryFunc();\nfunction charCodeAt(s, index) {\n    if (index >= 0 && index < s.length) {\n        return s.charCodeAt(index);\n    }\n    else {\n        throw new Error(\"Index out of range.\");\n    }\n}\nexport const getUnicodeCategory = (s) => getUnicodeCategory2(s, 0);\nexport const isControl = (s) => isControl2(s, 0);\nexport const isDigit = (s) => isDigit2(s, 0);\nexport const isLetter = (s) => isLetter2(s, 0);\nexport const isLetterOrDigit = (s) => isLetterOrDigit2(s, 0);\nexport const isUpper = (s) => isUpper2(s, 0);\nexport const isLower = (s) => isLower2(s, 0);\nexport const isNumber = (s) => isNumber2(s, 0);\nexport const isPunctuation = (s) => isPunctuation2(s, 0);\nexport const isSeparator = (s) => isSeparator2(s, 0);\nexport const isSymbol = (s) => isSymbol2(s, 0);\nexport const isWhiteSpace = (s) => isWhiteSpace2(s, 0);\nexport const isHighSurrogate = (s) => isHighSurrogate2(s, 0);\nexport const isLowSurrogate = (s) => isLowSurrogate2(s, 0);\nexport const isSurrogate = (s) => isSurrogate2(s, 0);\nexport function getUnicodeCategory2(s, index) {\n    const cp = charCodeAt(s, index);\n    return unicodeCategoryFunc(cp);\n}\nexport function isControl2(s, index) {\n    const test = 1 << getUnicodeCategory2(s, index);\n    return (test & isControlMask) !== 0;\n}\nexport function isDigit2(s, index) {\n    const test = 1 << getUnicodeCategory2(s, index);\n    return (test & isDigitMask) !== 0;\n}\nexport function isLetter2(s, index) {\n    const test = 1 << getUnicodeCategory2(s, index);\n    return (test & isLetterMask) !== 0;\n}\nexport function isLetterOrDigit2(s, index) {\n    const test = 1 << getUnicodeCategory2(s, index);\n    return (test & isLetterOrDigitMask) !== 0;\n}\nexport function isUpper2(s, index) {\n    const test = 1 << getUnicodeCategory2(s, index);\n    return (test & isUpperMask) !== 0;\n}\nexport function isLower2(s, index) {\n    const test = 1 << getUnicodeCategory2(s, index);\n    return (test & isLowerMask) !== 0;\n}\nexport function isNumber2(s, index) {\n    const test = 1 << getUnicodeCategory2(s, index);\n    return (test & isNumberMask) !== 0;\n}\nexport function isPunctuation2(s, index) {\n    const test = 1 << getUnicodeCategory2(s, index);\n    return (test & isPunctuationMask) !== 0;\n}\nexport function isSeparator2(s, index) {\n    const test = 1 << getUnicodeCategory2(s, index);\n    return (test & isSeparatorMask) !== 0;\n}\nexport function isSymbol2(s, index) {\n    const test = 1 << getUnicodeCategory2(s, index);\n    return (test & isSymbolMask) !== 0;\n}\nexport function isWhiteSpace2(s, index) {\n    const test = 1 << getUnicodeCategory2(s, index);\n    if ((test & isWhiteSpaceMask) !== 0) {\n        return true;\n    }\n    const cp = charCodeAt(s, index);\n    return (0x09 <= cp && cp <= 0x0D) || cp === 0x85 || cp === 0xA0;\n}\nexport function isHighSurrogate2(s, index) {\n    const cp = charCodeAt(s, index);\n    return (0xD800 <= cp && cp <= 0xDBFF);\n}\nexport function isLowSurrogate2(s, index) {\n    const cp = charCodeAt(s, index);\n    return (0xDC00 <= cp && cp <= 0xDFFF);\n}\nexport function isSurrogate2(s, index) {\n    const cp = charCodeAt(s, index);\n    return (0xD800 <= cp && cp <= 0xDFFF);\n}\nexport function isSurrogatePair(s, index) {\n    return typeof index === \"number\"\n        ? isHighSurrogate2(s, index) && isLowSurrogate2(s, index + 1)\n        : isHighSurrogate(s) && isLowSurrogate(index);\n}\nexport function parse(input) {\n    if (input.length === 1) {\n        return input[0];\n    }\n    else {\n        throw new Error(\"String must be exactly one character long.\");\n    }\n}\n","// Unicode 13.0.0 codepoint ranges (delta encoded) and general categories.\n// Integer delta values are offset by 35 and stored as Unicode characters.\nexport const rangeDeltas = \"#C$&$&$$$$$$%-%&%=$$$$$$=$$$$D$$'$$$$$$$$$$$$%$$%$$$$&$:$*;$+$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$%$$$$$$$$$$$$$$$%$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$%$$$$&%$$$%$&%'$%$&&%$%$$$$$%$$%$$%$&$$$%%$$&'$$$$$$$$$$$$$$$$$$$$$$$$%$$$$$$$$$$$$$$$$$%$$$$$&$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*%$%%$$'$$$$$$$$h$>5'/1(*$$$4$$$$$$$$%$&$$'%$$&$$$%$4$,F$%&&$$$$$$$$$$$$$$$$$$$$$$$($$$$$%%VS$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$(%$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$%$$$$$$$$$$$$%$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$I%$)L$$%%$$P$$$%$%$$+>''%.)&%$%%.$$$%C$-8-'%$$$*$$)%%$'%-&%$1$$$$A>%|Ŭ$'%*$$$'%L$'%D$'%*$$$'%2$\\\\$'%f%&,7&3-)y%)%$ʏ$$4$=$$&n&&+*0$'&.5&%,5%/0$&$%/W%$*+$%.&$&$$$%-)-))$'&$$-)F$X*(%E$$(i-B$&'%&'%$)&'$&%-A%(.O'=)-$&E:%%$%%X$$$*$$$$%+)-%$-)-)*$)%1$%b'$R$$($$($%*'-*-,,&%$A$'%%$&%-O$$%&$$&%+'G++%%&(-&&-A)%,*N%&++&$0$*'$)$%$%$(Ob0$EH]$($$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$,$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$,+)%)%++++)%)%+$$$$$$$$++1%++++++($%'$$$&&$%'$&'%%'$&+(&%&$%'$%$.()%$$$%$$$+$$($,$$'%&$$$.$$$-$($-$$%)&$$$-&$$$0&C30'$&/2%$'$%$&%&$$$%$()$$$$$$'$$'$'$%%%($'$$%$$3F$$'$%'((%'$%$%$*$B%%$$$Bį+$$$$7%*$$t$A<K)h<.8_q9Ú$,$Y+$ě$$$$$$$$$$$$$$AO($$B$$$$$$$$$$3ģ¦$$$$$$$$$$$$$$$$$$$$$$b$$$$C$$ĥS8%)J%C$R$R$$$&%$$$$$$'$$%$)%&$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$%)$$$$&$$('$%I$$($%[*$$1$:,*$*$*$*$*$*$*$*$C%$$$$&$$$$$,$%$$$$%$$$$$$$$$$($-%'$$$0%$P=$|/ù=/'$&$$$$$$$$$$$$$$%$$$$$$$$$$%$,'%$(%&$$$%$y%%%%$$}$&$(N$$%'-CG/3B$-A+$2C-J2ţ᧣c删&8$Қ&Z,K)%į$&3-%7$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$&$-$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$%%i-%)+:,%$$$$$$$$$$$$$&$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$+$$$$%$$$$$$$$$$%$$$$$$$$&$$$$$$$$$$$$$$$$$$$$($($$$$$$$$$$$%$$'$$$M$$$%$*$&$'$:%%$'$&)%$$)W'+%U3%+%-)5)&$$%$-?+%:.%.$@&&$R$%'%%&0$$-'%($$,-($L)%%%%,&$+$$%-%'3$)&$$$$U$$&%%(%$$$;%$%.$%%%$%$$-)%)%),*$*$N$',$%'sF%$%$%$$$%-)⯇/:'T'ࠣᤣƑ%I*/(($$-$0$($$$%$%$34Ǝ$$3c%YK/$$%3*$$$)3$%%$$$$$$$$$$$$$$$$%$$'&&$'$$$$$$$&$$&$$$%'($ª%$$&$&$$$$$$%-%&%=$$$$$$=$$$$$$$$$%-$P%B&)%)%)%&&%$$$%$$'%-&%%/$=$6$%$2%1E(&'P&,X'4%&$0&$RP$¥@&T2$>'C',7$+$(I((A$$G'+$(MKKq%-)G'G'K+W.$³Ś,9-+»)%$$O$%&$%:$$+:%*B+,S6$%((9)&$=($c['%%3%Q$&$%(''$&$@%&'$,*,*@%$@&C+$?%'(*,Y&*9%+6(+5*'/*slZV0V*)G'+-ŉB$M$%$%%q@-$+9.'(y8*7:,$$$X2*'7-2&$P&'%%%$'.$%<*-)&G($+$-'$%$+F$%$,%$S&,%'''$$$-$$$&$7.5$<&&%$$%)$d*$$$'$2$-$)R$&+(-)%%$+%%%9$*$%$($%$%$'%%%&%$)$((%%*&(®X&+%&$$'(-%$$$&AS&)$$'%$%%$$+-ÉR&'%'%$%:'%ES&+%$$%&$.-)06N$$$%)$$$*-Y>%&%'$('-%&$ãO&,$%$CC-,/+%$%+$%$;)$%%%$$$$$$$&,-i+%J&'%%'$$$$$>$-K)$$'+$+$)%&Q0$%&$(@\\\\Ī,$H$*$)$$$(--6&%A%9$$*$%$%l*$%$I)&$$%$*$$+-))$%$C($%$%$$$$*-ř6%%%Ú$28+'40$ν$(.ç૟ђ$,࿪ɪ⇜ɜ*B$-'%A%($-S*(''$$--$*$8(6˓CC:'n'$$Z*'0c%$$$.%1᠛+ӹM,⌚łT&4'+Ưध(0&,*-%$%$'፿ę-J%_%&&)++%*A'^:e&$½7/z,<ª===*$5==$$%%$%%%'$+'$$$*$.==%$'%+$*$=%$'$($$&*$============?%<$<$)<$<$)<$<$)<$<$)<$<$)$$%UȣZ'U+$1$%(2($2ճ*$4%*$%$(øP&**%-'$$ƓO'-($ԣè%,*LEE*$'-'%̴^$&$'oP$2å'$>$%$$%$$-$'$$$$)$'$$$$$$&$%$$%$$$$$$$$$$%$$%'$*$'$'$$$-$4(&$($4W%ıO'/2%2$2$H-0Ä[@0O',*%1)½Ğ(˻+0&0&/|*/7/'[+-)K+A%%q$u$ª/1%(&&(*,<**,&0*L¶$ZH-Щ꜁Eၘ.ā%ᚥ1ᵔూɁ؅፮򮳙$A£ē︳𐀡%𐀡\";\nexport const categoriesn","import { ofSeq } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Map.js\";\r\n\r\nexport const nameLists = ofSeq([[[\"Tir na n\\u0027Og\", \"Male\"], [\"Abban\", \"Adamnan\", \"Eunan\", \"Adanodan\", \"Ailbhe\", \"Ailbe\", \"Alby\", \"Ailgel\", \"Ailill\", \"Aininn\", \"Ainmire\", \"Airechtach\", \"Airmedach\", \"Alabhaois\", \"Alaios\", \"Alastrann\", \"Alchad\", \"Alstrom\", \"Amalgaid\", \"Amergin\", \"Anluan\", \"Anlon\", \"Aodh\", \"Aodha\", \"Aoidh\", \"Aedus\", \"Aodhfin\", \"Aonghas\", \"Aonas\", \"Angus\", \"Ardar\", \"Ardal\", \"Argal\", \"Artegal\", \"Arthgallo\", \"Art\", \"Artuir\", \"Baeth\", \"Balor\", \"Bairne\", \"Baithaus\", \"Banan\", \"Banbhan\", \"Baothghalach\", \"Barrfind\", \"Bairrfhionn\", \"Barrin\", \"Beag\", \"Beairtle\", \"Bearach\", \"Berach\", \"Becan\", \"Behellagh\", \"Behillagh\", \"Benen\", \"Beolagh\", \"Beothach\", \"Bercan\", \"Berchan\", \"Bercnan\", \"Bergin\", \"Blanaid\", \"Boethis\", \"Bran\", \"Brandubh\", \"Brandrub\", \"Branduff\", \"Brendan\", \"Bresal\", \"Bressal\", \"Brasil\", \"Breas\", \"Breasal\", \"Brian\", \"Brion\", \"Bricc\", \"Britanmael\", \"Bruaidheadh\", \"Bruatur\", \"Bruddai\", \"Buadhach\", \"Buagh\", \"Buaigre\", \"Cadhla\", \"Caeilte\", \"Caentigern\", \"Kentigern\", \"Cainnech\", \"Cainneach\", \"Canice\", \"Cairbre\", \"Coirbre\", \"Cairpre\", \"Caircil\", \"Cearcill\", \"Caireall\", \"Cairell\", \"Coireall\", \"Kerill\", \"Cairthinn\", \"Caiside\", \"Calbhach\", \"Calvagh\", \"Calbach\", \"Callough\", \"Caoilte\", \"Caoimhe\", \"Kelan\", \"Caraid\", \"Carantoc\", \"Cartach\", \"Cartagh\", \"Carthagh\", \"Cascorach\", \"Cassidan\", \"Cathal\", \"Cahal\", \"Cathald\", \"Catheld\", \"Cathaldus\", \"Kathel\", \"Cathan\", \"Cahan\", \"Kane\", \"Cathaoir\", \"Cahir\", \"Cathfer\", \"Caffar\", \"Catharnach\", \"Cathasach\", \"Cathbadh\", \"Cathbad\", \"Cathbharr\", \"Ceallach\", \"Ceallagh\", \"Ceollach\", \"Cellach\", \"Kellach\", \"Kelly\", \"Cearbhall\", \"Cerbhall\", \"Cerball\", \"Cearul\", \"Cearull\", \"Carroll\", \"Cearnach\", \"Cedach\", \"Celsus\", \"Celtchair\", \"Cenn\", \"Cesarn\", \"Chattan\", \"Chulain\", \"Cian\", \"Kian\", \"Kean\", \"Keane\", \"Kieran\", \"Ciardan\", \"Ciardha\", \"Ciarrai\", \"Cillian\", \"Killian\", \"Kealan\", \"Kilian\", \"Killan\", \"Cionadh\", \"Cionaodh\", \"Kenneth\", \"Coan\", \"Cobhran\", \"Cognat\", \"Colcu\", \"Comhghall\", \"Comhgall\", \"Comgal\", \"Comgell\", \"Congal\", \"Cowal\", \"Congan\", \"Conaing\", \"Conall\", \"Connell\", \"Conan\", \"Conant\", \"Conchobar\", \"Conchobhar\", \"Conchubhar\", \"Conchubor\", \"Conquhare\", \"Connor\", \"Conor\", \"Congalach\", \"Conganchas\", \"Conn\", \"Connlaeth\", \"Connlaoth\", \"Connlaodh\", \"Connlaogh\", \"Connlaoi\", \"Conleat\", \"Conleth\", \"Conla\", \"Conley\", \"Coplait\", \"Cormac\", \"Cormacc\", \"Corb\", \"Cothric\", \"Couleth\", \"Cridan\", \"Crimhthann\", \"Crofinn\", \"Cromanus\", \"Cronin\", \"Crosson\", \"Cruamthain\", \"Cuileann\", \"Cuilinn\", \"Cullen\", \"Comyn\", \"Cuinn\", \"Cuirithir\", \"Cumall\", \"Curoi\", \"Curran\", \"Cuthacar\", \"Daig\", \"Daigh\", \"Davin\", \"Daly\", \"Daley\", \"Damaen\", \"Daman\", \"Dara\", \"Darach\", \"Daragh\", \"Darragh\", \"Darrah\", \"Daire\", \"Declan\", \"Deicola\", \"Dela\", \"Demna\", \"Desle\", \"Desmond\", \"Desmumnach\", \"Devlin\", \"Diarmait\", \"Duirmhuid\", \"Diamit\", \"Diarmaid\", \"Diarmuit\", \"Dermot\", \"Kermit\", \"Dieul\", \"Dimnaus\", \"Disisbod\", \"Diuma\", \"Dimma\", \"Doibhilin\", \"Doireidh\", \"Domhnall\", \"Domnall\", \"Donn\", \"Don\", \"Donan\", \"Donnchadh\", \"Donnchad\", \"Donncha\", \"Dunchad\", \"Donagh\", \"Donogh\", \"Donough\", \"Dunecan\", \"Donovan\", \"Donngal\", \"Doran\", \"Dorchaidh\", \"Dubhaltach\", \"Dubaltach\", \"Dubultach\", \"Dualtach\", \"Duban\", \"Duane\", \"Dubhdara\", \"Dubhdarach\", \"Dubheidir\", \"Dubghall\", \"Dubgall\", \"Dougal\", \"Dubhghlas\", \"Dubhglas\", \"Dughlas\", \"Douglas\", \"Duigenan\", \"Eachann\", \"Eachdhonn\", \"Enda\", \"Earna\", \"Echen\", \"Heber\", \"Aneas\", \"Aeneas\", \"Eimar\", \"Evin\", \"Evan\", \"Ernin\", \"Ernan\", \"Eithear\", \"Elochad\", \"Emianus\", \"Ennae\", \"Eochaidh\", \"Echaid\", \"Eogabail\", \"Eogan\", \"Eolus\", \"Erc\", \"Ercus\", \"Eremon\", \"Fachnan\", \"Fachtna\", \"Fiachna\", \"Faebhar\", \"Failge\", \"Felan\", \"Foelan\", \"Fillan\", \"Faughnan\", \"Feagh\", \"Fearadhach\", \"Fearadagh\", \"Farry\", \"Feardorcha\", \"Ferdorcha\", \"Fardoragh\", \"Ferdorccha\", \"Fearghal\", \"Fearghall\", \"Fergal\", \"Ferghil\", \"Ferol\", \"Fearghas\", \"Fearghus\", \"Fergus\", \"Fehin\", \"Fechin\", \"Feidhlim\", \"Feidhlimidh\", \"Fedelmid\", \"Feidlim\", \"Felim\", \"Felimy\", \"Phelim\", \"Feuillan\", \"Fillan\", \"Fiachra\", \"Ficare\", \"Fiach\", \"Find\", \"Finegas\", \"Fingar\", \"Finghin\", \"Fingin\", \"Fineen\", \"Finn\", \"Fionn\", \"Finnchad\", \"Finntan\", \"Fintan\", \"Fiontan\", \"Fionnbhar\", \"Findbarr\", \"Finbar\", \"Fios\", \"Flaithbertach\", \"Flurry\", \"Florry\", \"Flann\", \"Flainn\", \"Flannchadh\", \"Fochmare\", \"Fogartach\", \"Foillas\", \"Forgael\", \"Forgall\", \"Fortchern\", \"Frainc\", \"Froichan\", \"Fulan\", \"Firlan\", \"Fursa\", \"Fursey\", \"Gaithan\", \"Gall\", \"Goll\", \"Gallech\", \"Garvan\", \"Garfhidh\", \"Garnard\", \"Garnat\", \"Gilian\", \"Glaisne\", \"Glassan\", \"Gnathach\", \"Gobann\", \"Goban\", \"Gordan\", \"Gorman\", \"Gosan\", \"Gusan\", \"Guaire\", \"Herygh\", \"Hewney\", \"Huydhran\", \"Iarbonel\", \"Iarlaith\", \"Iarlaithe\", \"Iarfhlaith\", \"Jarlath\", \"Iobhar\", \"Ibhor\", \"Ibor\", \"Abaris\", \"Imchath\", \"Incha\", \"Indract\", \"Ingnathach\", \"Irial\", \"Irimia\", \"Iucharba\", \"Joavan\", \"Kenncoh\", \"Kescog\", \"Labraid\", \"Labhraidh\", \"Lowry\", \"Lachtna\", \"Laegh\", \"Leagh\", \"Laoghaire\", \"Laeghaire\", \"Leary\", \"Laistranus\", \"Laoighseach\", \"Laoiseach\", \"Lavren\", \"Lithgean\", \"Lochlainn\", \"Lochlann\", \"Leachlainn\", \"Laughlin\", \"Loghlin\", \"Lodan\", \"Lorcann\", \"Lua\", \"Luchta\", \"Lugh\", \"Lughaidh\", \"Lugaidh\", \"Lughaid\", \"Lugaid\", \"Luger\", \"Lewy\", \"Lysagh\", \"Machar\", \"Maduta\", \"Maedoc\", \"Maidhc\", \"Mairid\", \"Manchan\", \"Manus\", \"Mathghamhain\", \"Mathghamhaim\", \"Mathgamain\", \"Mahon\", \"Meadhran\", \"Medran\", \"Mellan\", \"Medabh\", \"Mel\", \"Meldan\", \"Melkorka\", \"Melrone\", \"Meubred\", \"Midir\", \"Midhir\", \"Mirin\", \"Mochoemoc\", \"Mochta\", \"Mochteus\", \"Mochua\", \"Mochumma\", \"Modomnoc\", \"Mogue\", \"Molling\", \"Moloi\", \"Molua\", \"Moluag\", \"More\", \"Morna\", \"Muchin\", \"Mughran\", \"Muirghean\", \"Muirgheas\", \"Muirgius\", \"Muiris\", \"Muiriartach\", \"Muicheachtach\", \"Muireadhach\", \"Muirchertach\", \"Muiredach\", \"Murtagh\", \"Murty\", \"Briartach\", \"Munnu\", \"Mura\", \"Muranus\", \"Murchad\", \"Murchadh\", \"Murcha\", \"Murrough\", \"Muru\", \"Naoise\", \"Nathi\", \"Nemid\", \"Nevan\", \"Niadh\", \"Niall\", \"Neal\", \"Neill\", \"Neil\", \"Ninian\", \"Notal\", \"Odran\", \"Oran\", \"Odhar\", \"Ossian\", \"Oisin\", \"Osheen\", \"Oscar\", \"Otteran\", \"Ounam\", \"Phelan\", \"Piran\", \"Raghallach\", \"Reilly\", \"Riley\", \"Riaghan\", \"Rian\", \"Ryan\", \"Royan\", \"Ronan\", \"Rownan\", \"Riordan\", \"Reardan\", \"Rearden\", \"Ros\", \"Rodan\", \"Ruan\", \"Rowan\", \"Rory\", \"Roderick\", \"Roricus\", \"Ruidhe\", \"Saebhreathach\", \"Saorbhreathach\", \"Saoirse\", \"Sanctan\", \"Saranus\", \"Scelianus\", \"Scolaidh\", \"Scolaighe\", \"Seachnall\", \"Seafraid\", \"Senan\", \"Seanach\", \"Senach\", \"Sedna\", \"Segenus\", \"Sheary\", \"Shiel\", \"Siadhal\", \"Siaghal\", \"Siochfioldha\", \"Sinon\", \"Siran\", \"Siseal\", \"Starn\", \"Steimhin\", \"Suibhne\", \"Suibne\", \"Sweeney\", \"Suthan\", \"Tadhg\", \"Tadg\", \"Tadc\", \"Tegue\", \"Teigue\", \"Teige\", \"Taig\", \"Taidgh\", \"Tiege\", \"Tathai\", \"Tiamhdha\", \"Tighearnach\", \"Tighernach\", \"Tiarnach\", \"Tiarna\", \"Tierney\", \"Tiernan\", \"Toirdhealbhach\", \"Toirdhealbharch\", \"Tairdelbach\", \"Toirealach\", \"Tirloch\", \"Traolach\", \"Turlough\", \"Turley\", \"Torrianus\", \"Treon\", \"Tuathal\", \"Toal\", \"Tyrone\", \"Uaithne\", \"Uar\", \"Uileos\", \"Uillen\", \"Ultan\", \"Urthaile\", \"Usliu\", \"Uthmaran\", \"Vigean\", \"Wyllow\"]], [[\"Tir na n\\u0027Og\", \"Female\"], [\"Aclitenis\", \"Aibfinna\", \"Aifric\", \"Affrica\", \"Ailbe\", \"Ailbhe\", \"Ailidh\", \"Aime\", \"Enya\", \"Aisling\", \"Aislinn\", \"Ashling\", \"Alannah\", \"Almha\", \"Alva\", \"Almu\", \"Alma\", \"Anastas\", \"Anga\", \"Aodhamair\", \"Aodhnait\", \"Aednat\", \"Enat\", \"Aoibh\", \"Aiobheann\", \"Aoibhinn\", \"Eavan\", \"Aoife\", \"Aoiffe\", \"Aeife\", \"Aife\", \"Arlene\", \"Athracht\", \"Attracta\", \"Aurnia\", \"Barran\", \"Beatha\", \"Becuma\", \"Bebin\", \"Befinn\", \"Bevin\", \"Bega\", \"Belocc\", \"Beonill\", \"Berrach\", \"Bearach\", \"Berriona\", \"Bidina\", \"Bil\", \"Bluinse\", \"Bodhbh\", \"Brenda\", \"Breanda\", \"Brigid\", \"Brigit\", \"Cacht\", \"Kentigerna\", \"Quentigerna\", \"Caoilfhionn\", \"Caoilainn\", \"Caelfind\", \"Coelfinnia\", \"Keelin\", \"Caoimhe\", \"Caral\", \"Cathan\", \"Cahan\", \"Kane\", \"Ceara\", \"Cera\", \"Cara\", \"Carra\", \"Ciannait\", \"Ciannata\", \"Ciara\", \"Ciar\", \"Cyra\", \"Keara\", \"Kiera\", \"Ciarda\", \"Cingit\", \"Cliodna\", \"Cliona\", \"Cleena\", \"Clodagh\", \"Cloda\", \"Clothra\", \"Cochrann\", \"Colan\", \"Colleen\", \"Conandil\", \"Conchenn\", \"Coinchind\", \"Conchobarre\", \"Congan\", \"Creda\", \"Crida\", \"Cron\", \"Cuach\", \"Cumman\", \"Daireen\", \"Darina\", \"Damhnait\", \"Damhnat\", \"Davnat\", \"Devnat\", \"Dymphna\", \"Dympna\", \"Dana\", \"Danu\", \"Ana\", \"Anu\", \"Danann\", \"Dareca\", \"Deirbhile\", \"Derval\", \"Dervila\", \"Dervla\", \"Devla\", \"Devorguilla\", \"Decla\", \"Delbchaem\", \"Dercco\", \"Derdraigen\", \"Derdriu\", \"Deirdre\", \"Dierdre\", \"Derg\", \"Devnet\", \"Doireann\", \"Dorean\", \"Doreen\", \"Dorren\", \"Dorinnia\", \"Doirind\", \"Doirend\", \"Dorene\", \"Dorine\", \"Derinn\", \"Donelle\", \"Donnfhlaidh\", \"Donnflaith\", \"Dunflaith\", \"Dunlaith\", \"Dunla\", \"Donla\", \"Downett\", \"Ealga\", \"Echna\", \"Edana\", \"Evle\", \"Evlin\", \"Eihrig\", \"Eilgri\", \"Eimear\", \"Eimhear\", \"Eimer\", \"Evin\", \"Ernin\", \"Eithne\", \"Ethna\", \"Ethne\", \"Ethenia\", \"Ethnea\", \"Etna\", \"Edna\", \"Ena\", \"Elan\", \"Elige\", \"Elva\", \"Enda\", \"Eri\", \"Erin\", \"Etain\", \"Aidin\", \"Faimdid\", \"Fainche\", \"Fanchea\", \"Fand\", \"Fann\", \"Faoiltiarna\", \"Whiltierna\", \"Feidhelm\", \"Fidelma\", \"Feidelma\", \"Fedelma\", \"Fedelim\", \"Feidlim\", \"Fedelm\", \"Delma\", \"Fenit\", \"Find\", \"Findscuap\", \"Finnsech\", \"Finnseach\", \"Finsha\", \"Finna\", \"Fionna\", \"Finnabhair\", \"Fionnabair\", \"Fennore\", \"Fionnghuala\", \"Fionnuala\", \"Finnguala\", \"Fenella\", \"Finella\", \"Finvola\", \"Finola\", \"Flann\", \"Fodla\", \"Fodhla\", \"Fola\", \"Fuamnach\", \"Garb\", \"Gobnait\", \"Gobinet\", \"Gobnat\", \"Gobnata\", \"Gobnet\", \"Gubnet\", \"Gorman\", \"Gormflaith\", \"Gormlaith\", \"Gormla\", \"Gormley\", \"Grania\", \"Granna\", \"Granya\", \"Grian\", \"Guinnear\", \"Hisolda\", \"Hya\", \"Ia\", \"Ibel\", \"Ida\", \"Ita\", \"Ite\", \"Indiu\", \"Inis\", \"Isleen\", \"Keeley\", \"Keelin\", \"Keenat\", \"Kinnat\", \"Labhaoise\", \"Lasairian\", \"Laserian\", \"Laisrian\", \"Lassarina\", \"Lasrina\", \"Lebarcham\", \"Leborcham\", \"Lethann\", \"Liban\", \"Life\", \"Lile\", \"Luigsech\", \"Luighseach\", \"Luigseach\", \"Laoise\", \"Laoiseach\", \"Macha\", \"Magael\", \"Mallaidh\", \"Meadhbh\", \"Maedbh\", \"Maedhbh\", \"Maeve\", \"Meave\", \"Medb\", \"Mave\", \"Meld\", \"Meeda\", \"Mincloth\", \"Mise\", \"Moncha\", \"Monenna\", \"Moninna\", \"Moninne\", \"Mongfhionn\", \"Mongfind\", \"Muadhnait\", \"Muadnat\", \"Muadhnata\", \"Monat\", \"Mona\", \"Mugain\", \"Muirinn\", \"Murinnia\", \"Muirenn\", \"Murainn\", \"Mairenn\", \"Miren\", \"Maren\", \"Muirecht\", \"Muirgen\", \"Muirenn\", \"Miren\", \"Muirgheal\", \"Muirgel\", \"Muiriath\", \"Muirne\", \"Myrna\", \"Merna\", \"Morna\", \"Moina\", \"Moyna\", \"Naomh\", \"Narvla\", \"Neasa\", \"Neassa\", \"Nessa\", \"Ness\", \"Niamh\", \"Neamh\", \"Niam\", \"Neave\", \"Noleen\", \"Nolene\", \"Norlene\", \"Odharnait\", \"Odarnat\", \"Odhamnait\", \"Ornat\", \"Orna\", \"Ownah\", \"Ohnicio\", \"Oilbhe\", \"Orflath\", \"Orlagh\", \"Orla\", \"Osmanna\", \"Paili\", \"Piala\", \"Rathnait\", \"Ranait\", \"Ronit\", \"Rigan\", \"Roighnach\", \"Rynagh\", \"Rinach\", \"Rifach\", \"Roach\", \"Sadhbh\", \"Sadbh\", \"Sabhbh\", \"Sadb\", \"Sive\", \"Sabia\", \"Sabina\", \"Saoirse\", \"Saiorse\", \"Samhaoir\", \"Samthann\", \"Scathach\", \"Sciath\", \"Sinech\", \"Slania\", \"Slanie\", \"Sodelb\", \"Sorcha\", \"Stediana\", \"Taillte\", \"Tailltiu\", \"Tanith\", \"Tathan\", \"Teamhair\", \"Temair\", \"Tara\", \"Teath\", \"Tlachtga\", \"Treasa\", \"Tuilelaith\", \"Talulla\", \"Oona\", \"Oonagh\", \"Una\"]], [[\"Tir na n\\u0027Og\", \"Last\"], [\"Adair\", \"Addis\", \"Agnew\", \"Ahearn\", \"Ahern\", \"Aherne\", \"Aird\", \"Aitken\", \"Anglum\", \"Antisdel\", \"Armitage\", \"Armytage\", \"Armidage\", \"Armedy\", \"Athey\", \"Auchinlek\", \"Autrey\", \"Baggett\", \"Bain\", \"Baird\", \"Ball\", \"Ballagh\", \"Ballantyne\", \"Bambrick\", \"Banan\", \"Bannan\", \"Bannon\", \"Banff\", \"Hogg\", \"Hogge\", \"Barde\", \"Barken\", \"Barkey\", \"Barret\", \"Barrett\", \"Barrington\", \"Barry\", \"Berry\", \"Battle\", \"Bean\", \"Gilwaine\", \"Beatty\", \"Begg\", \"Beggs\", \"Begley\", \"Bagley\", \"Behan\", \"Beahan\", \"Beirne\", \"Bernnan\", \"Berrigan\", \"Bestick\", \"Beyers\", \"Biggar\", \"Begar\", \"Bera\", \"Binchy\", \"Binsley\", \"Bird\", \"Blair\", \"Blaire\", \"Blevins\", \"Blighe\", \"Blow\", \"Boehn\", \"Bohan\", \"Boland\", \"Bolger\", \"Bonner\", \"Boone\", \"Boran\", \"Boren\", \"Borin\", \"Boring\", \"Bouring\", \"Bouey\", \"Boughy\", \"Boey\", \"Bourns\", \"Burns\", \"Bowler\", \"Boyce\", \"Boyd\", \"Boyde\", \"Boylan\", \"Boyle\", \"Beahilly\", \"Beale\", \"Beatley\", \"Braden\", \"Bradin\", \"Bradley\", \"Brady\", \"Brahan\", \"Brangan\", \"Brannigan\", \"Brann\", \"Bray\", \"Brazael\", \"Brazil\", \"Breen\", \"McBreen\", \"Brennan\", \"Brenan\", \"Brennen\", \"Breslin\", \"Brislane\", \"Bresnahan\", \"Brickin\", \"Broder\", \"Bradner\", \"Brothers\", \"Brodie\", \"Brody\", \"Brodiff\", \"Brogan\", \"Brophy\", \"Broghie\", \"Brosnahan\", \"Brosnan\", \"Bruen\", \"Brune\", \"Bruin\", \"Brynes\", \"Brynnock\", \"Buggy\", \"Burk\", \"Burke\", \"Bourke\", \"Burge\", \"Burnes\", \"Burns\", \"Byrne\", \"Byrnes\", \"Byrns\", \"Lyster\", \"Cadden\", \"Cadogan\", \"Cady\", \"Callaghan\", \"Callahan\", \"Calahan\", \"Callan\", \"Callanan\", \"Callinan\", \"Camden\", \"Caden\", \"Canavan\", \"Canovan\", \"Cannan\", \"Cannon\", \"McCannon\", \"Canty\", \"Carey\", \"Cary\", \"Carrie\", \"Carlin\", \"Carmichael\", \"Carney\", \"Carolan\", \"Carton\", \"MacCarton\", \"Carvel\", \"Casey\", \"Cash\", \"Kilcash\", \"Cashion\", \"Caskey\", \"Cass\", \"Casserly\", \"Cassidy\", \"Catny\", \"Kane\", \"Cavin\", \"Cayley\", \"Childers\", \"Claffey\", \"Clancy\", \"Cleary\", \"Clery\", \"Clary\", \"Clear\", \"McClary\", \"McCleary\", \"MacCleery\", \"Clingan\", \"Cloherty\", \"Clohessy\", \"Cloony\", \"Close\", \"Clune\", \"Clyne\", \"Coady\", \"Cody\", \"Coakley\", \"Cochran\", \"Cochrane\", \"Coffee\", \"Coffey\", \"Cowhig\", \"Coggins\", \"Coholan\", \"Colahan\", \"Colclough\", \"Colcroft\", \"Coleman\", \"Coalman\", \"Colgan\", \"MacColgan\", \"Colley\", \"Collins\", \"Collings\", \"Colvin\", \"Comer\", \"Comerford\", \"Comsford\", \"Comey\", \"Comiskey\", \"Comisky\", \"Cummisky\", \"Conaghan\", \"Conalty\", \"Concannon\", \"Condon\", \"Condron\", \"Conheady\", \"Conklin\", \"Conlan\", \"Conlin\", \"Conlon\", \"Colwan\", \"Conn\", \"Connaughtan\", \"Conattan\", \"Conneely\", \"Coneely\", \"Connelly\", \"Connole\", \"Connolly\", \"Conley\", \"Conly\", \"Connel\", \"Connell\", \"MacConnal\", \"McConnell\", \"Connich\", \"Connor\", \"Connors\", \"Conner\", \"Conyers\", \"Conroy\", \"Conry\", \"Connery\", \"Mulconrey\", \"Considine\", \"Conway\", \"Convy\", \"Coogan\", \"Cowgan\", \"Coolacan\", \"Coolahan\", \"Coonan\", \"Quinan\", \"Cooney\", \"Corbett\", \"Corcoran\", \"Corey\", \"Corry\", \"Corr\", \"Corkin\", \"Corliss\", \"Corner\", \"Cornynn\", \"Corrigan\", \"Cosby\", \"Foote\", \"Cosgrave\", \"Cosgriff\", \"Cosgrove\", \"Costello\", \"Costigan\", \"Cotter\", \"Cottle\", \"Cottrell\", \"Coughlan\", \"Coughlin\", \"Coglan\", \"Coulter\", \"Counagh\", \"Counahan\", \"Counihan\", \"Cournane\", \"Cowley\", \"Coyle\", \"Coyne\", \"Koin\", \"Kean\", \"Keane\", \"Kane\", \"Kain\", \"Cain\", \"Cragin\", \"Creagh\", \"Cregg\", \"Creary\", \"Creaven\", \"Creedan\", \"Creed\", \"Creegan\", \"Cregan\", \"Creagon\", \"Crehan\", \"Crean\", \"Cremen\", \"Cremin\", \"Cremins\", \"Crimmins\", \"Cribban\", \"Crilley\", \"Crilly\", \"Krily\", \"Croak\", \"Croake\", \"Croke\", \"Croker\", \"Croghan\", \"Cronan\", \"Cronin\", \"Crosbie\", \"Crosby\", \"Crosgrove\", \"Crossin\", \"Crotty\", \"Crowley\", \"Crawley\", \"Cruise\", \"Crummer\", \"Cuddihy\", \"Cuddy\", \"Culhane\", \"Cullen\", \"Cullinane\", \"Culley\", \"Cullie\", \"Culliton\", \"Culloty\", \"Cummin\", \"Cumming\", \"Cummins\", \"Cummings\", \"Cunniam\", \"Cunnion\", \"Canning\", \"Cunniff\", \"Cunningham\", \"Conyngham\", \"Cunnigan\", \"Curley\", \"Kirley\", \"Curnane\", \"Curran\", \"Currin\", \"Curren\", \"Currie\", \"Curry\", \"Cury\", \"Curtin\", \"Curtis\", \"Curtiss\", \"Cusack\", \"Cusick\", \"Cushing\", \"Cussen\", \"Cuskley\", \"Dacey\", \"Dagan\", \"Daly\", \"Dailey\", \"Daily\", \"Daley\", \"Darby\", \"Dardis\", \"Dargan\", \"Darmody\", \"Darragh\", \"Daunt\", \"Davoran\", \"De\", \"La\", \"Mare\", \"Delamore\", \"De\", \"Loughry\", \"Delury\", \"Deady\", \"Deahl\", \"Deasy\", \"Deeney\", \"Deeny\", \"Deery\", \"Defferary\", \"Deghy\", \"Delahunty\", \"Dolohanty\", \"Delaney\", \"Delany\", \"Delvin\", \"Dempsey\", \"Dennehy\", \"Danaher\", \"Danahy\", \"Danihey\", \"Derrick\", \"Derrig\", \"Desmond\", \"DeVaney\", \"Devaney\", \"Devany\", \"Duane\", \"Duany\", \"Devereaux\", \"Devereux\", \"Devery\", \"Devine\", \"Devinn\", \"Devlin\", \"Devrin\", \"Dewey\", \"Diamond\", \"Dimond\", \"Diarmid\", \"Diegnan\", \"Dignen\", \"Digney\", \"Dillon\", \"Dinneen\", \"Dissett\", \"Dixon\", \"Doble\", \"Docherty\", \"Doherty\", \"Daugherty\", \"Dougherty\", \"Dockery\", \"Doheny\", \"Dolan\", \"Donaghue\", \"Donoghue\", \"Donahue\", \"Donoho\", \"Donohue\", \"Donachie\", \"Donaghy\", \"Donegan\", \"Doney\", \"Denny\", \"Donlan\", \"Donlin\", \"Donlon\", \"Donlevy\", \"Donnellan\", \"Donelan\", \"Donnelly\", \"Donovan\", \"Donavan\", \"Doody\", \"Doogan\", \"Doohan\", \"Doolan\", \"Dooley\", \"Dooling\", \"Doon\", \"Dooney\", \"Doraghy\", \"Doran\", \"Dorrian\", \"Dore\", \"Dorgan\", \"Dornan\", \"Dorsey\", \"Dorcey\", \"Dorcy\", \"Darcy\", \"Darkey\", \"Dowey\", \"Dowglas\", \"Dowling\", \"Du\", \"Laing\", \"Laing\", \"Downer\", \"Downes\", \"Downey\", \"Doyle\", \"Dougill\", \"Drew\", \"Driscoll\", \"Drohan\", \"Drum\", \"Drummond\", \"Duff\", \"Duffey\", \"Duffy\", \"Dufficy\", \"Duvegan\", \"Dugan\", \"Duggan\", \"Duignan\", \"Dougan\", \"Doughan\", \"Drum\", \"Drummond\", \"Duhig\", \"Duignen\", \"Dulleran\", \"Dunkin\", \"Dunn\", \"Dunne\", \"Dun\", \"Dunphy\", \"Dunwoody\", \"Dinwiddie\", \"Durack\", \"Durick\", \"Durrick\", \"Durrig\", \"Durkin\", \"Durning\", \"Dwyer\", \"Dyal\", \"Dynes\", \"Earles\", \"Earley\", \"Egan\", \"Eagen\", \"Ellig\", \"Eurell\", \"Yourell\", \"Fagan\", \"Faherty\", \"Fahey\", \"Fahy\", \"Fallon\", \"Fane\", \"Fanning\", \"Faricy\", \"Farley\", \"Farnan\", \"Farner\", \"Farran\", \"Farren\", \"Heverine\", \"Farrell\", \"Farrall\", \"Farrelly\", \"Ferrell\", \"Faucett\", \"Fausset\", \"Fay\", \"Fayre\", \"Milford\", \"Fealy\", \"Feeley\", \"Feely\", \"Fehily\", \"Pickley\", \"Fearon\", \"Feehan\", \"Feeney\", \"Feeny\", \"Feennell\", \"Feherty\", \"Fennelly\", \"Fennessy\", \"Finnessey\", \"Fenney\", \"Ferney\", \"Ferrick\", \"Ferris\", \"Ferry\", \"Fessey\", \"Finan\", \"Finnin\", \"Fynan\", \"Finn\", \"Finnegan\", \"Finnigan\", \"Finneran\", \"Finnerty\", \"Finsley\", \"Finucane\", \"Fitzgerald\", \"Fitzgibbon\", \"Fitzmaurice\", \"Fitzmorris\", \"Fitzpatrick\", \"Fitzsimmons\", \"Fitzsimons\", \"Flaherty\", \"Flanagan\", \"Flannagan\", \"Flannigan\", \"Flannelly\", \"Flannery\", \"Flatly\", \"Flatilly\", \"Flattery\", \"Flavin\", \"Flood\", \"Floody\", \"Flynn\", \"Fogarty\", \"Folan\", \"Foley\", \"Folgan\", \"Follis\", \"Foody\", \"Foorde\", \"Ford\", \"Foote\", \"MacCoshy\", \"Forbes\", \"Firbis\", \"Forhan\", \"Foran\", \"Fornan\", \"Forristal\", \"Foskey\", \"Foy\", \"Frawley\", \"Freeney\", \"Freethy\", \"Frenshe\", \"French\", \"Ffrench\", \"Friel\", \"Friery\", \"Furey\", \"Furlong\", \"Furphy\", \"Furfy\", \"Fursey\", \"Gaff\", \"Gaffey\", \"Gaffney\", \"Gaffigan\", \"Galbrath\", \"Galligan\", \"Gallagan\", \"Gealan\", \"Geelan\", \"Gallager\", \"Gallagher\", \"Gallaher\", \"Gallahue\", \"Gallivan\", \"Galvin\", \"Gambell\", \"Gamble\", \"Ganly\", \"Gannon\", \"Ginnane\", \"Gant\", \"Garigher\", \"Garr\", \"Garrahan\", \"Garvey\", \"Garvy\", \"McGarvey\", \"Garvin\", \"Gasaway\", \"Gately\", \"Keightley\", \"Catley\", \"Gatens\", \"Gaughan\", \"Gahan\", \"Gavaghan\", \"Gavigan\", \"Gavin\", \"Geary\", \"Gerry\", \"McGeary\", \"Gehan\", \"Gahan\", \"Gettins\", \"Genty\", \"Geoghan\", \"Geoghegan\", \"Gegan\", \"Geraghty\", \"Gerrety\", \"Garraghty\", \"Garrett\", \"Garritty\", \"Heraghty\", \"Herity\", \"Harrington\", \"Ghaney\", \"Gibney\", \"Gielty\", \"Gilbride\", \"Gildae\", \"Gilday\", \"Gildea\", \"Gilfillon\", \"Gilfoyle\", \"Guilfoyle\", \"MacGilfoyle\", \"Paul\", \"Gilhooly\", \"Gilhuley\", \"Gillan\", \"Gillen\", \"Gillespie\", \"Gillham\", \"Gilligan\", \"Gilgun\", \"Gillin\", \"Gillmor\", \"Gilmer\", \"Gilmore\", \"Gilmartin\", \"Gilpin\", \"Gilfin\", \"Gill\", \"Gilroy\", \"Gilsenan\", \"Giltinan\", \"Giltinane\", \"Ginnaty\", \"Glancey\", \"Glansey\", \"Gleason\", \"Gleeson\", \"Glennon\", \"Glenin\", \"Glinn\", \"Gloin\", \"Glynn\", \"Goddan\", \"Godsil\", \"Gogarty\", \"Goggin\", \"Gollogly\", \"Gallogy\", \"Ingoldsby\", \"Maclnogly\", \"Gorey\", \"Gorham\", \"Gorman\", \"GormillyGormally\", \"Gormley\", \"Grimley\", \"Goslin\", \"Gough\", \"Goffe\", \"Goff\", \"McGough\", \"Gourley\", \"Governey\", \"Grakane\", \"Granard\", \"Graney\", \"Grannan\", \"Gratten\", \"Graulty\", \"Greaney\", \"Greany\", \"Greehy\", \"Greeley\", \"Greer\", \"Gregan\", \"Greghan\", \"Grehan\", \"Crehan\", \"Gregg\", \"Gribbin\", \"Griffen\", \"Griffin\", \"Griffy\", \"Guinan\", \"Guiney\", \"Gunning\", \"Gurnett\", \"Guthrie\", \"Hackett\", \"Hadden\", \"Haffey\", \"Hafner\", \"Hagan\", \"Halley\", \"Hailey\", \"Hale\", \"Haley\", \"Ally\", \"Haliday\", \"Hallahan\", \"Halligan\", \"Hallinan\", \"Halloran\", \"Hallaren\", \"Halpin\", \"Hamill\", \"Hammill\", \"Hand\", \"Handran\", \"Haney\", \"Hanifan\", \"Hanifin\", \"Hanley\", \"Handley\", \"Hanly\", \"Hanlin\", \"Hanlon\", \"Hanna\", \"Hannan\", \"Hannon\", \"Hannigan\", \"Hannity\", \"Hanrahan\", \"Hanratty\", \"Haran\", \"Harden\", \"Hardiman\", \"Harkin\", \"Harkins\", \"Harney\", \"Harrigan\", \"Hart\", \"Heart\", \"Hartigan\", \"Hartnett\", \"Harty\", \"Harvey\", \"Hatchell\", \"Hatty\", \"Hetty\", \"Haugh\", \"Haughee\", \"Hoy\", \"Hoey\", \"Hawe\", \"Howe\", \"Haughion\", \"Hay\", \"Hayes\", \"Hays\", \"Hughes\", \"Heaney\", \"Heany\", \"Healey\", \"Healy\", \"Heanaghan\", \"Heasty\", \"Hefferman\", \"Heffernan\", \"Hegarty\", \"Hegerty\", \"Hagerty\", \"Haggerty\", \"Heggessy\", \"Hellam\", \"Hellon\", \"Hellowell\", \"Helvick\", \"Helwick\", \"Henchion\", \"Henebry\", \"Henly\", \"Hennley\", \"Henn\", \"Hennaghan\", \"Heneghan\", \"Hennessey\", \"Hennessy\", \"Hennesy\", \"Herlihy\", \"Hurley\", \"Hernan\", \"Hernon\", \"Herne\", \"Hearn\", \"Hearne\", \"Hurn\", \"Heron\", \"Heslin\", \"Hetherington\", \"Hett\", \"Hickey\", \"Hinchey\", \"Hinchion\", \"Hoar\", \"Hoare\", \"Hoban\", \"Hobin\", \"Hogan\", \"Hoke\", \"Holland\", \"Holley\", \"Holly\", \"Holligan\", \"Holian\", \"Holohan\", \"Holohan\", \"Horan\", \"Hamran\", \"Horgan\", \"Hough\", \"Houlihan\", \"Houneen\", \"Hourahane\", \"Hourigan\", \"Hughes\", \"Hurley\", \"Harley\", \"Hurst\", \"Hussey\", \"Oswell\", \"Hyland\", \"Hynes\", \"Ivers\", \"Ivors\", \"McIvor\", \"Jardan\", \"Kane\", \"Kavanagh\", \"Kavanaugh\", \"Kavangh\", \"Kaveny\", \"Cavanagh\", \"Cavanah\", \"Cavanaugh\", \"Keveny\", \"Kevin\", \"Cowen\", \"Cohen\", \"Coen\", \"Keane\", \"Kane\", \"Kyan\", \"Keaney\", \"Kearn\", \"Kearns\", \"Kearins\", \"Kearney\", \"Carney\", \"Keary\", \"McKeighry\", \"Keating\", \"Keatinge\", \"Ceitinn\", \"Keaty\", \"Keedy\", \"Keegan\", \"Keeghan\", \"Cockane\", \"Keelan\", \"Keelchan\", \"MacCallin\", \"Keeler\", \"Keelty\", \"Kelty\", \"Kielty\", \"Kilty\", \"Keely\", \"Kealey\", \"Keily\", \"Kiely\", \"Kaely\", \"Cayley\", \"Keenan\", \"Keevan\", \"Kehoe\", \"Keirans\", \"Kieran\", \"Kellahan\", \"Kellegher\", \"Kelleher\", \"Kellett\", \"Kelly\", \"Kelley\", \"Kenehan\", \"Kenn\", \"Kenna\", \"Kenneally\", \"Kennealy\", \"Keneally\", \"Kenealy\", \"Kennelly\", \"Kenelly\", \"Kennedy\", \"Kenney\", \"Kenny\", \"Kennyon\", \"Canning\", \"Keohane\", \"Keough\", \"Keogh\", \"McKeough\", \"Kernaghan\", \"Kernan\", \"Kerr\", \"Kerrigan\", \"Kerrin\", \"Kerruish\", \"Kevigan\", \"Keyes\", \"Kilbain\", \"Kilbride\", \"Kilbridge\", \"Kilcullen\", \"Kilduff\", \"Gilduff\", \"Kilfeather\", \"Kilgallon\", \"Kilgannon\", \"Kilgore\", \"Kilkelly\", \"Killikelly\", \"Kilkenny\", \"Killeen\", \"Killin\", \"Culleen\", \"Killick\", \"Killpatrick\", \"Kilmartin\", \"Kilmeade\", \"Kinahan\", \"Kinealy\", \"Kinnane\", \"Kinnavy\", \"Kinsella\", \"Kirby\", \"Kirwan\", \"Kerwin\", \"Kivlahen\", \"Kivlehan\", \"Kneafsey\", \"Kyle\", \"Lacey\", \"Lacy\", \"Laffan\", \"Laing\", \"Lalley\", \"Lally\", \"Lamb\", \"Lambe\", \"Lambkin\", \"Lanaghan\", \"Lanahan\", \"Lannigan\", \"Lanigan\", \"Lanergan\", \"Langan\", \"Lannen\", \"Landregan\", \"Landrigan\", \"Lane\", \"Lappin\", \"Largay\", \"Larkin\", \"Larcom\", \"Latteray\", \"Laughead\", \"LaVelle\", \"Lavelle\", \"Lavender\", \"LaVerge\", \"Laverty\", \"Lafferty\", \"Lavery\", \"Lavin\", \"Lavy\", \"Laffey\", \"Law\", \"Lawder\", \"Lawless\", \"Lawlor\", \"Lawler\", \"Lalor\", \"Lawn\", \"Lawton\", \"Lehan\", \"Leasy\", \"Larrisy\", \"Leavy\", \"Levy\", \"Ledwich\", \"Ledwick\", \"Ledwidge\", \"Lee\", \"Leehey\", \"Leehy\", \"Leahy\", \"Leigh\", \"Lye\", \"Lemon\", \"Lenergan\", \"Lennon\", \"Lannen\", \"Lennox\", \"Lenty\", \"Lente\", \"Leraton\", \"Lester\", \"Liddane\", \"Liddy\", \"Liggan\", \"Lilly\", \"Leach\", \"Leech\", \"Leitch\", \"Linighan\", \"Linnegan\", \"Lenihan\", \"Linehan\", \"Linnane\", \"Linton\", \"Loane\", \"Lockhart\", \"Logan\", \"Logue\", \"Lomasney\", \"Lonergan\", \"Londergan\", \"Longhan\", \"Looby\", \"Luby\", \"Loody\", \"Ludy\", \"Looney\", \"Loounane\", \"Lord\", \"Lorden\", \"Lorigan\", \"Largan\", \"Legge\", \"Louden\", \"Loughnane\", \"Loughnam\", \"Loughran\", \"Loughrin\", \"Lowry\", \"Lowery\", \"Lucey\", \"Lucy\", \"Lundie\", \"Lundragon\", \"Lunney\", \"Lunshekaun\", \"Luxom\", \"Lyden\", \"Lydican\", \"Lydon\", \"Lyman\", \"Lynagh\", \"Lynam\", \"Lynsky\", \"Lynch\", \"Lyons\", \"Lyttle\", \"Little\", \"Macaleese\", \"MacAlevy\", \"MacAllen\", \"MacAllister\", \"MacAnally\", \"McAnally\", \"MacNally\", \"McNally\", \"MacAndrew\", \"McAndrew\", \"McAndrews\", \"Andrews\", \"Macaninch\", \"MacArdle\", \"McArdle\", \"McAsey\", \"MacAteer\", \"Macteer\", \"MacAuley\", \"Macauley\", \"McAuley\", \"McCauley\", \"McCauly\", \"McCawley\", \"McAuliff\", \"McAuliffe\", \"Macauliffe\", \"Macavaddy\", \"McAvay\", \"McAway\", \"MacAvee\", \"Kilboy\", \"Gilboy\", \"MacBrehon\", \"MacBride\", \"McBride\", \"McBurney\", \"MacCabe\", \"McCabe\", \"MacCafferky\", \"MacCafferty\", \"MacCaffrey\", \"Caffrey\", \"McCaffery\", \"McCaffrey\", \"Caffrey\", \"MacCall\", \"McCall\", \"Call\", \"McCamly\", \"MacCann\", \"McCann\", \"McCanna\", \"McCarl\", \"MacCarron\", \"MacCarroon\", \"MacCarhon\", \"Carron\", \"Carson\", \"MacCarthy\", \"McCarthy\", \"McCarty\", \"Carthy\", \"Carty\", \"MacCarrick\", \"MacCaughan\", \"MacCaw\", \"MacCecht\", \"MacCiochain\", \"McClatchey\", \"McClay\", \"McClelland\", \"Cleland\", \"MacClintock\", \"McClinton\", \"McClire\", \"McClory\", \"McClughan\", \"MacClumpha\", \"MacClure\", \"McClure\", \"MacCluskey\", \"MacCloskey\", \"McCloskey\", \"MacClosky\", \"McCluskey\", \"Closky\", \"MacCochlann\", \"McCollum\", \"MacConaughey\", \"McConaughey\", \"McConnville\", \"McConville\", \"MacConrai\", \"MacCormack\", \"MacCormick\", \"McCormack\", \"McCormick\", \"McCromick\", \"MacCorquodale\", \"MacCourt\", \"MacCort\", \"McCord\", \"MacCoy\", \"McCoy\", \"MacCracken\", \"McCracken\", \"MacCready\", \"Macredie\", \"MacCruddan\", \"MacCrudden\", \"Cruden\", \"MacCuill\", \"MacCulloch\", \"MacCullough\", \"McCulloch\", \"McCullough\", \"MacCune\", \"MacCuolahan\", \"MacCusker\", \"Mccusker\", \"MacDaid\", \"MacDermott\", \"McDermott\", \"Carmody\", \"Kermode\", \"Kermody\", \"Diarmid\", \"MacDevitt\", \"McDevitt\", \"Devitt\", \"MacDonagh\", \"MacDonough\", \"McDonough\", \"MacDonald\", \"McDonald\", \"MacDonnell\", \"McDonnell\", \"MacDowel\", \"MacEachern\", \"MacElderry\", \"McElhatton\", \"McEllgunn\", \"MacElligot\", \"MacElligott\", \"MacEllistrim\", \"MacEnery\", \"McEnhill\", \"MacEnroe\", \"MacEnchroe\", \"McEntee\", \"MacEochagan\", \"MacEvilly\", \"MacEvoy\", \"McAvoy\", \"McEvoy\", \"MacFadden\", \"McFadden\", \"MacFall\", \"MacFarland\", \"Macfarlane\", \"Parlan\", \"McGaghran\", \"McGaughren\", \"McGalloway\", \"Galwey\", \"MacGann\", \"MacGarrigle\", \"MacGarry\", \"McGarry\", \"Garry\", \"McGaughy\", \"McGahey\", \"McGauley\", \"Gaule\", \"McGavisk\", \"McGaw\", \"MacGee\", \"McGee\", \"Magee\", \"MacGeogh\", \"McGeough\", \"MacGil\", \"MacGill\", \"Magill\", \"Gill\", \"MacGillycuddy\", \"McGillicuddy\", \"McGilton\", \"MacGinley\", \"McGinley\", \"McKinley\", \"MacGinn\", \"McGinn\", \"McGing\", \"McGinty\", \"McGinity\", \"McGivney\", \"MacGlashan\", \"MacGlinchy\", \"MacGlynn\", \"MacGolderick\", \"MacGoldrick\", \"McGoldrick\", \"Goderich\", \"Golding\", \"Goulding\", \"Golden\", \"Goldrick\", \"Waller\", \"McGonigal\", \"McGonigie\", \"McGourty\", \"MacGovern\", \"McGovern\", \"MacGowan\", \"MacGowran\", \"McGowan\", \"Gowran\", \"McGrail\", \"McGreal\", \"MacGranahan\", \"Granaghan\", \"Granahan\", \"MacGrane\", \"MacGreine\", \"MacGrath\", \"McGrath\", \"MacGraw\", \"McGraw\", \"McGreevy\", \"MacGrogan\", \"Grogan\", \"McGuckin\", \"Guckeen\", \"Guckian\", \"McGuigan\", \"Maguiggan\", \"Goodwin\", \"Godwin\", \"MacGuinness\", \"Macginnis\", \"McGinnis\", \"MacGenis\", \"McGuinness\", \"Guiness\", \"MacGuire\", \"McGuire\", \"Maguire\", \"Macgwire\", \"MacGuirk\", \"McGuirk\", \"McGunn\", \"MacHoneen\", \"Green\", \"Greene\", \"Tonyson\", \"Tennyson\", \"MacHugh\", \"MacQue\", \"McHugh\", \"McCue\", \"McIlmail\", \"McIlmale\", \"MacIlrea\", \"Kilrea\", \"MacIlroy\", \"McElroy\", \"MacIlvany\", \"McIlveen\", \"MacIlvenna\", \"McIlwee\", \"MacInerney\", \"McInerney\", \"MacIntyre\", \"McIntire\", \"McIntyre\", \"MacInver\", \"Maginver\", \"Gaynor\", \"Mack\", \"Mackay\", \"Mackee\", \"Mackey\", \"MacKey\", \"McKay\", \"McKee\", \"McKean\", \"McKane\", \"McKechnie\", \"McKeever\", \"McGeever\", \"McKeighry\", \"MacKelvey\", \"McKelvy\", \"Macken\", \"MacKenna\", \"McKenna\", \"MacKeon\", \"Mackeone\", \"Mackeown\", \"McKeown\", \"MacOwen\", \"McKiernan\", \"Kiernan\", \"MacKinnawe\", \"McKinney\", \"Kinney\", \"McKinnon\", \"McKitrick\", \"McKittrick\", \"McLaren\", \"MacLarty\", \"MacLaughlin\", \"MacLoughlin\", \"McLaughlin\", \"McLouglin\", \"Magloughlin\", \"Loughlin\", \"MacLean\", \"McLain\", \"MacLysaght\", \"Lysaght\", \"McMaham\", \"MacMahon\", \"McMahon\", \"McMahan\", \"McManamin\", \"McMenamin\", \"MacManus\", \"McManus\", \"MacMathan\", \"McMerriman\", \"Merryman\", \"Merriman\", \"MacMonagle\", \"McMullen\", \"Mullan\", \"Mullane\", \"Mullen\", \"MacNamara\", \"McNamara\", \"MacNamee\", \"McNamee\", \"Meath\", \"Mee\", \"McNaughton\", \"Naughton\", \"MacNebo\", \"MacNaboe\", \"McNeese\", \"MacNeice\", \"MacNeill\", \"MacNeil\", \"McNeil\", \"McNellis\", \"McNelis\", \"McNelly\", \"Nellis\", \"McNerney\", \"MacNevin\", \"Nevin\", \"McNicholas\", \"MacNulty\", \"McNulty\", \"MacParlan\", \"McParlan\", \"McParland\", \"McParlin\", \"Bat\", \"Bats\", \"Batson\", \"Bateson\", \"McPike\", \"Pike\", \"McQuade\", \"Quaid\", \"MacQuilkin\", \"MacQuillan\", \"MacQuillen\", \"McQuillan\", \"MacQuilly\", \"MacQuirk\", \"Quirk\", \"Quirke\", \"MacRaith\", \"MacReamoinn\", \"McRickard\", \"MacRory\", \"MacCrory\", \"McCrory\", \"McCrary\", \"MacShane\", \"McShane\", \"McSherry\", \"MacSorley\", \"McSorley\", \"MacTague\", \"MacTeig\", \"McTigue\", \"MacTavish\", \"MacIltavish\", \"MacUlhaney\", \"McElhinney\", \"MacVeigh\", \"McVeigh\", \"McVeigh\", \"McVerry\", \"McWay\", \"McWey\", \"McWilliams\", \"Madden\", \"Madigan\", \"Magauran\", \"Magettigan\", \"Magilsinan\", \"Magnan\", \"Magoran\", \"Orume\", \"Orme\", \"Magunshinan\", \"Mahaffy\", \"Mahaney\", \"Maher\", \"Mahar\", \"Mahonen\", \"Mahoney\", \"Mahonny\", \"Mahorney\", \"Maines\", \"Makens\", \"Malcan\", \"Malia\", \"Mallin\", \"Mallon\", \"Mallen\", \"Malloy\", \"Malone\", \"Maloney\", \"Malony\", \"Malonny\", \"Mullowne\", \"Mullowney\", \"Mullooney\", \"Mandy\", \"Mangan\", \"Mongan\", \"Mungen\", \"Manley\", \"Manly\", \"Mannion\", \"Mannix\", \"Manix\", \"Markam\", \"Horseman\", \"Ryder\", \"Markey\", \"Markley\", \"Maroney\", \"Marr\", \"Marren\", \"Maskey\", \"Massey\", \"Massie\", \"Matchett\", \"Mawhinney\", \"May\", \"Mayclin\", \"Mayo\", \"Meachar\", \"Meade\", \"Meagher\", \"Meehan\", \"Meekin\", \"Meenehan\", \"Minahan\", \"Mynahan\", \"Megahey\", \"Megarity\", \"Meighan\", \"Melaven\", \"Mellan\", \"Mellon\", \"Mellen\", \"Melloy\", \"Meloy\", \"Melody\", \"Menagh\", \"Menton\", \"Mergin\", \"Bergin\", \"Bergan\", \"Bergen\", \"Mernagh\", \"Meyler\", \"Mhaolain\", \"Miley\", \"Millan\", \"Millett\", \"Milford\", \"Millia\", \"Milligan\", \"Millikin\", \"Minikin\", \"Minnick\", \"Minto\", \"Moghan\", \"Mohan\", \"Molan\", \"Molina\", \"Molloy\", \"Molone\", \"Moloney\", \"Monaghan\", \"Monahan\", \"Monohan\", \"Mongan\", \"Monarty\", \"Monteith\", \"Moody\", \"Moonen\", \"Mooney\", \"Meeny\", \"Moraghan\", \"Morahan\", \"Moran\", \"Morell\", \"Morley\", \"Moriarity\", \"Moriarty\", \"Moriaty\", \"Moroney\", \"Moroni\", \"Morrin\", \"Morrissey\", \"Morrisy\", \"Morrow\", \"Motley\", \"Mottley\", \"Moyles\", \"Moiles\", \"Moles\", \"Moynagh\", \"Moynihan\", \"Mugan\", \"Muintirceallaigh\", \"Muintirlideadha\", \"Mulally\", \"Mulcahy\", \"Muldoon\", \"Muldown\", \"Mulgrew\", \"Mulgrue\", \"Mulharen\", \"Mulhearn\", \"Mulheron\", \"Mulholland\", \"Mullholan\", \"Mullholand\", \"Mulkeen\", \"Mulkeerrinn\", \"Mullally\", \"Mullaney\", \"Mullarkey\", \"Mullattin\", \"Molohan\", \"Molohon\", \"Mulligan\", \"Mullgan\", \"Mullin\", \"Mullins\", \"Mulratty\", \"Malet\", \"Ratten\", \"Rait\", \"Mulrenan\", \"Mulrennan\", \"Mulrooney\", \"Moroni\", \"Mulroy\", \"Roy\", \"Mulroyne\", \"Mulvaney\", \"Mulvanney\", \"Mulvany\", \"Mulvey\", \"Mulvihil\", \"Mulvihill\", \"Mulvehill\", \"Mundell\", \"Mungavan\", \"Munley\", \"Murdock\", \"Murnaghan\", \"Mynahan\", \"Murphy\", \"Morphie\", \"MacMorrow\", \"MacMarray\", \"MacMurray\", \"MacMurrough\", \"Morell\", \"Murray\", \"Murtagh\", \"Murtaugh\", \"Murty\", \"Mortimer\", \"Mylett\", \"Myrick\", \"Nagle\", \"Nangle\", \"Nash\", \"Neal\", \"Nealon\", \"Neilan\", \"Neary\", \"Nee\", \"Nelligan\", \"Nesbit\", \"Nesbitt\", \"Nesdale\", \"Nimmons\", \"Nogan\", \"Nohilly\", \"Nolan\", \"Noolan\", \"Nolin\", \"Nowlan\", \"Noone\", \"Noon\", \"Noonan\", \"Nuana\", \"Norris\", \"Nugent\", \"Nunnally\", \"Brine\", \"Briun\", \"Brin\", \"Carroll\", \"Dowd\", \"Dowdy\", \"Doud\", \"Ogan\", \"Grady\", \"Hare\", \"Hehir\", \"Hare\", \"Hastings\", \"Owens\", \"Keefe\", \"Leary\", \"Maley\", \"Meara\", \"Mara\", \"Mulloy\", \"Neele\", \"Neely\", \"Riordan\", \"Reardon\", \"Readon\", \"Orman\", \"Orr\", \"Rourke\", \"Roark\", \"Rooke\", \"Shay\", \"Shea\", \"Shaw\", \"Sullivan\", \"Silver\", \"Silvers\", \"Pace\", \"Padden\", \"Paden\", \"Paibht\", \"Palmer\", \"Parkhill\", \"Parle\", \"Patton\", \"Payne\", \"Pender\", \"Perry\", \"Phelan\", \"Pierce\", \"Peirce\", \"Plannery\", \"Plunkett\", \"Power\", \"Powers\", \"Prendergast\", \"Pendergast\", \"Punty\", \"Quaine\", \"Quan\", \"Qualey\", \"Quealey\", \"Quigg\", \"Quigley\", \"Quilligan\", \"Quinan\", \"Quinlan\", \"Quinlivan\", \"Quinn\", \"Rabbit\", \"Rabbitt\", \"Radden\", \"Ravan\", \"Radwin\", \"Rafferty\", \"Rafter\", \"Raftery\", \"Rainey\", \"Rattigan\", \"Ratigan\", \"Rhatigan\", \"Ratty\", \"Rea\", \"Regan\", \"Reagan\", \"Reavey\", \"Redden\", \"Reddin\", \"Redican\", \"Reed\", \"Reid\", \"Reedy\", \"Ready\", \"Reidy\", \"Reen\", \"Reilly\", \"Riley\", \"Relihan\", \"Renehan\", \"Ranahan\", \"Riddle\", \"Rigney\", \"Roach\", \"Roache\", \"Roche\", \"Robey\", \"Robie\", \"Roby\", \"Rock\", \"Rocks\", \"Roden\", \"Grayden\", \"Rogan\", \"Rohan\", \"Rolan\", \"Rollan\", \"Rollin\", \"Rowlan\", \"Rowley\", \"Rowland\", \"Ronan\", \"Ronayne\", \"Roody\", \"Rooney\", \"Rossiter\", \"Rowells\", \"Rowles\", \"Royle\", \"Ruane\", \"Rowan\", \"Roan\", \"Rusa\", \"Rushe\", \"Ruther\", \"Ryan\", \"Murrian\", \"Murrin\", \"Sallery\", \"Salmon\", \"Salmons\", \"Sammon\", \"Sammons\", \"Sangster\", \"Sankey\", \"Saul\", \"Scannell\", \"Scanlon\", \"Scanlan\", \"Seanlan\", \"Scullin\", \"Scully\", \"Duscully\", \"Sebon\", \"Seeny\", \"Fox\", \"Seery\", \"Semple\", \"Sexton\", \"Sewell\", \"Walker\", \"Shade\", \"Shahan\", \"Shalloo\", \"Shanahan\", \"Shankland\", \"Shanklin\", \"Shanley\", \"Shannon\", \"Sharkey\", \"Sharvan\", \"Shaughnessy\", \"Shoughness\", \"Sandys\", \"Sheedy\", \"Sheehan\", \"Sheahan\", \"Shehan\", \"Sheehy\", \"Sheil\", \"Shelley\", \"Shelly\", \"Schelly\", \"Schely\", \"Sheridan\", \"Sherin\", \"Sherlock\", \"Sherman\", \"Sherwin\", \"Shevlan\", \"Shevlin\", \"Shields\", \"Shiels\", \"Shine\", \"Shortall\", \"Shortell\", \"Shorten\", \"Shovlin\", \"Sieferman\", \"Silven\", \"Silvers\", \"Sims\", \"Simmes\", \"Simpson\", \"Simkins\", \"Simcocks\", \"Simon\", \"Sinnott\", \"Skahill\", \"Cahill\", \"Skelley\", \"Skelly\", \"Skerrett\", \"Slattery\", \"Slavin\", \"Sloane\", \"Smytherman\", \"Snee\", \"Sollers\", \"Somers\", \"Somerville\", \"Sommerville\", \"Speers\", \"Spellacy\", \"Spellman\", \"Spillaan\", \"Spillaine\", \"Spillane\", \"Splaine\", \"MacSpallane\", \"Stack\", \"Starkey\", \"Staunton\", \"Stoney\", \"Strachan\", \"Strahan\", \"Straffan\", \"Sugrue\", \"Sunagh\", \"Swanny\", \"Suppel\", \"Suthern\", \"Sweeney\", \"Synan\", \"Taaffe\", \"Taffe\", \"Taft\", \"Tackit\", \"Taft\", \"Taggart\", \"Tallon\", \"Tangney\", \"Tansey\", \"Tarpey\", \"Tarpy\", \"Torpy\", \"Teague\", \"Tighe\", \"Teeples\", \"Teevans\", \"Tegan\", \"Tenehan\", \"Tenpenny\", \"Tiernan\", \"McTiernan\", \"Tierney\", \"Tiffany\", \"Tiffney\", \"Timmins\", \"Timmons\", \"Timon\", \"Tymon\", \"Toal\", \"Tobin\", \"Toban\", \"Toffey\", \"Todd\", \"Tolan\", \"Toland\", \"Thulis\", \"Tollis\", \"Tolbert\", \"Tomelty\", \"Toner\", \"Tonner\", \"Toody\", \"Toomey\", \"Twomey\", \"Tormey\", \"Torpy\", \"Trant\", \"Trautt\", \"Travers\", \"Traynor\", \"Treacy\", \"Tracy\", \"Tracey\", \"Trench\", \"Troy\", \"Tully\", \"Tilly\", \"Tilley\", \"Tunney\", \"Tuohy\", \"Tuhe\", \"Tuhey\", \"Touhy\", \"Towey\", \"Turley\", \"Turvey\", \"Tweedy\", \"Tynan\", \"Unckles\", \"Uriell\", \"Vail\", \"Vallila\", \"Veale\", \"Waddell\", \"Wahlen\", \"Waldron\", \"Wall\", \"Walsh\", \"Welch\", \"Welsch\", \"Welsh\", \"Ward\", \"Warrington\", \"Waterbury\", \"Waters\", \"Watt\", \"Webb\", \"Weeney\", \"Weir\", \"Whatley\", \"Whelan\", \"Wittlin\", \"Wogan\", \"Woods\", \"Wood\", \"Woulfe\", \"Wolfe\", \"Wylie\", \"Wynn\", \"Wynne\", \"Mulgeehy\", \"Yeates\"]], [[\"Abysia\", \"Male\"], [\"Aannapada\", \"Amegalana\", \"Anenlilda\", \"Arwium\", \"Bahina\", \"Barsalnunna\", \"Buan\", \"Damikilishu\", \"Enkidu\", \"Enmebuluga\", \"Enmeduga\", \"Enmegalama\", \"Enmenduranna\", \"Enmenluanna\", \"Enmenunna\", \"Enmerkar\", \"Ennundaranna\", \"Ensukushsiranna\", \"Etana\", \"Gilgamesh\", \"Ibbisin\", \"Iltasadum\", \"Kalumum\", \"Lugalkitun\", \"Lugulbanda\", \"Mashda\", \"Melamanna\", \"Melamkishi\", \"Mesannapada\", \"Meshe\", \"Meskiagkasher\", \"Nangishlishma\", \"Samug\", \"Sangasu\", \"Sinmagir\", \"Tirigan\", \"Tizkar\", \"Uan\", \"Uanduga\", \"Urnungal\", \"Urnungalak\", \"Utu\", \"Utuabzu\", \"Utuhegal\", \"Zukakip\", \"Abdalonymus\", \"Abimilki\", \"Achololim\", \"Admago\", \"Agbal\", \"Anysus\", \"Arabo\", \"Asdrubal\", \"Astegal\", \"Baalhaan\", \"Bomilcar\", \"Boodes\", \"Bostar\", \"Carthalo\", \"Eshmunazar\", \"Fierelus\", \"Fuabal\", \"Fuano\", \"Haggith\", \"Hamilax\", \"Hamilcar\", \"Hamiscora\", \"Hampsicora\", \"Hannibal\", \"Hanno\", \"Hannon\", \"Hasdrubal\", \"Himilco\", \"Hiram\", \"Jabnit\", \"Kandaulo\", \"Luli\", \"Mago\", \"Maharbal\", \"Mapen\", \"Mathos\", \"Merbal\", \"Metallo\", \"Mintho\", \"Muttines\", \"Salicar\", \"Shipitbaal\", \"Sirom\", \"Tendao\", \"Tetramnestus\", \"Zaracas\", \"Zinnridi\", \"Abiditaan\", \"Abiesuuh\", \"Ammiditana\", \"Ammisaduka\", \"Apilsin\", \"Arammadara\", \"Arsaces\", \"Asmadu\", \"Balshazzar\", \"Berossus\", \"Bhhazuum\", \"Burnaburiash\", \"Daad\", \"Ditanu\", \"Gezer\", \"Heana\", \"Iptiyamuta\", \"Kadashman\", \"Maam\", \"Milkilu\", \"Nabonidus\", \"Nabunaid\", \"Nabupolassar\", \"Namhuu\", \"Namzuu\", \"Nebuchadnezzer\", \"Ninus\", \"Ninyas\", \"Obares\", \"Saamsuiluna\", \"Sheshbazzar\", \"Sinmubaliit\", \"Sumalika\", \"Sumula\", \"Suni\", \"Tattenai\", \"Tuubtiyamuta\", \"Yaamkuuzzuhalamma\", \"Zabium\", \"Zuummabu\", \"Aakheperkare\", \"Addaya\", \"Ahhotpe\", \"Ahmes\", \"Ahmose\", \"Akencheres\", \"Akunosh\", \"Amenakht\", \"Amenakhte\", \"Amenemhat\", \"Amenemheb\", \"Amenemopet\", \"Amenhirkopshef\", \"Amenhirwenemef\", \"Amenhotpe\", \"Amenmesse\", \"Amenmose\", \"Amennestawy\", \"Amenope\", \"Amenophis\", \"Amenwahsu\", \"Ameny\", \"Amoy\", \"Amunemhat\", \"Amunherpanesha\", \"Amunhotpe\", \"Anen\", \"Ankhef\", \"Ankhefenamun\", \"Ankhefenkhons\", \"Ankhefenmut\", \"Ankhsheshonq\", \"Ankhtify\", \"Ankhtyfy\", \"Ankhu\", \"Ankhuemhesut\", \"Any\", \"Apophis\", \"Baba\", \"Baenre\", \"Bak\", \"Bakenkhons\", \"Bakenkhonsu\", \"Bakenmut\", \"Bakennefi\", \"Bakenptah\", \"Baky\", \"Bata\", \"Bay\", \"Bek\", \"Bengay\", \"Besenmut\", \"Butehamun\", \"Denger\", \"Deniuenkhons\", \"Djadjaemankh\", \"Djau\", \"Djedefhor\", \"Djedhor\", \"Djedhoriufankh\", \"Djedi\", \"Djedkhonsiufankh\", \"Djedkhonsuefankh\", \"Djedptahefankh\", \"Djedptahiufankh\", \"Djehutmose\", \"Djehuty\", \"Djehutymose\", \"Djenutymes\", \"Djeserka\", \"Djeserkare\", \"Djeserkheprure\", \"Djesersukhons\", \"Djethutmose\", \"Djhutmose\", \"Genubath\", \"Gua\", \"Haankhef\", \"Hapimen\", \"Hapu\", \"Hapuseneb\", \"Hapymen\", \"Haremakhet\", \"Haremsat\", \"Harkhebi\", \"Harkhuf\", \"Harmhabi\", \"Harnakhte\", \"Harsiese\", \"Hay\", \"Hemaka\", \"Henenu\", \"Henuka\", \"Heqaemeheh\", \"Heqaib\", \"Herenamenpenaef\", \"Herihor\", \"Hesire\", \"Hor\", \"Horapollo\", \"Hordedef\", \"Horemheb\", \"Hori\", \"Hornedjitef\", \"Horpais\", \"Horwebbefer\", \"Hrihor\", \"Hunefer\", \"Huy\", \"Huya\", \"Iawy\", \"Ibana\", \"Ibe\", \"Idy\", \"Ikeni\", \"Ikui\", \"Imhotep\", \"Inarus\", \"Inebni\", \"Ineni\", \"Inyotef\", \"Ipi\", \"Ipuwer\", \"Ipuy\", \"Ipy\", \"Ishpi\", \"Iufankh\", \"Iufenamun\", \"Iunmin\", \"Iuseneb\", \"Iuwlot\", \"Iyerniutef\", \"Iyimennuef\", \"Iymeru\", \"Jarha\", \"Kadjadja\", \"Kahma\", \"Kaka\", \"Kanakht\", \"Karnefhere\", \"Katenen\", \"Kawab\", \"Kay\", \"Kemuny\", \"Kenamun\", \"Kenefer\", \"Kerasher\", \"Kha\", \"Khaemhet\", \"Khaemnetjeru\", \"Khaemwaset\", \"Khahor\", \"Khakheperraseneb\", \"Khensthoth\", \"Kheruef\", \"Khety\", \"Khnemibre\", \"Khnumhotep\", \"Khnumhotpe\", \"Khons\", \"Khonsirdais\", \"Khonskhu\", \"Khonsuemwaset\", \"Khufukhaf\", \"Khui\", \"Kuenre\", \"Kysen\", \"Maakha\", \"Mahu\", \"Mahuhy\", \"Maiherpri\", \"Manetho\", \"Masaharta\", \"May\", \"Maya\", \"Mehy\", \"Meketre\", \"Mekhu\", \"Men\", \"Menkheperraseneb\", \"Menkheperre\", \"Menna\", \"Mentuemhat\", \"Mentuherkhepshef\", \"Meremptor\", \"Merenamun\", \"Merenkhons\", \"Merenptah\", \"Mereruka\", \"Merka\", \"Mernebptah\", \"Mery\", \"Meryamun\", \"Meryatum\", \"Meryawy\", \"Merymose\", \"Meryptah\", \"Meryrahashtef\", \"Meryre\", \"Mes\", \"Min\", \"Minkhat\", \"Minmose\", \"Minnakht\", \"Mokhtar\", \"Montjuemhat\", \"Montjuhirkopshef\", \"Montuemhet\", \"Mose\", \"Nakhthorheb\", \"Nakhtimenwast\", \"Nakhtmin\", \"Nakhtnebef\", \"Naneferkeptah\", \"Nebamun\", \"Nebankh\", \"Nebemakst\", \"Nebhotep\", \"Nebimes\", \"Nebitka\", \"Nebmaetre\", \"Nebnefer\", \"Nebnetjeru\", \"Nebseni\", \"Nebseny\", \"Nebwennenef\", \"Nechoutes\", \"Neferhotep\", \"Neferhotpe\", \"Neferkheperuhersekheper\", \"Nefermaet\", \"Nefermenu\", \"Neferrenpet\", \"Neferti\", \"Nehasy\", \"Nehi\", \"Nekau\", \"Nekhwemmut\", \"Nendjbaendjed\", \"Nenedjebaendjed\", \"Neneferkaptah\", \"Nenkhefta\", \"Nes\", \"Nesamun\", \"Neshi\", \"Neshorpakhered\", \"Neskhons\", \"Nesmont\", \"Nespaherenhat\", \"Nespakashuty\", \"Nespatytawy\", \"Nespherenhat\", \"Nessuimenopet\", \"Nestanebetasheru\", \"Nestefnut\", \"Netihur\", \"Nigmed\", \"Nimlot\", \"Niumateped\", \"Pabasa\", \"Pabernefy\", \"Padiamenet\", \"Padiamenipet\", \"Padiamun\", \"Padineith\", \"Paheripedjet\", \"Pairy\", \"Pait\", \"Pakharu\", \"Pakhneter\", \"Pamont\", \"Pamose\", \"Pamu\", \"Panas\", \"Paneb\", \"Paneferher\", \"Panehesy\", \"Paperpa\", \"Paramesse\", \"Parennefer\", \"Pasebakhaenniut\", \"Pasekhonsu\", \"Paser\", \"Pashedbast\", \"Pashedu\", \"Pasherdjehuty\", \"Pawiaeadja\", \"Paynedjem\", \"Payneferher\", \"Pediamun\", \"Pediese\", \"Pedihor\", \"Penamun\", \"Penbuy\", \"Penmaat\", \"Pennestawy\", \"Pentaweret\", \"Pentu\", \"Pepynakhte\", \"Peraha\", \"Pinhasy\", \"Pinotmou\", \"Prahotpe\", \"Pramessu\", \"Preherwenemef\", \"Prehirwennef\", \"Prepayit\", \"Psamtek\", \"Psenamy\", \"Psenmin\", \"Ptahhemakhet\", \"Ptahhotep\", \"Ptahhudjankhef\", \"Ptahmose\", \"Ptahshepses\", \"Qenymin\", \"Rahotep\", \"Rahotpe\", \"Raia\", \"Ramessenakhte\", \"Ramessu\", \"Rekhmire\", \"Reuser\", \"Rewer\", \"Rudamun\", \"Sabef\", \"Sabni\", \"Salatis\", \"Samut\", \"Sanehet\", \"Sasobek\", \"Sawesit\", \"Scepter\", \"Sekhemkare\", \"Sekhmire\", \"Seneb\", \"Senebtyfy\", \"Senemut\", \"Senmen\", \"Sennedjem\", \"Sennefer\", \"Sennufer\", \"Senui\", \"Senwosret\", \"Serapion\", \"Sese\", \"Setau\", \"Setep\", \"Sethe\", \"Sethherwenemef\", \"Sethhirkopshef\", \"Sethnakhte\", \"Sethnakte\", \"Sethy\", \"Setne\", \"Setymerenptah\", \"Shedsunefertum\", \"Shemay\", \"Shepenwepet\", \"Siamun\", \"Siese\", \"Sinuhe\", \"Sipair\", \"Sneferu\", \"Somtutefnakhte\", \"Surero\", \"Suty\", \"Sutymose\", \"Takairnayu\", \"Takany\", \"Tasetmerydjehuty\", \"Tayenimu\", \"Tefibi\", \"Tenermentu\", \"Tetisheri\", \"Tjaenhebyu\", \"Tjahapimu\", \"Tjaroy\", \"Tjauemdi\", \"Tjenna\", \"Tjety\", \"To\", \"Tui\", \"Tutu\", \"Tymisba\", \"Udjahorresne\", \"Udjahorresneith\", \"Uni\", \"Userhet\", \"Usermontju\", \"Wadjmose\", \"Wahka\", \"Webaoner\", \"Webensenu\", \"Wedjakhons\", \"Wenamun\", \"Wendjabaendjed\", \"Wendjebaendjed\", \"Weni\", \"Wennefer\", \"Wennufer\", \"Wepmose\", \"Wepwawetmose\", \"Werdiamenniut\", \"Werirenptah\", \"Yanhamu\", \"Yey\", \"Yii\", \"Yuya\", \"Zazamoukh\"]], [[\"Abysia\", \"Female\"], [\"Inanna\", \"Silili\", \"Ayzebel\", \"Dido\", \"Jezebel\", \"Similce\", \"Sophoniba\", \"Sophonisba\", \"Sophonsiba\", \"Yzebel\", \"Aishah\", \"Hind\", \"Maesa\", \"Mamaea\", \"Mawia\", \"Samsi\", \"Semiramis\", \"Tanit\", \"Urshanabi\", \"Zabibi\", \"Zainab\", \"Zebba\", \"Zenobia\", \"Pudukhepa\", \"Abana\", \"Adjedaa\", \"Ahwere\", \"Amenirdis\", \"Amenkhenwast\", \"Amosis\", \"Anhay\", \"Ankhesenamun\", \"Ankhesenaten\", \"Ankhesenneferibre\", \"Ankhetperure\", \"Ankhnesmeryre\", \"Ankhnesneferibre\", \"Asenath\", \"Baktre\", \"Baktwerel\", \"Beketaten\", \"Bithiah\", \"Duathor\", \"Esemkhebe\", \"Hehenhit\", \"Hentempet\", \"Henttimehu\", \"Henut\", \"Henutmire\", \"Hetepheres\", \"Hrere\", \"Huy\", \"In\", \"Inhapi\", \"Inihue\", \"Ipip\", \"Ipu\", \"Ipuky\", \"Ipy\", \"Iras\", \"Isetemkheb\", \"Isetnefret\", \"Isiemkheb\", \"Iuhetibu\", \"Karpes\", \"Kawit\", \"Kem\", \"Khedebneithireretbeneret\", \"Khutenptah\", \"Maatneferure\", \"Maetkare\", \"Maharet\", \"Makare\", \"Mayati\", \"Mehetweshkhet\", \"Mehtetweshket\", \"Mehytenweskhet\", \"Meketaten\", \"Meketre\", \"Mekhare\", \"Meresankh\", \"Meritaten\", \"Meryetamun\", \"Meryetaten\", \"Meryetre\", \"Meryt\", \"Mutemhab\", \"Naneferher\", \"Nany\", \"Naunakhte\", \"Nebefer\", \"Nebnofret\", \"Neferet\", \"Neferhetetepes\", \"Neferneferuaten\", \"Neferneferure\", \"Nefertiry\", \"Neferu\", \"Neferubity\", \"Neferuptah\", \"Neferure\", \"Neferusherit\", \"Neskhons\", \"Nestanebtishru\", \"Nitetis\", \"Nitiqret\", \"Niutnakht\", \"Nodjmet\", \"Nofretiri\", \"Nofritari\", \"Nofrure\", \"Nubkhaes\", \"Nubkhas\", \"Nyla\", \"Rai\", \"Reddjedet\", \"Reonet\", \"Roy\", \"Ruia\", \"Satdjehuty\", \"Satnebetneninesu\", \"Sebtitis\", \"Senebtisi\", \"Senebtysy\", \"Senet\", \"Senmonthis\", \"Sennuwy\", \"Sentnay\", \"Shesh\", \"Sitkamose\", \"Sitre\", \"Sobekemshaf\", \"Sotepenre\", \"Sponnesis\", \"Tabes\", \"Tabesheribet\", \"Tabubu\", \"Taheret\", \"Tahpenes\", \"Tairetdjeret\", \"Tais\", \"Taiuhery\", \"Takhat\", \"Tamin\", \"Tanetnephthys\", \"Taweret\", \"Tayuheret\", \"Tetisherit\", \"Tiaa\", \"Timat\", \"Tjia\", \"Tjuiu\", \"Tjuyu\", \"Tutu\", \"Wenis\", \"Weret\", \"Wernero\"]], [[\"Kailasa\", \"Male\"], [\"Aanand\", \"Abadhya\", \"Abala\", \"Abalendu\", \"Abayankara\", \"Abdhisayana\", \"Abhasa\", \"Abhasvara\", \"Abhata\", \"Abhay\", \"Abhaya\", \"Abhayananda\", \"Abhayasinha\", \"Abhayda\", \"Abhayprada\", \"Abhi\", \"Abhibhu\", \"Abhicandra\", \"Abhidi\", \"Abhidipa\", \"Abhidyu\", \"Abhigita\", \"Abhihava\", \"Abhihita\", \"Abhijana\", \"Abhijata\", \"Abhijaya\", \"Abhijeet\", \"Abhiji\", \"Abhijit\", \"Abhijnana\", \"Abhijvala\", \"Abhik\", \"Abhika\", \"Abhikama\", \"Abhikanksa\", \"Abhikhyana\", \"Abhilasha\", \"Abhilasin\", \"Abhimand\", \"Abhimani\", \"Abhimanyusuta\", \"Abhimatjit\", \"Abhimoda\", \"Abhinabhas\", \"Abhinamin\", \"Abhinanda\", \"Abhinandana\", \"Abhinandin\", \"Abhinandita\", \"Abhinatha\", \"Abhinav\", \"Abhinava\", \"Abhinavan\", \"Abhinita\", \"Abhinivesa\", \"Abhipada\", \"Abhipala\", \"Abhipuspa\", \"Abhira\", \"Abhiraja\", \"Abhiraksa\", \"Abhiraksita\", \"Abhirama\", \"Abhiramana\", \"Abhirastra\", \"Abhiratra\", \"Abhiru\", \"Abhiruca\", \"Abhiruci\", \"Abhirucira\", \"Abhirupa\", \"Abhisala\", \"Abhisara\", \"Abhiseka\", \"Abhishek\", \"Abhisikta\", \"Abhisneha\", \"Abhisoka\", \"Abhisri\", \"Abhisu\", \"Abhisumat\", \"Abhita\", \"Abhivada\", \"Abhivira\", \"Abhiviraja\", \"Abhiyanta\", \"Abhiyutaksika\", \"Abhra\", \"Abhrakasin\", \"Abhramu\", \"Abhramupriya\", \"Abhranaga\", \"Abhranta\", \"Abhraroha\", \"Abhrottha\", \"Abhyagni\", \"Abhyavarsini\", \"Abhyudaya\", \"Abhyudita\", \"Abir\", \"Abjit\", \"Acalapati\", \"Acalendra\", \"Acananas\", \"Acanda\", \"Acarya\", \"Acchoda\", \"Acchundra\", \"Achyuta\", \"Acyutaraya\", \"Acyutayu\", \"Adambara\", \"Adarsa\", \"Adarsh\", \"Adarshpal\", \"Addana\", \"Adelika\", \"Adesa\", \"Adesh\", \"Adharma\", \"Adhasasiras\", \"Adhibu\", \"Adhiksita\", \"Adhilokanatha\", \"Adhinatha\", \"Adhipa\", \"Adhira\", \"Adhiraja\", \"Adhiratha\", \"Adhirohna\", \"Adhirukma\", \"Adhisa\", \"Adhisvara\", \"Adhita\", \"Adhivahana\", \"Adhiviraja\", \"Adhrgu\", \"Adhrsya\", \"Adhvara\", \"Adhvaryu\", \"Adhyapayana\", \"Adi\", \"Adidaitya\", \"Adilaksmana\", \"Adima\", \"Adimula\", \"Adina\", \"Adinatha\", \"Adipa\", \"Adiraja\", \"Adiratha\", \"Adisa\", \"Adisesan\", \"Adisimah\", \"Adisisira\", \"Adisvara\", \"Adit\", \"Adita\", \"Aditeya\", \"Aditi\", \"Adityabhakta\", \"Adityagarbha\", \"Adityaketu\", \"Adityaprabha\", \"Adityasena\", \"Adityavardhana\", \"Adityavarman\", \"Adityavarna\", \"Adityesa\", \"Admani\", \"Adra\", \"Adri\", \"Adrigu\", \"Adrisa\", \"Adrupa\", \"Adura\", \"Adusita\", \"Advaya\", \"Advayananda\", \"Advika\", \"Advitiya\", \"Adyasarana\", \"Adyota\", \"Agadhi\", \"Agama\", \"Agarva\", \"Agasti\", \"Agavaha\", \"Agendra\", \"Agha\", \"Aghamarsana\", \"Agharika\", \"Agnibahu\", \"Agnibha\", \"Agnibhuti\", \"Agnibija\", \"Agnidatta\", \"Agnidhra\", \"Agnidhraka\", \"Agnika\", \"Agnikana\", \"Agniketu\", \"Agnima\", \"Agnimasa\", \"Agnimitra\", \"Agnimukha\", \"Agnipa\", \"Agnira\", \"Agnirajan\", \"Agniruha\", \"Agnisambhava\", \"Agnisika\", \"Agnisinha\", \"Agnisoma\", \"Agnisri\", \"Agnistu\", \"Agnistuta\", \"Agnitejas\", \"Agnivallabha\", \"Agnivamin\", \"Agnivarna\", \"Agnivesa\", \"Agnivesya\", \"Agnivirya\", \"Agnpurna\", \"Agraha\", \"Agraja\", \"Agrasena\", \"Agrayana\", \"Agrayani\", \"Agreni\", \"Agrima\", \"Aha\", \"Ahamyati\", \"Ahan\", \"Ahankara\", \"Ahanmani\", \"Ahannatha\", \"Ahanti\", \"Ahar\", \"Ahara\", \"Aharbandhava\", \"Ahavaniya\", \"Ahavaniym\", \"Ahika\", \"Ahilocana\", \"Ahima\", \"Ahinagu\", \"Ahiratha\", \"Ahirbudhnya\", \"Ahlad\", \"Ahobala\", \"Ahovira\", \"Ahuka\", \"Ahupathi\", \"Ahuta\", \"Ahuti\", \"Ahvana\", \"Aila\", \"Aindradyumni\", \"Aitareya\", \"Ajagara\", \"Ajakara\", \"Ajakasva\", \"Ajakava\", \"Ajalika\", \"Ajamila\", \"Ajamukha\", \"Ajandeva\", \"Ajanidha\", \"Ajapa\", \"Ajapala\", \"Ajaparsva\", \"Ajasra\", \"Ajata\", \"Ajavindu\", \"Ajay\", \"Ajigarta\", \"Ajina\", \"Ajinka\", \"Ajira\", \"Ajit\", \"Ajitabha\", \"Ajitanatha\", \"Ajitapala\", \"Ajitatman\", \"Ajodara\", \"Ajyapa\", \"Akalanka\", \"Akalmasa\", \"Akalpa\", \"Akalusa\", \"Akama\", \"Akampana\", \"Akampita\", \"Akanistha\", \"Akantaka\", \"Akapivata\", \"Akara\", \"Akarkkara\", \"Akarsana\", \"Akarsita\", \"Akasa\", \"Akasacamasa\", \"Akasagarbhi\", \"Akatha\", \"Akhanda\", \"Akhil\", \"Akhila\", \"Akhilatman\", \"Akhilendra\", \"Akhilesa\", \"Akhilesavara\", \"Akila\", \"Akopa\", \"Akra\", \"Akrida\", \"Akrodhana\", \"Akrosa\", \"Akrsasasva\", \"Akrsnakarman\", \"Akrtavrana\", \"Akrti\", \"Akrura\", \"Aksaja\", \"Aksaka\", \"Aksakumara\", \"Aksamata\", \"Aksapada\", \"Aksata\", \"Aksaya\", \"Akshay\", \"Akshey\", \"Aksina\", \"Aksita\", \"Aksobhya\", \"Aksunna\", \"Aktu\", \"Akuntha\", \"Akupara\", \"Akupya\", \"Akurca\", \"Alagesa\", \"Alagesan\", \"Alaghu\", \"Alakaprabha\", \"Alesa\", \"Alia\", \"Alin\", \"Alinda\", \"Alipriya\", \"Alobhin\", \"Alok\", \"Aloka\", \"Alola\", \"Alolupa\", \"Alopa\", \"Alpasaras\", \"Alugu\", \"Amad\", \"Amahatha\", \"Amahiyu\", \"Amaka\", \"Amalamani\", \"Amalatman\", \"Amalgarbha\", \"Amama\", \"Amana\", \"Amanath\", \"Amanda\", \"Amandeep\", \"Amandip\", \"Amandipa\", \"Amanjit\", \"Amanjot\", \"Amanpreet\", \"Amanthu\", \"Amanusa\", \"Amar\", \"Amara\", \"Amaracandra\", \"Amaradatta\", \"Amarajita\", \"Amarajota\", \"Amarajyoti\", \"Amaranjaya\", \"Amaraprita\", \"Amararatna\", \"Amarasinha\", \"Amardit\", \"Amardita\", \"Amaresh\", \"Amarika\", \"Amarisa\", \"Amarishnu\", \"Amarjit\", \"Amarnath\", \"Amaropama\", \"Amarpreet\", \"Amarsa\", \"Amartya\", \"Amaru\", \"Amaruka\", \"Amarupam\", \"Amaruttama\", \"Amas\", \"Amava\", \"Amavasu\", \"Amaya\", \"Ambaka\", \"Ambara\", \"Ambastha\", \"Ambasthya\", \"Ambava\", \"Ambhassara\", \"Ambhoja\", \"Ambhoruha\", \"Ambhrna\", \"Ambu\", \"Ambuda\", \"Ambudhara\", \"Ambumani\", \"Ambunidhi\", \"Ambupati\", \"Amburuha\", \"Ambuvica\", \"Amini\", \"Amir\", \"Amirtharaj\", \"Amisa\", \"Amish\", \"Amit\", \"Amita\", \"Amitabh\", \"Amitabha\", \"Amitadjuti\", \"Amitagati\", \"Amitakratu\", \"Amitan\", \"Amitaruci\", \"Amitatman\", \"Amitaujas\", \"Amitav\", \"Amitava\", \"Amitaya\", \"Amitayus\", \"Amitdhvaja\", \"Amitkumar\", \"Amitojas\", \"Amitosa\", \"Amitrajit\", \"Amlana\", \"Amod\", \"Amoda\", \"Amodin\", \"Amoghadarsana\", \"Amoghadarsin\", \"Amoghasiddhi\", \"Amoghavajra\", \"Amoghavarsa\", \"Amoha\", \"Amol\", \"Amola\", \"Amolak\", \"Amolaka\", \"Amprithu\", \"Amrapali\", \"Amreet\", \"Amrish\", \"Amrit\", \"Amrita\", \"Amritadana\", \"Amritaka\", \"Amritaksara\", \"Amritam\", \"Amritamaya\", \"Amritananda\", \"Amritaprabha\", \"Amritejas\", \"Amtesvara\", \"Amul\", \"Amulya\", \"Amura\", \"Amurtarajas\", \"Amurtarayas\", \"Ana\", \"Anabhisastra\", \"Anadhika\", \"Anadhrishya\", \"Anadinava\", \"Anadrishti\", \"Anaghadru\", \"Anakranta\", \"Analajit\", \"Anama\", \"Anamitra\", \"Anamiva\", \"Anamol\", \"Anana\", \"Anand\", \"Ananda\", \"Anandaghana\", \"Anandagiri\", \"Anandam\", \"Anandamrta\", \"Anandaprabha\", \"Anandaprada\", \"Anandasagara\", \"Anandatman\", \"Anandavardhana\", \"Anandbhuj\", \"Anandi\", \"Anandin\", \"Anandita\", \"Anangada\", \"Anangam\", \"Anangapala\", \"Anangapida\", \"Anant\", \"Ananta\", \"Anantadeva\", \"Anantaguna\", \"Anantajit\", \"Anantaram\", \"Anantarama\", \"Anantavirya\", \"Ananth\", \"Ananthakrishanan\", \"Ananthakrishnan\", \"Anantharaman\", \"Anantya\", \"Anapana\", \"Anapayacola\", \"Anargha\", \"Anari\", \"Anarti\", \"Anarvva\", \"Anasaya\", \"Anasin\", \"Anasuri\", \"Anasvan\", \"Anasvara\", \"Anathapinda\", \"Anava\", \"Anavaratha\", \"Anavatapta\", \"Ancala\", \"Andaka\", \"Andha\", \"Andhraka\", \"Androsa\", \"Anenas\", \"Anenasya\", \"Anga\", \"Angabhu\", \"Angama\", \"Anganemi\", \"Angaraka\", \"Angarasetu\", \"Angaristha\", \"Angasvami\", \"Angavaha\", \"Anghari\", \"Angirasa\", \"Angosin\", \"Angsu\", \"Angusa\", \"Anhu\", \"Aniha\", \"Anika\", \"Anikavidarana\", \"Aniketa\", \"Anil\", \"Anila\", \"Anilabha\", \"Anilkumar\", \"Animan\", \"Animesa\", \"Aninadata\", \"Aninata\", \"Anirban\", \"Anirbana\", \"Anirjita\", \"Aniruddh\", \"Aniruddha\", \"Anirudh\", \"Anirudha\", \"Anirudhh\", \"Anita\", \"Anitabha\", \"Aniteja\", \"Anitha\", \"Anjaka\", \"Anjali\", \"Anjami\", \"Anjan\", \"Anjana\", \"Anjanaparvan\", \"Anjasa\", \"Anjika\", \"Anjuli\", \"Ankolita\", \"Ankur\", \"Ankura\", \"Annadeva\", \"Annamaya\", \"Anniruddha\", \"Anogopta\", \"Anoop\", \"Anouar\", \"Anrita\", \"Ansa\", \"Ansaka\", \"Ansala\", \"Ansansa\", \"Ansarin\", \"Anshul\", \"Anshuman\", \"Ansin\", \"Ansrutas\", \"Ansu\", \"Ansujala\", \"Ansuka\", \"Antama\", \"Antara\", \"Antardhana\", \"Antardhi\", \"Antariksa\", \"Antarjyotis\", \"Antarvedi\", \"Anti\", \"Antideva\", \"Antya\", \"Anu\", \"Anubhaj\", \"Anubhava\", \"Anubhavya\", \"Anubodha\", \"Anucakra\", \"Anucana\", \"Anudara\", \"Anudatta\", \"Anudesya\", \"Anudruhu\", \"Anudrutta\", \"Anudvega\", \"Anugayas\", \"Anugra\", \"Anugya\", \"Anuha\", \"Anuhlada\", \"Anuhrada\", \"Anuhu\", \"Anuj\", \"Anuja\", \"Anujay\", \"Anujestha\", \"Anuka\", \"Anukarsa\", \"Anukasa\", \"Anukula\", \"Anumita\", \"Anumodana\", \"Anuna\", \"Anunavarcas\", \"Anup\", \"Anupa\", \"Anupam\", \"Anupama\", \"Anupati\", \"Anuprabha\", \"Anupradana\", \"Anupriya\", \"Anuprya\", \"Anuradha\", \"Anurag\", \"Anuraga\", \"Anuragin\", \"Anuraj\", \"Anurakt\", \"Anuranjana\", \"Anuranjita\", \"Anuratha\", \"Anurodha\", \"Anuruc\", \"Anuruddha\", \"Anurudha\", \"Anurupa\", \"Anusa\", \"Anusikha\", \"Anusobhin\", \"Anusrtasravas\", \"Anusruta\", \"Anutosa\", \"Anutta\", \"Anuvaha\", \"Anuvas\", \"Anuvinda\", \"Anuvitta\", \"Anuvrata\", \"Anuyatri\", \"Anuyayin\", \"Anvagabhanu\", \"Anynaga\", \"Anyuna\", \"Apa\", \"Apacita\", \"Apaghana\", \"Apakunga\", \"Apalala\", \"Apalasin\", \"Apalasuka\", \"Apamanyu\", \"Apan\", \"Apantaratamas\", \"Aparaditya\", \"Aparahnaka\", \"Aparajisnu\", \"Aparimana\", \"Aparimeya\", \"Aparimita\", \"Aparita\", \"Aparoksa\", \"Aparthiva\", \"Aparusa\", \"Apasanka\", \"Apaspati\", \"Apastamba\", \"Apasyu\", \"Api\", \"Apiguna\", \"Apija\", \"Apindra\", \"Apnavana\", \"Apomurti\", \"Appayyadiksita\", \"Aprakarsita\", \"Apramaya\", \"Aprati\", \"Apratima\", \"Apratipa\", \"Apratiratha\", \"Apratirupa\", \"Aprativirya\", \"Apratiyodhin\", \"Apratula\", \"Apsuhomya\", \"Apta\", \"Apu\", \"Apupa\", \"Apurva\", \"Ara\", \"Arabhata\", \"Aracana\", \"Aradhaka\", \"Araga\", \"Arali\", \"Aramanas\", \"Arana\", \"Aranatha\", \"Aranya\", \"Aranyakumara\", \"Arapacana\", \"Arati\", \"Aravind\", \"Aravinda\", \"Aravindan\", \"Aravini\", \"Arbudi\", \"Arca\", \"Arcat\", \"Arcika\", \"Arcita\", \"Ardhendra\", \"Ardra\", \"Arenu\", \"Arganjan\", \"Arghya\", \"Arhana\", \"Arhat\", \"Arhattama\", \"Aridamana\", \"Arihan\", \"Arijit\", \"Arimardana\", \"Arimejaya\", \"Arin\", \"Arisudana\", \"Arita\", \"Ariyappa\", \"Arja\", \"Arjana\", \"Arjava\", \"Arjita\", \"Arjun\", \"Arjuni\", \"Arka\", \"Arkakara\", \"Arkaprakasa\", \"Arkapriya\", \"Arkasa\", \"Arkasmani\", \"Arkin\", \"Arkkaparna\", \"Arksa\", \"Arnava\", \"Aroga\", \"Arokya\", \"Aroon\", \"Arsa\", \"Arsabhi\", \"Arstisena\", \"Arsya\", \"Artaparna\", \"Arthadarsin\", \"Arthasadhaka\", \"Arthasiddhi\", \"Arthvana\", \"Arti\", \"Artiman\", \"Arudra\", \"Arujas\", \"Arul\", \"Arula\", \"Arulamani\", \"Arumugam\", \"Arumugham\", \"Arun\", \"Aruna\", \"Arunakamala\", \"Arunansu\", \"Arunava\", \"Aruni\", \"Arunodaya\", \"Arunopala\", \"Arunsu\", \"Arup\", \"Arva\", \"Arvacina\", \"Arvavasu\", \"Arvind\", \"Arvinda\", \"Arvinder\", \"Arvindra\", \"Arvuda\", \"Arya\", \"Aryabhata\", \"Aryacetas\", \"Aryadeva\", \"Aryaki\", \"Aryakumara\", \"Aryaman\", \"Aryamik\", \"Aryamisra\", \"Aryasura\", \"Aryasva\", \"Aryavarta\", \"Aryendra\", \"Aryika\", \"Asamanjasa\", \"Asamati\", \"Asan\", \"Asanga\", \"Asangas\", \"Asanka\", \"Asankita\", \"Asapurna\", \"Asavaha\", \"Asavijaya\", \"Asecana\", \"Asesa\", \"Ashe\", \"Ashis\", \"Ashish\", \"Ashok\", \"Ashoka\", \"Ashokvardan\", \"Ashrita\", \"Ashutosh\", \"Ashwani\", \"Ashwin\", \"Ashwini\", \"Asiddhartha\", \"Asikrishna\", \"Asiloman\", \"Asim\", \"Asima\", \"Asiman\", \"Asira\", \"Asirisa\", \"Asita\", \"Asitabha\", \"Asitadhanva\", \"Asitadhvaja\", \"Asitasman\", \"Asitotpala\", \"Asjita\", \"Asketa\", \"Askol\", \"Askran\", \"Aslesa\", \"Asma\", \"Asmaka\", \"Asmita\", \"Asmund\", \"Asokadatta\", \"Asokavardhana\", \"Asrava\", \"Asravya\", \"Asrita\", \"Asruta\", \"Asrutavrana\", \"Assar\", \"Astajihva\", \"Astaka\", \"Astaratha\", \"Astavakra\", \"Astika\", \"Astrita\", \"Asu\", \"Asuga\", \"Asula\", \"Asuman\", \"Asumat\", \"Asuratarajasa\", \"Asurayana\", \"Asuri\", \"Asurtarajasa\", \"Asvaghosa\", \"Asvajit\", \"Asvaketu\", \"Asvala\", \"Asvalarana\", \"Asvamedhadatta\", \"Asvamedhas\", \"Asvarya\", \"Asvasena\", \"Asvasiras\", \"Asvathama\", \"Asvattha\", \"Asvatthanarayana\", \"Asvatthi\", \"Asvatyama\", \"Asvavan\", \"Asvin\", \"Asvini\", \"Aswathanarayana\", \"Ataka\", \"Atal\", \"Atala\", \"Atamas\", \"Atandra\", \"Atasa\", \"Athilesa\", \"Ati\", \"Atibhava\", \"Aticanda\", \"Atidatta\", \"Atideva\", \"Atihata\", \"Atima\", \"Atimanita\", \"Atimanusa\", \"Atimanyu\", \"Atimaya\", \"Atindra\", \"Atirathra\", \"Atiratra\", \"Atisa\", \"Atisakra\", \"Atisanda\", \"Atisaya\", \"Atisena\", \"Atish\", \"Atisi\", \"Atisringa\", \"Atisthira\", \"Atisvarya\", \"Atithigva\", \"Ativarcas\", \"Atiya\", \"Atiyama\", \"Atmajnana\", \"Atmananda\", \"Atmavira\", \"Atmaya\", \"Attana\", \"Atul\", \"Atula\", \"Atulavikrama\", \"Atulya\", \"Atyaditya\", \"Atyantika\", \"Atyarati\", \"Audambara\", \"Aukthya\", \"Aurasa\", \"Aurjitya\", \"Autathya\", \"Auttamika\", \"Auttanapadi\", \"Avabhasita\", \"Avabodha\", \"Avacuda\", \"Avadata\", \"Avadha\", \"Avagaha\", \"Avajaya\", \"Avajita\", \"Avajyuta\", \"Avakasa\", \"Avani\", \"Avanibhusana\", \"Avanija\", \"Avanikanta\", \"Avanimohana\", \"Avanindra\", \"Avanipala\", \"Avanisa\", \"Avanisvara\", \"Avantas\", \"Avantivarman\", \"Avapaka\", \"Avaraja\", \"Avarana\", \"Avariyas\", \"Avarodha\", \"Avarokin\", \"Avas\", \"Avasa\", \"Avasathya\", \"Avatsara\", \"Aveesh\", \"Avicala\", \"Avidanta\", \"Avidosa\", \"Avijanata\", \"Avijit\", \"Avijita\", \"Avijna\", \"Avijnatagati\", \"Avik\", \"Avika\", \"Avikala\", \"Aviklava\", \"Aviksipa\", \"Avilasa\", \"Avimukta\", \"Avinasa\", \"Avinash\", \"Avindhya\", \"Avinidevas\", \"Avinna\", \"Avipriya\", \"Aviraga\", \"Avirama\", \"Aviratha\", \"Avirhotra\", \"Avisa\", \"Avita\", \"Avitr\", \"Avitsit\", \"Avrita\", \"Avyaya\", \"Ayasmaya\", \"Ayasya\", \"Ayati\", \"Ayobahu\", \"Ayodhya\", \"Ayuddha\", \"Ayudha\", \"Ayuja\", \"Ayusman\", \"Ayustejas\", \"Ayuta\", \"Ayutajit\", \"Ayutanayi\", \"Ayutasva\", \"Ayutayu\", \"Babhri\", \"Babhrukesa\", \"Babhruloman\", \"Babhruvahana\", \"Babila\", \"Babu\", \"Babul\", \"Babulal\", \"Bacharaja\", \"Bachil\", \"Badal\", \"Badara\", \"Badaridasa\", \"Badarisaila\", \"Baddhananda\", \"Baddhanuraga\", \"Baddharajya\", \"Badrinath\", \"Baduli\", \"Bahadur\", \"Bahubala\", \"Bahudanti\", \"Bahudhana\", \"Bahudhara\", \"Bahugava\", \"Bahuhiranya\", \"Bahujnana\", \"Bahukalyana\", \"Bahuketu\", \"Bahulasavan\", \"Bahuli\", \"Bahumanya\", \"Bahumitra\", \"Bahumulya\", \"Bahupatu\", \"Bahuprada\", \"Bahupriya\", \"Bahurai\", \"Bahuratha\", \"Bahurja\", \"Bahusasta\", \"Bahuskti\", \"Bahusruta\", \"Bahusuvana\", \"Bahuvasin\", \"Bahuvata\", \"Bahuvida\", \"Bahuvidha\", \"Bahuvikrama\", \"Bahuvirya\", \"Bahyasvana\", \"Baijanatha\", \"Baira\", \"Bakanakha\", \"Bakasahavasin\", \"Bakavata\", \"Bakshi\", \"Bakthavatachalam\", \"Bakul\", \"Bakulesa\", \"Bakura\", \"Bala\", \"Balabhandhu\", \"Balabhrt\", \"Balacakravartin\", \"Balachandar\", \"Balachander\", \"Balachandran\", \"Baladeva\", \"Baladeya\", \"Baladhara\", \"Baladhi\", \"Baladhika\", \"Baladhya\", \"Baladitya\", \"Balagopal\", \"Balagra\", \"Balagupta\", \"Balajestha\", \"Balakara\", \"Balakasva\", \"Balakrishna\", \"Balakrishnan\", \"Balakrit\", \"Balaksa\", \"Balakunda\", \"Balamada\", \"Balamadi\", \"Balamitra\", \"Balamodaka\", \"Balamukhya\", \"Balanatha\", \"Balangaka\", \"Balanika\", \"Balaprada\", \"Balaprana\", \"Balar\", \"Balaraja\", \"Balasaheb\", \"Balasalin\", \"Balasena\", \"Balasinha\", \"Balastha\", \"Balasthala\", \"Balasubramaniam\", \"Balasubramanian\", \"Balasubramanyam\", \"Balavan\", \"Balavana\", \"Balavarnin\", \"Balavata\", \"Balavinastaka\", \"Balavira\", \"Balavirya\", \"Balayani\", \"Balayogi\", \"Balayukta\", \"Balayus\", \"Balbinder\", \"Baldev\", \"Balesa\", \"Balhikapungava\", \"Bali\", \"Balibhuja\", \"Balik\", \"Baliman\", \"Balin\", \"Balistha\", \"Balivaka\", \"Balram\", \"Balu\", \"Balula\", \"Balvinder\", \"Balya\", \"Banalinga\", \"Banarasi\", \"Banasankara\", \"Bandana\", \"Bandhujivin\", \"Bandhuman\", \"Bandhupala\", \"Bandin\", \"Banesvara\", \"Banhiman\", \"Banhistha\", \"Bani\", \"Banibrata\", \"Bansi\", \"Bansika\", \"Bapannabhatta\", \"Bappa\", \"Bappaka\", \"Bapu\", \"Bapudeva\", \"Barathi\", \"Barhacandra\", \"Barhaketu\", \"Barhana\", \"Barhanasva\", \"Barhanetra\", \"Barhapida\", \"Barhisada\", \"Barhisapala\", \"Barhistha\", \"Barkha\", \"Barota\", \"Barsati\", \"Baru\", \"Barun\", \"Baryai\", \"Basabi\", \"Basanta\", \"Basava\", \"Basavaraja\", \"Baskarapriya\", \"Basker\", \"Baspa\", \"Basu\", \"Bater\", \"Battaprayaga\", \"Batuka\", \"Beanta\", \"Bekura\", \"Beman\", \"Beni\", \"Beniprasada\", \"Bhabagrahi\", \"Bhabesa\", \"Bhadrabahu\", \"Bhadrabuja\", \"Bhadradeha\", \"Bhadrajatika\", \"Bhadraksa\", \"Bhadrakumbha\", \"Bhadranga\", \"Bhadranukha\", \"Bhadrasa\", \"Bhadrasara\", \"Bhadrasena\", \"Bhadrasila\", \"Bhadrasravas\", \"Bhadrasraya\", \"Bhadrasrenya\", \"Bhadrasva\", \"Bhadratanu\", \"Bhadratmaja\", \"Bhadravaha\", \"Bhadravarman\", \"Bhadrayu\", \"Bhadrika\", \"Bhadriraju\", \"Bhagana\", \"Bhagaratha\", \"Bhagata\", \"Bhagavan\", \"Bhagavana\", \"Bhagavant\", \"Bhagavatiprasada\", \"Bhaguri\", \"Bhagwan\", \"Bhagwandas\", \"Bhagwat\", \"Bhagwati\", \"Bhagyanandana\", \"Bhairavasin\", \"Bhaisora\", \"Bhajana\", \"Bhakta\", \"Bhaktaraja\", \"Bhalachandra\", \"Bhalandana\", \"Bhama\", \"Bhamaha\", \"Bhanaviya\", \"Bhandila\", \"Bhanu\", \"Bhanucandra\", \"Bhanumata\", \"Bhanuratha\", \"Bhanuvarman\", \"Bharanda\", \"Bharat\", \"Bharatabhusana\", \"Bharatendu\", \"Bharath\", \"Bharatha\", \"Bharathi\", \"Bharati\", \"Bharava\", \"Bhargabhumi\", \"Bhargava\", \"Bhargavaka\", \"Bhargavapriya\", \"Bhari\", \"Bharosa\", \"Bhart\", \"Bharti\", \"Bhartrari\", \"Bharupa\", \"Bhasin\", \"Bhaskar\", \"Bhaskaracarya\", \"Bhaskaran\", \"Bhasker\", \"Bhasura\", \"Bhattara\", \"Bhattarahalli\", \"Bhatti\", \"Bhaumendra\", \"Bhaumika\", \"Bhaumiratna\", \"Bhavadatta\", \"Bhavananda\", \"Bhavanatha\", \"Bhavaniprasada\", \"Bhavasagara\", \"Bhavatiga\", \"Bhavesh\", \"Bhavik\", \"Bhavika\", \"Bhavin\", \"Bhavishnu\", \"Bhavitra\", \"Bhavsar\", \"Bhavya\", \"Bheema\", \"Bheemarasetti\", \"Bhiksita\", \"Bhiksu\", \"Bhim\", \"Bhimacandra\", \"Bhimagupta\", \"Bhimanatha\", \"Bhimangada\", \"Bhimapala\", \"Bhimraja\", \"Bhiru\", \"Bhisaj\", \"Bhoganatha\", \"Bhonesa\", \"Bhrajasvata\", \"Bhrajata\", \"Bhrajathu\", \"Bhrajistha\", \"Bhrngara\", \"Bhubhuju\", \"Bhudev\", \"Bhudeva\", \"Bhudhana\", \"Bhugarbha\", \"Bhujabalin\", \"Bhujavirya\", \"Bhujyu\", \"Bhuman\", \"Bhumat\", \"Bhumija\", \"Bhumimitra\", \"Bhuminatha\", \"Bhumindra\", \"Bhumisvara\", \"Bhumitra\", \"Bhumya\", \"Bhunandana\", \"Bhunayaka\", \"Bhunetri\", \"Bhupa\", \"Bhupala\", \"Bhupen\", \"Bhuper\", \"Bhurida\", \"Bhuridaksina\", \"Bhuridyumna\", \"Bhurikirti\", \"Bhurivasu\", \"Bhusakra\", \"Bhusana\", \"Bhushan\", \"Bhusnu\", \"Bhutapala\", \"Bhutasantapana\", \"Bhutinanda\", \"Bhutiraja\", \"Bhutivardhana\", \"Bhuvadvasu\", \"Bhuvan\", \"Bhuvana\", \"Bhuvanacandra\", \"Bhuvanadaka\", \"Bhuvanadhisa\", \"Bhuvanapati\", \"Bhuvanaraja\", \"Bhuvanesa\", \"Bhuvanesh\", \"Bhuvanesvara\", \"Bhuvaneswary\", \"Bhuvapati\", \"Bhuvnesh\", \"Bhuyan\", \"Bidula\", \"Bidyut\", \"Bikarma\", \"Bikas\", \"Bikasa\", \"Billa\", \"Bimal\", \"Biman\", \"Bimbaka\", \"Bimbesvara\", \"Bimbita\", \"Bindra\", \"Bindu\", \"Bindumat\", \"Binduphala\", \"Binota\", \"Binoy\", \"Bipin\", \"Biplab\", \"Bipula\", \"Birbala\", \"Biren\", \"Birendra\", \"Biresvara\", \"Birju\", \"Bisambharnatha\", \"Bishen\", \"Bishwajeet\", \"Bishwajit\", \"Bishwamba\", \"Bisvajita\", \"Biswanath\", \"Biswaroop\", \"Bittu\", \"Bjupinder\", \"Blajit\", \"Bo\", \"Boddr\", \"Bodhamaya\", \"Bodhdisana\", \"Bodhendra\", \"Bodhinmanas\", \"Bogli\", \"Bokil\", \"Bolin\", \"Bommareddy\", \"Bontu\", \"Bora\", \"Borah\", \"Bordoloi\", \"Brahmabhuti\", \"Brahmadanda\", \"Brahmadhara\", \"Brahmadrsa\", \"Brahmadya\", \"Brahmagandha\", \"Brahmagha\", \"Brahmagiri\", \"Brahmajita\", \"Brahmakrita\", \"Brahmakunda\", \"Brahmamurti\", \"Brahmananda\", \"Brahmanida\", \"Brahmaprabha\", \"Brahmaprakasa\", \"Brahmapri\", \"Brahmarasa\", \"Brahmasiras\", \"Brahmasuras\", \"Brahmavarman\", \"Brahmavarta\", \"Brahmayasas\", \"Brahmayuj\", \"Brahmayus\", \"Brahme\", \"Brahmibhuta\", \"Brajamani\", \"Brgala\", \"Brhaddarman\", \"Brhadkaya\", \"Brhajjana\", \"Brhat\", \"Brhatksatra\", \"Bubhutsu\", \"Buddhadatta\", \"Buddhadev\", \"Buddhadeva\", \"Buddhaghosa\", \"Buddhagupta\", \"Buddhaguru\", \"Buddhajnana\", \"Buddhapala\", \"Buddhapalita\", \"Buddharaja\", \"Buddhasena\", \"Buddhasinha\", \"Buddhiprabha\", \"Buddhiraja\", \"Buddu\", \"Budh\", \"Budhana\", \"Budharatna\", \"Budhila\", \"Bukka\", \"Bunda\", \"Cachari\", \"Caitanya\", \"Caitya\", \"Caka\", \"Cakaraka\", \"Cakrasena\", \"Cakravata\", \"Cakrika\", \"Caksana\", \"Caksusya\", \"Camar\", \"Camaraja\", \"Camarvala\", \"Camikara\", \"Campakaprabhu\", \"Campat\", \"Campeya\", \"Campu\", \"Cancu\", \"Candakausika\", \"Candakirana\", \"Candasa\", \"Candidasa\", \"Candrabala\", \"Candrabali\", \"Candrabhana\", \"Candrabhasu\", \"Candrabhuti\", \"Candracarya\", \"Candradatta\", \"Candradipa\", \"Candraduta\", \"Candragomin\", \"Candrajita\", \"Candrakesa\", \"Candrakirana\", \"Candrakrti\", \"Candramanek\", \"Candramani\", \"Candramohan\", \"Candramrta\", \"Candrangada\", \"Candranibha\", \"Candraparvata\", \"Candraprabhava\", \"Candraprakasa\", \"Candraratna\", \"Candrasman\", \"Candrata\", \"Candravallabha\", \"Candravijaya\", \"Candravimala\", \"Candrin\", \"Canduri\", \"Canga\", \"Cangadasa\", \"Caranadasa\", \"Cariman\", \"Carudarsana\", \"Carudatta\", \"Caruhasan\", \"Carusara\", \"Caruvardhana\", \"Catura\", \"Cencanna\", \"Cetana\", \"Cetas\", \"Cetrama\", \"Chabila\", \"Chaila\", \"Chajju\", \"Chand\", \"Chandan\", \"Chander\", \"Chandra\", \"Chandrakant\", \"Chatrapati\", \"Chatravati\", \"Chattradhara\", \"Chavillakara\", \"Chayana\", \"Chhabi\", \"Chirag\", \"Chunda\", \"Chuttur\", \"Cidambara\", \"Cidananda\", \"Cidatmata\", \"Ciddhatu\", \"Cidrupa\", \"Cidullasa\", \"Cidvilasa\", \"Cidvilasini\", \"Cikita\", \"Ciksura\", \"Ciman\", \"Cintamukta\", \"Cintan\", \"Cintaratna\", \"Cintya\", \"Cirajusa\", \"Cirakari\", \"Cirayu\", \"Cirlabhdha\", \"Citaka\", \"Citapati\", \"Citrabhuta\", \"Citrakantha\", \"Citrakarman\", \"Citrasva\", \"Citravasu\", \"Citta\", \"Cittabhoga\", \"Cittaharin\", \"Cittaprabha\", \"Cittaprasadana\", \"Cittaprasanna\", \"Cittaranjana\", \"Cittavata\", \"Cittin\", \"Citvana\", \"Citvata\", \"Civarin\", \"Coksa\", \"Cudakarana\", \"Cudaratna\", \"Cunanda\", \"Cunda\", \"Dabhiti\", \"Dadhyan\", \"Dahana\", \"Dahanavardhana\", \"Daksanila\", \"Daksapati\", \"Daksayana\", \"Daksha\", \"Daksi\", \"Daksina\", \"Daladhisvara\", \"Dalajita\", \"Dalamodaka\", \"Dalapati\", \"Dalijit\", \"Dalip\", \"Daljit\", \"Damati\", \"Damin\", \"Damodar\", \"Damodaragoun\", \"Damodaran\", \"Damya\", \"Danasagara\", \"Danavat\", \"Danavira\", \"Dandaka\", \"Dandamukha\", \"Dandasena\", \"Dandasri\", \"Dandavirya\", \"Dandekar\", \"Danuja\", \"Dara\", \"Darbha\", \"Darbhi\", \"Darpana\", \"Darsana\", \"Darsanapala\", \"Darsaniya\", \"Daruna\", \"Darvanda\", \"Das\", \"Dasadhanus\", \"Dasadyu\", \"Dasajyoti\", \"Dasaketu\", \"Dasasarman\", \"Dash\", \"Dasmata\", \"Dasu\", \"Dasura\", \"Dasuri\", \"Dattadatta\", \"Dattatray\", \"Dattatreya\", \"Dattra\", \"Dattravat\", \"Daulat\", \"Davender\", \"Davindar\", \"Daya\", \"Dayada\", \"Dayala\", \"Dayanidhi\", \"Dayanita\", \"Dayaram\", \"Dayarama\", \"Dayasagara\", \"Dayavira\", \"Dayita\", \"Deb\", \"Debabrata\", \"Debangshu\", \"Debaprosad\", \"Debashis\", \"Debashish\", \"Debasis\", \"Debdan\", \"Debtosh\", \"Deepak\", \"Deepkaran\", \"Deepthi\", \"Deepti\", \"Dehan\", \"Dehesvara\", \"Deo\", \"Deochand\", \"Deodan\", \"Desaka\", \"Desaraj\", \"Desaraja\", \"Dev\", \"Devakumar\", \"Devamaya\", \"Devamisra\", \"Devamuni\", \"Devanabha\", \"Devanaman\", \"Devanand\", \"Devananda\", \"Devanayaka\", \"Devang\", \"Devanirmita\", \"Devanna\", \"Devansa\", \"Devanucara\", \"Devapada\", \"Devapalita\", \"Devapandita\", \"Devaprasada\", \"Devapuspa\", \"Devarajan\", \"Devarama\", \"Devaranya\", \"Devaratha\", \"Devarcaka\", \"Devarha\", \"Devarpana\", \"Devarsi\", \"Devasakha\", \"Devasakti\", \"Devasarasa\", \"Devasativa\", \"Devasiddhi\", \"Devasilpa\", \"Devasisa\", \"Devasista\", \"Devasisu\", \"Devasoma\", \"Devasru\", \"Devasthali\", \"Devasura\", \"Devataras\", \"Devavadha\", \"Devavarman\", \"Devavarsa\", \"Devavesman\", \"Devavi\", \"Devavid\", \"Devayana\", \"Devayasas\", \"Devayukta\", \"Devdas\", \"Devender\", \"Devesh\", \"Devesita\", \"Devesu\", \"Devidasa\", \"Devidatta\", \"Devila\", \"Devin\", \"Devindra\", \"Deviprasad\", \"Deviprasada\", \"Devya\", \"Dhamavat\", \"Dhanajita\", \"Dhananjay\", \"Dhananjaya\", \"Dhanapala\", \"Dhanavanta\", \"Dhandapani\", \"Dhanesha\", \"Dhanirama\", \"Dharabhuja\", \"Dharam\", \"Dharamsi\", \"Dharanija\", \"Dhareshwar\", \"Dharma\", \"Dharmacandra\", \"Dharmacara\", \"Dharmadatta\", \"Dharmadeva\", \"Dharmadhrt\", \"Dharmaghosa\", \"Dharmagopa\", \"Dharmamandhu\", \"Dharmamitra\", \"Dharmamrta\", \"Dharman\", \"Dharmanatha\", \"Dharmanitya\", \"Dharmapala\", \"Dharmaprabasa\", \"Dharmasarathi\", \"Dharmasila\", \"Dharmasimha\", \"Dharmasindhu\", \"Dharmasthavira\", \"Dharmavarna\", \"Dharmavati\", \"Dharmavira\", \"Dharmayasas\", \"Dharmayupa\", \"Dharmendra\", \"Dharmesvara\", \"Dharmistha\", \"Dharmottara\", \"Dhataki\", \"Dhavak\", \"Dhaval\", \"Dhavalacandra\", \"Dhavalapaksa\", \"Dhavita\", \"Dhaya\", \"Dheeraj\", \"Dhillip\", \"Dhirana\", \"Dhircetas\", \"Dhiresa\", \"Dhritiman\", \"Dhrsaj\", \"Dhrsita\", \"Dhrsni\", \"Dhrstaka\", \"Dhrtadaksa\", \"Dhrtadhiti\", \"Dhrtaraja\", \"Dhrtatman\", \"Dhruv\", \"Dhruvasva\", \"Dhruvi\", \"Dhuna\", \"Dhundhi\", \"Dhuninatha\", \"Dhupa\", \"Dhupala\", \"Dhupanravan\", \"Dhurai\", \"Dhvanamodin\", \"Dhyana\", \"Dhyanayogi\", \"Dhyanesa\", \"Dibag\", \"Didhitimat\", \"Didyotisu\", \"Didyu\", \"Digbhraja\", \"Digjaya\", \"Digvijay\", \"Diksin\", \"Diksita\", \"Dileep\", \"Dilip\", \"Dimbha\", \"Dindayala\", \"Dinesh\", \"Dipa\", \"Dipak\", \"Dipankura\", \"Dipen\", \"Dipin\", \"Dipita\", \"Diptatapas\", \"Diptavirya\", \"Dirghadanstra\", \"Dirghadarsana\", \"Dirghasruta\", \"Disnu\", \"Ditaujas\", \"Ditikara\", \"Divekar\", \"Divesh\", \"Divigamana\", \"Divija\", \"Diviksaya\", \"Diviraj\", \"Divoja\", \"Divya\", \"Divyacaksus\", \"Divyadarsana\", \"Divyadeha\", \"Divyaprabhava\", \"Divyendu\", \"Divyesh\", \"Doki\", \"Donkal\", \"Dorai\", \"Doraisvami\", \"Doraiswamy\", \"Drdhadbhakti\", \"Drdhahanu\", \"Drdhaksa\", \"Drdhanga\", \"Drdharuci\", \"Drdhesudhi\", \"Dridhabuddhi\", \"Dronacarya\", \"Drsadvata\", \"Drsika\", \"Drstasara\", \"Drstavirya\", \"Druha\", \"Duddu\", \"Dudha\", \"Dudhanatha\", \"Dulala\", \"Duleep\", \"Dulicandra\", \"Durba\", \"Durdamana\", \"Durdarsin\", \"Durgadasa\", \"Durgadatta\", \"Durgamadhab\", \"Durlabha\", \"Durvarana\", \"Durvartu\", \"Dustara\", \"Dutta\", \"Dvarakadasa\", \"Dvimidha\", \"Dvimurdhan\", \"Dyota\", \"Dyudhaman\", \"Dyujaya\", \"Dyuksa\", \"Dyunisa\", \"Dyutana\", \"Dyutita\", \"Edha\", \"Edhas\", \"Edhatu\", \"Edhita\", \"Ehsan\", \"Ekabandhu\", \"Ekabhakta\", \"Ekachit\", \"Ekada\", \"Ekadhipati\", \"Ekagra\", \"Ekahans\", \"Ekaja\", \"Ekak\", \"Ekala\", \"Ekama\", \"Ekanai\", \"Ekanatha\", \"Ekansa\", \"Ekantin\", \"Ekaraya\", \"Ekasarga\", \"Ekata\", \"Ekatala\", \"Ekatan\", \"Ekatma\", \"Ekayana\", \"Ekayasti\", \"Ekayastika\", \"Ekayavan\", \"Ekdak\", \"Ekisa\", \"Ekodara\", \"Ekta\", \"Ekval\", \"Elu\", \"Enavada\", \"Esana\", \"Esika\", \"Esita\", \"Ettan\", \"Evavada\", \"Gagan\", \"Gaganaghosa\", \"Gaganecara\", \"Ganamnya\", \"Gandhesa\", \"Ganesan\", \"Ganeshram\", \"Ganga\", \"Gangika\", \"Ganin\", \"Ganjan\", \"Ganpat\", \"Garbhaka\", \"Gatha\", \"Gattani\", \"Gaur\", \"Gauradas\", \"Gauramukha\", \"Gauraprabha\", \"Gaurav\", \"Gaurava\", \"Gausra\", \"Gautam\", \"Gavamrita\", \"Gayan\", \"Gayand\", \"Gayaplata\", \"Gayaprasada\", \"Geet\", \"Ghanambu\", \"Ghanaram\", \"Ghanshyam\", \"Gharbharan\", \"Gian\", \"Giani\", \"Giri\", \"Giribhu\", \"Girija\", \"Girijaprasada\", \"Girimana\", \"Giriraj\", \"Gita\", \"Go\", \"Gobind\", \"Gobinda\", \"Gogana\", \"Gokanya\", \"Golaki\", \"Golap\", \"Goman\", \"Goolab\", \"Gopa\", \"Gopakumar\", \"Gopal\", \"Gopaladasa\", \"Gopalakrishna\", \"Gopalakrishnan\", \"Gopalan\", \"Gopalaswamy\", \"Gopalkrishna\", \"Gopalkrishnan\", \"Gopi\", \"Gopicandana\", \"Gopichandra\", \"Gopila\", \"Gopinath\", \"Gopu\", \"Gorla\", \"Gosalaka\", \"Gosarya\", \"Gotam\", \"Goutham\", \"Govardhanen\", \"Govil\", \"Govind\", \"Govinda\", \"Govindagowda\", \"Govindan\", \"Govindappa\", \"Govindarajan\", \"Govindarajulu\", \"Govindaswamy\", \"Grama\", \"Gramakuta\", \"Gramapala\", \"Grht\", \"Guirdeep\", \"Gul\", \"Gulloo\", \"Gulyani\", \"Gunadhara\", \"Gunadhya\", \"Gunagya\", \"Gunamaya\", \"Gunanidhi\", \"Gunasekhara\", \"Gunasraja\", \"Gunavata\", \"Gunayukta\", \"Gunesa\", \"Gunidatta\", \"Gunin\", \"Gunottama\", \"Gurdip\", \"Gurmit\", \"Guru\", \"Gurucarana\", \"Guruda\", \"Gurudasa\", \"Gurudeva\", \"Gurudipa\", \"Gurumel\", \"Gurumita\", \"Gurumukha\", \"Gurumurthi\", \"Gurumurti\", \"Gurunama\", \"Guruprasad\", \"Guruprasada\", \"Gururajan\", \"Gurusarana\", \"Gurusimran\", \"Guruswamy\", \"Guruvacana\", \"Guruvayur\", \"Guruvirna\", \"Gusana\", \"Gutsaka\", \"Gyaneshwar\", \"Gyanprakash\", \"Hakesa\", \"Haliksana\", \"Hansakaya\", \"Hansaraja\", \"Hansini\", \"Hanumant\", \"Haramala\", \"Haramanas\", \"Haran\", \"Haranath\", \"Haranetra\", \"Hararupa\", \"Harasvarupa\", \"Haratejas\", \"Haravira\", \"Harbajan\", \"Harbans\", \"Hardeep\", \"Hari\", \"Haria\", \"Haricapa\", \"Haricarana\", \"Haridhana\", \"Hariharan\", \"Harija\", \"Harikanta\", \"Harikishan\", \"Harilala\", \"Harimbhara\", \"Harinath\", \"Harinder\", \"Hariraja\", \"Harish\", \"Harishkumar\", \"Haritaka\", \"Harjeet\", \"Harjinder\", \"Harjit\", \"Harmage\", \"Harnath\", \"Harnish\", \"Haromohana\", \"Harosit\", \"Harpinder\", \"Harsada\", \"Harsala\", \"Harsamana\", \"Harsavardhana\", \"Harsendu\", \"Harsh\", \"Harsha\", \"Harshad\", \"Harshal\", \"Harshita\", \"Harsoda\", \"Harstia\", \"Hasamukha\", \"Hasaratha\", \"Hasari\", \"Hasta\", \"Hatha\", \"Hatisa\", \"Hatitosa\", \"Havaldar\", \"Hayavahana\", \"Heli\", \"Hem\", \"Hema\", \"Hemai\", \"Hemal\", \"Heman\", \"Hemant\", \"Hemanth\", \"Hemanya\", \"Hima\", \"Himambu\", \"Himavalluka\", \"Himavana\", \"Himayati\", \"Himmat\", \"Hina\", \"Hinadosa\", \"Hiral\", \"Hiralal\", \"Hiranyadanta\", \"Hiranyina\", \"Hiren\", \"Hiresa\", \"Hiru\", \"Hiryur\", \"Hita\", \"Hitaisi\", \"Hitesh\", \"Hitesin\", \"Hitesvara\", \"Honna\", \"Hosang\", \"Hresa\", \"Hridaya\", \"Hridayaja\", \"Hridayangam\", \"Hridayesa\", \"Hridayesvara\", \"Hriman\", \"Hukam\", \"Hulas\", \"Hurditya\", \"Ibhya\", \"Idhma\", \"Idhmavaha\", \"Ijyasila\", \"Iksana\", \"Iksuda\", \"Ikvala\", \"Ila\", \"Ilacandra\", \"Iladhara\", \"Ilanko\", \"Ilaspada\", \"Ilaspati\", \"Ili\", \"Inakanta\", \"Inan\", \"Inder\", \"Inderjit\", \"Inderpal\", \"Indrabala\", \"Indradatta\", \"Indradu\", \"Indraghosa\", \"Indragopa\", \"Indraja\", \"Indrapramati\", \"Indrapriya\", \"Indrarajan\", \"Indrasana\", \"Indrasita\", \"Indrasura\", \"Indrasvat\", \"Indratan\", \"Indravadana\", \"Indrayan\", \"Indrayatana\", \"Indrayava\", \"Indrinika\", \"Indudeep\", \"Indumathy\", \"Indumukhi\", \"Inganam\", \"Ira\", \"Iravan\", \"Iravata\", \"Irimpu\", \"Irith\", \"Isan\", \"Isanam\", \"Isat\", \"Isav\", \"Isayu\", \"Ishao\", \"Ishwaran\", \"Ismin\", \"Isrita\", \"Istaka\", \"Istika\", \"Isuka\", \"Isvaracandra\", \"Isvaraprasada\", \"Isvasa\", \"Itar\", \"Iyam\", \"Jabhar\", \"Jadhav\", \"Jagacitra\", \"Jagad\", \"Jagadananda\", \"Jagadbala\", \"Jagadish\", \"Jagajiva\", \"Jagan\", \"Jaganmani\", \"Jagannath\", \"Jagannathan\", \"Jagannidhi\", \"Jaganu\", \"Jagaprtia\", \"Jagara\", \"Jagarupa\", \"Jagat\", \"Jagatipati\", \"Jagatjita\", \"Jagatjiva\", \"Jagatkarna\", \"Jagatprakasa\", \"Jagavanta\", \"Jagdish\", \"Jagganathan\", \"Jagisa\", \"Jagjit\", \"Jagmi\", \"Jagnu\", \"Jaguri\", \"Jai\", \"Jaibhusana\", \"Jaideep\", \"Jaidev\", \"Jaideva\", \"Jaidhvani\", \"Jaigata\", \"Jaighosa\", \"Jaigupta\", \"Jaikara\", \"Jaikirti\", \"Jaikrta\", \"Jaimalla\", \"Jaimangala\", \"Jaipida\", \"Jairaja\", \"Jairasa\", \"Jairath\", \"Jaisekhara\", \"Jaishankar\", \"Jaisinharaja\", \"Jaisisa\", \"Jaisnava\", \"Jaistambha\", \"Jaitanga\", \"Jaitrama\", \"Jaivaha\", \"Jaivanta\", \"Jaivata\", \"Jaivira\", \"Jaja\", \"Jajal\", \"Jajhara\", \"Jalada\", \"Jalambara\", \"Jalancala\", \"Jalanidhi\", \"Jalarka\", \"Jalasa\", \"Jaman\", \"Jambunathan\", \"Jamshed\", \"Jana\", \"Janacandra\", \"Janadhipa\", \"Janaka\", \"Janakiraman\", \"Jananatha\", \"Janapadin\", \"Janapalaka\", \"Janapati\", \"Janarajan\", \"Janardan\", \"Janardhan\", \"Janardhanan\", \"Janasruta\", \"Janaswami\", \"Janava\", \"Janendra\", \"Janesa\", \"Jangi\", \"Janistha\", \"Janita\", \"Janmajyestha\", \"Janu\", \"Janya\", \"Jaritri\", \"Jasalina\", \"Jasamita\", \"Jasapala\", \"Jasaraja\", \"Jasavanta\", \"Jasavira\", \"Jaswant\", \"Jaswinder\", \"Jata\", \"Jatacira\", \"Jatakara\", \"Jatasaya\", \"Jatasila\", \"Jatin\", \"Jatinder\", \"Jatindhara\", \"Jatusthira\", \"Jatya\", \"Javagal\", \"Javanila\", \"Javeed\", \"Javin\", \"Javistha\", \"Jawahar\", \"Jawahara\", \"Jawaheer\", \"Jay\", \"Jaya\", \"Jayachandran\", \"Jayachnadran\", \"Jayadev\", \"Jayadevan\", \"Jayakar\", \"Jayakrishna\", \"Jayakumar\", \"Jayalakshm\", \"Jayan\", \"Jayani\", \"Jayant\", \"Jayanta\", \"Jayanth\", \"Jayanthi\", \"Jayaram\", \"Jayaraman\", \"Jayaratha\", \"Jayashankar\", \"Jayashree\", \"Jayasnava\", \"Jayasvamin\", \"Jayenda\", \"Jayin\", \"Jayisnu\", \"Jayprakash\", \"Jaywant\", \"Jeet\", \"Jeetender\", \"Jeman\", \"Jenya\", \"Jetva\", \"Jeyakesavan\", \"Jhawar\", \"Jhilmit\", \"Jhinka\", \"Jigisu\", \"Jinaduraja\", \"Jinda\", \"Jinraj\", \"Jit\", \"Jita\", \"Jitender\", \"Jitendra\", \"Jitinder\", \"Jitrendra\", \"Jitrindra\", \"Jitvan\", \"Jivabhuta\", \"Jivadeva\", \"Jivaja\", \"Jivana\", \"Jivanadhara\", \"Jivanatha\", \"Jivanikaya\", \"Jivaratna\", \"Jivatha\", \"Jivavijaya\", \"Jiwani\", \"Joginder\", \"Johar\", \"Josa\", \"Josita\", \"Joydeep\", \"Joyendu\", \"Joyjeet\", \"Jrashesh\", \"Jugala\", \"Juggy\", \"Jugnu\", \"Justa\", \"Juvas\", \"Jvala\", \"Jvalanmani\", \"Jvalaprasada\", \"Jvalka\", \"Jyayas\", \"Jyotibhasin\", \"Jyotin\", \"Jyotindra\", \"Jyotiprakasa\", \"Jyotirbhaga\", \"Kacangala\", \"Kacapa\", \"Kacesvara\", \"Kacima\", \"Kadambanila\", \"Kadambi\", \"Kaditula\", \"Kagni\", \"Kahola\", \"Kailash\", \"Kaivalya\", \"Kajal\", \"Kajjala\", \"Kakanda\", \"Kakila\", \"Kakodara\", \"Kakubjaya\", \"Kakudman\", \"Kakunda\", \"Kala\", \"Kalabhasin\", \"Kalabhiti\", \"Kalakanja\", \"Kalakuta\", \"Kalal\", \"Kalale\", \"Kalamurti\", \"Kalankura\", \"Kalapriya\", \"Kalaraja\", \"Kalasinha\", \"Kaldhuta\", \"Kalhana\", \"Kalhara\", \"Kalicarana\", \"Kalidas\", \"Kalidasa\", \"Kalijan\", \"Kalila\", \"Kalita\", \"Kallola\", \"Kalmali\", \"Kalpana\", \"Kalpanath\", \"Kalpanatha\", \"Kalpesa\", \"Kalpesh\", \"Kalpita\", \"Kalskandha\", \"Kalvik\", \"Kalya\", \"Kalyan\", \"Kalyanaraman\", \"Kalyanasarman\", \"Kalyanasundaram\", \"Kalyanavarman\", \"Kalyanavata\", \"Kalyanin\", \"Kam\", \"Kamadev\", \"Kamakshi\", \"Kamal\", \"Kamalabuddhi\", \"Kamalahasa\", \"Kamalakara\", \"Kamalamaya\", \"Kamalanayana\", \"Kamalanetra\", \"Kamalodaya\", \"Kamaraja\", \"Kamarajan\", \"Kamarupa\", \"Kamasakha\", \"Kamasrama\", \"Kamayani\", \"Kambadur\", \"Kamboja\", \"Kamesh\", \"Kameswar\", \"Kameswara\", \"Kami\", \"Kamika\", \"Kamlesh\", \"Kamuka\", \"Kanak\", \"Kanakadatta\", \"Kanakakanta\", \"Kanakambujam\", \"Kanakamya\", \"Kanakarasa\", \"Kanakendu\", \"Kanakraj\", \"Kanala\", \"Kanca\", \"Kancuka\", \"Kancukita\", \"Kandala\", \"Kandarpaketu\", \"Kanikaraja\", \"Kaninaka\", \"Kanjam\", \"Kanjavadana\", \"Kanji\", \"Kankala\", \"Kanksita\", \"Kannan\", \"Kant\", \"Kanta\", \"Kanthamani\", \"Kanti\", \"Kantida\", \"Kanu\", \"Kanvala\", \"Kanvar\", \"Kanwal\", \"Kapalabhrt\", \"Kapalaketu\", \"Kapil\", \"Kapilan\", \"Kara\", \"Karacura\", \"Karajala\", \"Karakasa\", \"Karambha\", \"Karan\", \"Karanam\", \"Karanja\", \"Karapagam\", \"Karavinda\", \"Karikrsna\", \"Karin\", \"Karisnu\", \"Karkasa\", \"Karmacandra\", \"Karmanya\", \"Karmarkar\", \"Karmasura\", \"Karmatman\", \"Karmavajra\", \"Karmavira\", \"Karmendra\", \"Karnadhara\", \"Karnaka\", \"Karnamukha\", \"Karnavira\", \"Karnikara\", \"Karniki\", \"Karpuratilaka\", \"Kartara\", \"Karthik\", \"Karthikeyan\", \"Kartik\", \"Kartikeya\", \"Karu\", \"Karunakara\", \"Karunamaya\", \"Karunamoorthy\", \"Karunanidhi\", \"Karunesh\", \"Kasara\", \"Kashmiri\", \"Kashyap\", \"Kasi\", \"Kasilingam\", \"Kasin\", \"Kasinathan\", \"Kasirama\", \"Kasisnu\", \"Kataka\", \"Katama\", \"Katamaraja\", \"Kathita\", \"Katriyar\", \"Katta\", \"Katti\", \"Katumbi\", \"Katyayani\", \"Kavana\", \"Kavi\", \"Kavibhusana\", \"Kavisvara\", \"Kavita\", \"Kavitha\", \"Kavitva\", \"Kerkhi\", \"Ketan\", \"Ketana\", \"Ketika\", \"Ketita\", \"Ketubha\", \"Ketubhuta\", \"Ketutra\", \"Kevala\", \"Kevalin\", \"Keya\", \"Keyur\", \"Keyura\", \"Khamurti\", \"Khanaka\", \"Khanjana\", \"Kharag\", \"Khatra\", \"Khatri\", \"Khawaja\", \"Khayali\", \"Khetan\", \"Khettry\", \"Khevanaraja\", \"Khokhun\", \"Khullana\", \"Khusbu\", \"Khusila\", \"Khusirama\", \"Khusmana\", \"Khusvanta\", \"Kinjata\", \"Kiran\", \"Kirana\", \"Kirika\", \"Kirin\", \"Kirit\", \"Kirita\", \"Kirpal\", \"Kirtana\", \"Kirtenya\", \"Kirti\", \"Kirtibhusana\", \"Kirtideva\", \"Kirtidhara\", \"Kirtimaya\", \"Kirtita\", \"Kisalaya\", \"Kishan\", \"Kishen\", \"Kishor\", \"Kishore\", \"Kisku\", \"Kisni\", \"Kistikumara\", \"Kistna\", \"Komal\", \"Komala\", \"Koti\", \"Kotijit\", \"Kotisvara\", \"Kotta\", \"Kovalan\", \"Kovida\", \"Krakaca\", \"Krama\", \"Krantivira\", \"Kratubhuj\", \"Kratukarana\", \"Kratumaya\", \"Kratupati\", \"Kratvamagha\", \"Kratvanga\", \"Kris\", \"Krish\", \"Krishan\", \"Krishanin\", \"Krishnakumar\", \"Krishnamachari\", \"Krishnamoorthy\", \"Krishnamurthi\", \"Krishnamurthy\", \"Krishnamy\", \"Krishnan\", \"Krishnapillai\", \"Krishnaraju\", \"Krishnaswami\", \"Krishnaswamy\", \"Kriyavidhi\", \"Krpala\", \"Krpana\", \"Krpanaka\", \"Krpananda\", \"Krpasagara\", \"Krsnakanta\", \"Krsnamitra\", \"Krsnantara\", \"Krsnika\", \"Krsniya\", \"Krtahasta\", \"Krtakama\", \"Krtalaksana\", \"Krtamukha\", \"Krtanjali\", \"Krtsna\", \"Krtsnavid\", \"Krtya\", \"Ksama\", \"Ksamabhuj\", \"Ksamamitra\", \"Ksaman\", \"Ksamapati\", \"Ksambhuj\", \"Ksantu\", \"Ksapavana\", \"Ksaya\", \"Ksayana\", \"Ksayata\", \"Ksema\", \"Ksemamaya\", \"Kshama\", \"Kshitij\", \"Ksipanu\", \"Ksirasukla\", \"Ksitendra\", \"Ksitibhuj\", \"Ksitiksita\", \"Ksitilavabhuj\", \"Ksitinatha\", \"Ksitindra\", \"Ksitipati\", \"Ksitipuruhuta\", \"Ksitisa\", \"Ksonideva\", \"Kuberabandhu\", \"Kucandana\", \"Kudhara\", \"Kuhuk\", \"Kujapa\", \"Kukila\", \"Kulabhusana\", \"Kuladeva\", \"Kuladipa\", \"Kuladipaka\", \"Kulaja\", \"Kulamani\", \"Kulapati\", \"Kulatilaka\", \"Kulavira\", \"Kuldeep\", \"Kuldip\", \"Kulin\", \"Kulisaya\", \"Kulluka\", \"Kulvinder\", \"Kulvir\", \"Kumar\", \"Kumara\", \"Kumaragupta\", \"Kumaran\", \"Kumarasamy\", \"Kumaresan\", \"Kumarila\", \"Kunamneni\", \"Kundam\", \"Kundan\", \"Kunjita\", \"Kunju\", \"Kunsa\", \"Kuntaka\", \"Kupati\", \"Kuppusamy\", \"Kuppuswamy\", \"Kurcika\", \"Kuruk\", \"Kuruntika\", \"Kusalin\", \"Kush\", \"Kushan\", \"Kushwah\", \"Kushwaha\", \"Kushwant\", \"Kusumakar\", \"Kusumakara\", \"Kusumasekhara\", \"Kusumasrestha\", \"Kusumoda\", \"Kusumojjvala\", \"Kusumojvala\", \"Kutilagesa\", \"Kuvala\", \"Kuvalyesa\", \"Kvana\", \"Lakshman\", \"Lakshmana\", \"Lakshmanan\", \"Lal\", \"Lala\", \"Lall\", \"Laloo\", \"Laxman\", \"Leil\", \"Loganathan\", \"Lookman\", \"Madanraj\", \"Madhav\", \"Madhavan\", \"Madhavrao\", \"Madhuveer\", \"Mahavir\", \"Mahendra\", \"Mahesh\", \"Maheshwari\", \"Maheswari\", \"Mahinder\", \"Malkiat\", \"Mani\", \"Manik\", \"Manilal\", \"Manjinder\", \"Manjit\", \"Manoj\", \"Manoja\", \"Manoo\", \"Manooj\", \"Manu\", \"Massem\", \"Mathur\", \"Mathura\", \"Milkesh\", \"Min\", \"Mina\", \"Mohan\", \"Mohana\", \"Mohanakrishnan\", \"Mohankumar\", \"Mohinder\", \"Mohindra\", \"Moosa\", \"Motilal\", \"Mrinal\", \"Mukesh\", \"Mukul\", \"Murali\", \"Muralidaran\", \"Muralidhar\", \"Muralidhara\", \"Muru\", \"Nabil\", \"Nagendra\", \"Naina\", \"Nalin\", \"Nand\", \"Nanda\", \"Narain\", \"Narayan\", \"Narayana\", \"Narayanan\", \"Naren\", \"Narendra\", \"Naresh\", \"Narinder\", \"Narotham\", \"Narottam\", \"Nataraj\", \"Nataraja\", \"Natarajan\", \"Natraj\", \"Natrajan\", \"Naveen\", \"Navin\", \"Navjot\", \"Nayan\", \"Nichit\", \"Nikhil\", \"Niranjan\", \"Nitya\", \"Nityanand\", \"Om\", \"Omar\", \"Palla\", \"Pallab\", \"Paramananda\", \"Paramjit\", \"Paras\", \"Parasher\", \"Paresh\", \"Parvathi\", \"Parvatiyar\", \"Patel\", \"Peshora\", \"Piara\", \"Pirthee\", \"Pitambar\", \"Prabha\", \"Prabhakar\", \"Prabhakaran\", \"Prabhu\", \"Prabhukumar\", \"Prabhusha\", \"Prabodh\", \"Pradeep\", \"Prafel\", \"Prakash\", \"Pramod\", \"Pran\", \"Pranav\", \"Pranay\", \"Prasad\", \"Pratap\", \"Prathapan\", \"Pravin\", \"Prem\", \"Prema\", \"Premanand\", \"Premchand\", \"Pritam\", \"Pururavas\", \"Purushotham\", \"Purushothaman\", \"Purushottam\", \"Qhanraj\", \"Radhakrish\", \"Radhakrishna\", \"Radhakrishnan\", \"Raghav\", \"Raghava\", \"Raghavachary\", \"Raghavan\", \"Raghu\", \"Raghunand\", \"Raghuvir\", \"Rahul\", \"Raivata\", \"Raj\", \"Raja\", \"Rajam\", \"Rajanikant\", \"Rajeeb\", \"Rajeev\", \"Rajendar\", \"Rajender\", \"Rajendra\", \"Rajendran\", \"Rajesh\", \"Rajeshh\", \"Rajeshkumar\", \"Rajeshwari\", \"Rajeswara\", \"Rajib\", \"Rajik\", \"Rajil\", \"Rajindar\", \"Rajiv\", \"Rajjun\", \"Rajkumar\", \"Rajluxmi\", \"Rajminder\", \"Rajneesh\", \"Rajni\", \"Rajnish\", \"Rajpal\", \"Raju\", \"Ram\", \"Rama\", \"Ramabhadran\", \"Ramachander\", \"Ramachandra\", \"Ramachandramurthy\", \"Ramachandran\", \"Ramakant\", \"Ramakanth\", \"Ramakota\", \"Ramakrishna\", \"Ramakrishnan\", \"Ramani\", \"Ramdas\", \"Ramesh\", \"Rameshchandra\", \"Rameshwar\", \"Rameysh\", \"Ramgopal\", \"Ramindar\", \"Raminder\", \"Ramkrishna\", \"Ramnarayan\", \"Ramnath\", \"Ramu\", \"Rana\", \"Ranjit\", \"Ranjith\", \"Ras\", \"Rasesh\", \"Ratan\", \"Rati\", \"Ratilal\", \"Ravi\", \"Ravichandran\", \"Ravider\", \"Ravinder\", \"Ravindiran\", \"Ravindra\", \"Ravindran\", \"Ravishankar\", \"Renu\", \"Rohan\", \"Rohit\", \"Romesh\", \"Roshan\", \"Runjeet\", \"Rupchand\", \"Sabu\", \"Sachdev\", \"Sakar\", \"Samant\", \"Sanjay\", \"Sanjeev\", \"Sanjiv\", \"Sanjog\", \"Sanjoy\", \"Sankar\", \"Sankara\", \"Santu\", \"Saran\", \"Sarang\", \"Saravanan\", \"Sarda\", \"Sardar\", \"Sardul\", \"Sateesh\", \"Sateesha\", \"Satish\", \"Satishkuma\", \"Satyajit\", \"Saurabh\", \"Saurav\", \"Sefreen\", \"Senthil\", \"Seth\", \"Sewa\", \"Sewam\", \"Shaaban\", \"Sham\", \"Shamabhat\", \"Shambu\", \"Shankar\", \"Shanker\", \"Sharma\", \"Shashi\", \"Sheetal\", \"Shekar\", \"Shekara\", \"Shekhar\", \"Sheth\", \"Shital\", \"Shiv\", \"Shivaji\", \"Shripati\", \"Shyam\", \"Shyamal\", \"Siddarth\", \"Siddharth\", \"Siddhartha\", \"Sitaram\", \"Sivarasa\", \"Sohan\", \"Sonal\", \"Sonali\", \"Sridhar\", \"Srikant\", \"Srikanta\", \"Srikanth\", \"Srinivas\", \"Srinivasa\", \"Srinivasan\", \"Srinivasiah\", \"Sriram\", \"Subhadra\", \"Subhadran\", \"Subhash\", \"Sudeep\", \"Sudhin\", \"Sudhir\", \"Sultan\", \"Sumanjit\", \"Sundar\", \"Sundara\", \"Sundaram\", \"Sunder\", \"Sunderi\", \"Sunil\", \"Suresh\", \"Surinder\", \"Suseela\", \"Susheel\", \"Susheela\", \"Sushil\", \"Susila\", \"Swapan\", \"Swapna\", \"Tara\", \"Tarun\", \"Taruna\", \"Tej\", \"Teja\", \"Tejal\", \"Teji\", \"Teju\", \"Thakur\", \"Tulasi\", \"Tulsi\", \"Umashankar\", \"Uttam\", \"Vasan\", \"Vasant\", \"Vasanta\", \"Vasantha\", \"Vasanthi\", \"Vasantraj\", \"Vasu\", \"Ved\", \"Vedi\", \"Venkat\", \"Venkata\", \"Venkatesh\", \"Venkatesha\", \"Vidya\", \"Vidyahar\", \"Vij\", \"Vijai\", \"Vijay\", \"Vijaya\", \"Vikas\", \"Vikram\", \"Vikrant\", \"Vimal\", \"Vinay\", \"Vinaya\", \"Vinayak\", \"Vinayaka\", \"Vindoo\", \"Vinod\", \"Vishnu\", \"Vishwanand\", \"Vishwanata\", \"Vishwanath\", \"Vishy\", \"Yadav\", \"Yadawa\", \"Yash\", \"Yashpal\", \"Yog\"]], [[\"Kailasa\", \"Female\"], [\"Aanchal\", \"Aarthika\", \"Aarti\", \"Abburi\", \"Abha\", \"Abhati\", \"Abheri\", \"Abhibha\", \"Abhidhya\", \"Abhidya\", \"Abhigurti\", \"Abhijiti\", \"Abhijna\", \"Abhikya\", \"Abhilasa\", \"Abhilasin\", \"Abhiniti\", \"Abhipri\", \"Abhipriti\", \"Abhipuspam\", \"Abhiraksa\", \"Abhirati\", \"Abhirka\", \"Abhiruci\", \"Abhisri\", \"Abhisvara\", \"Abhiti\", \"Abhivadaka\", \"Abhivibha\", \"Abhraganga\", \"Abhramu\", \"Abhranti\", \"Abhrayanti\", \"Abhumukhi\", \"Abja\", \"Abjini\", \"Aboli\", \"Acala\", \"Acaryanandana\", \"Acaryaputra\", \"Acaryatanaya\", \"Acchoda\", \"Achit\", \"Acira\", \"Adapa\", \"Adarna\", \"Adevi\", \"Adhimuhya\", \"Adhrsya\", \"Adibuddha\", \"Adilakshmi\", \"Adita\", \"Aditya\", \"Adityabandhu\", \"Adlakha\", \"Adrika\", \"Adrsyanti\", \"Adusumilli\", \"Advaitavadini\", \"Agnajita\", \"Agnayi\", \"Agneyi\", \"Agnimukhi\", \"Agnivardini\", \"Agraja\", \"Agrayi\", \"Ahalya\", \"Ahana\", \"Ahanti\", \"Ahdita\", \"Ahi\", \"Ahilya\", \"Ahimsa\", \"Ahladita\", \"Ahu\", \"Ahuti\", \"Aiksvaki\", \"Aisvarya\", \"Aiyah\", \"Aja\", \"Ajai\", \"Ajamukhhi\", \"Ajani\", \"Ajanta\", \"Ajara\", \"Ajatashatru\", \"Ajathya\", \"Ajaya\", \"Aji\", \"Ajinder\", \"Ajitha\", \"Ajmani\", \"Ajoy\", \"Ajwani\", \"Akaash\", \"Akaliki\", \"Akalka\", \"Akanksa\", \"Akasadipa\", \"Akasaganga\", \"Akasi\", \"Akella\", \"Akkina\", \"Akkiraju\", \"Akolekar\", \"Akranti\", \"Akriti\", \"Akrti\", \"Aksasutra\", \"Aksi\", \"Aksiti\", \"Akupara\", \"Akuti\", \"Alagar\", \"Alaka\", \"Alakaravati\", \"Alambusa\", \"Alamelu\", \"Alapini\", \"Alisa\", \"Alishah\", \"Alka\", \"Alkesh\", \"Alla\", \"Alpa\", \"Alpana\", \"Alwar\", \"Amal\", \"Amala\", \"Amani\", \"Amaraja\", \"Amaranagana\", \"Amaratatini\", \"Amaravati\", \"Amardeep\", \"Amari\", \"Amarta\", \"Amati\", \"Amavasya\", \"Amba\", \"Ambady\", \"Ambala\", \"Ambali\", \"Ambalika\", \"Ambaraprabha\", \"Ambatipudi\", \"Ambaya\", \"Ambhoji\", \"Ambhojini\", \"Ambi\", \"Ambika\", \"Ambrish\", \"Ambuj\", \"Ambujakshi\", \"Ambujanana\", \"Ambumati\", \"Ambupadma\", \"Ambuvahini\", \"Ameena\", \"Ameet\", \"Ami\", \"Amiksh\", \"Amina\", \"Amisa\", \"Amita\", \"Amitesvari\", \"Amiti\", \"Amiya\", \"Ammu\", \"Amodini\", \"Amoghaksi\", \"Amohanika\", \"Amramanjari\", \"Amrit\", \"Amrita\", \"Amritama\", \"Amritansh\", \"Amritendu\", \"Amruth\", \"Amsel\", \"Amutha\", \"Anabhra\", \"Anadya\", \"Anaga\", \"Anamika\", \"Anamra\", \"Ananda\", \"Anandadevi\", \"Anandalakshmi\", \"Anandamayi\", \"Anandaparna\", \"Anandaprabha\", \"Anantalakshmi\", \"Ananya\", \"Anati\", \"Anavadya\", \"Anavi\", \"Anay\", \"Andala\", \"Andika\", \"Aneesh\", \"Angad\", \"Angada\", \"Angaja\", \"Angana\", \"Angaravati\", \"Angarita\", \"Anguri\", \"Anhati\", \"Anhiti\", \"Anil\", \"Anila\", \"Anima\", \"Aninda\", \"Anindini\", \"Anindita\", \"Anindya\", \"Anisa\", \"Anita\", \"Anjalika\", \"Anjanam\", \"Anjasi\", \"Anji\", \"Anjini\", \"Anjna\", \"Anju\", \"Anjum\", \"Anjuman\", \"Ankan\", \"Ankita\", \"Ankitha\", \"Ankolika\", \"Annamalai\", \"Annanya\", \"Anni\", \"Anokhi\", \"Anoma\", \"Anritam\", \"Ansuiya\", \"Ansumala\", \"Ansumati\", \"Antika\", \"Antini\", \"Antur\", \"Anu\", \"Anubha\", \"Anugita\", \"Anuka\", \"Anukanksa\", \"Anula\", \"Anulekha\", \"Anuli\", \"Anumodita\", \"Anunayika\", \"Anunita\", \"Anuniti\", \"Anupallavi\", \"Anuprahba\", \"Anupriya\", \"Anuradha\", \"Anurakti\", \"Anurati\", \"Anurima\", \"Anusara\", \"Anushree\", \"Anusna\", \"Anusobhini\", \"Anusri\", \"Anutapta\", \"Anvakriti\", \"Anvita\", \"Anviti\", \"Anya\", \"Apaciti\", \"Apaga\", \"Apala\", \"Aparajita\", \"Aparananda\", \"Aparna\", \"Apaya\", \"Apeksita\", \"Apti\", \"Apurani\", \"Apurva\", \"Aqsa\", \"Ara\", \"Aradhana\", \"Aradhita\", \"Araja\", \"Arani\", \"Arasu\", \"Arati\", \"Aravamudan\", \"Aravas\", \"Aravindini\", \"Arcana\", \"Archana\", \"Archna\", \"Arcismati\", \"Ardhaganga\", \"Arhana\", \"Arhantika\", \"Arihan\", \"Arikta\", \"Arindam\", \"Aripra\", \"Arja\", \"Arkasuta\", \"Arnab\", \"Aroga\", \"Arohi\", \"Arpana\", \"Arpita\", \"Arthana\", \"Artika\", \"Aruja\", \"Aruksita\", \"Aruna\", \"Arunabha\", \"Aruni\", \"Arunika\", \"Arunima\", \"Arupa\", \"Arusi\", \"Arvanti\", \"Arya\", \"Aryamani\", \"Asa\", \"Asadhika\", \"Asali\", \"Asanjini\", \"Asanni\", \"Asija\", \"Asika\", \"Asikni\", \"Asira\", \"Asirvatham\", \"Asisa\", \"Askini\", \"Asmaki\", \"Asmati\", \"Asmi\", \"Asna\", \"Asokari\", \"Asta\", \"Astha\", \"Asthula\", \"Asti\", \"Astriti\", \"Asura\", \"Asutosh\", \"Asvattha\", \"Asvika\", \"Atchut\", \"Atchuta\", \"Atharvan\", \"Athavale\", \"Athawale\", \"Athreya\", \"Atibala\", \"Atimoda\", \"Atiriya\", \"Atmadhika\", \"Atmajyoti\", \"Atmodbhava\", \"Atyuha\", \"Aurjitya\", \"Ausinari\", \"Auvvayar\", \"Avabha\", \"Avachat\", \"Avadhanam\", \"Avajiti\", \"Avalur\", \"Avanati\", \"Avani\", \"Avanthika\", \"Avanti\", \"Avantika\", \"Avantivati\", \"Avaraja\", \"Avasarala\", \"Avatansa\", \"Avatika\", \"Aviral\", \"Avisi\", \"Avisya\", \"Ayati\", \"Ayodhika\", \"Ayugu\", \"Babhru\", \"Babita\", \"Bachendri\", \"Badani\", \"Badarayani\", \"Badari\", \"Badithe\", \"Badsah\", \"Bagade\", \"Bagesri\", \"Bagga\", \"Bahughanda\", \"Bahuli\", \"Bahulika\", \"Bahumati\", \"Bahuratna\", \"Bahvisvara\", \"Baiju\", \"Baindur\", \"Bakavati\", \"Bakula\", \"Bakulamala\", \"Bakulika\", \"Bala\", \"Balada\", \"Balaja\", \"Balaji\", \"Balakunda\", \"Balandhara\", \"Balapuspika\", \"Balasandhya\", \"Balavati\", \"Balki\", \"Banaganga\", \"Banasri\", \"Banasuta\", \"Bandaru\", \"Bandhini\", \"Bandhumati\", \"Bandhupriya\", \"Bandhura\", \"Bandlish\", \"Bano\", \"Bansuri\", \"Baratam\", \"Barhayita\", \"Barhina\", \"Barhisa\", \"Basanti\", \"Basha\", \"Baskaran\", \"Basude\", \"Basvangoud\", \"Batakrishna\", \"Bawa\", \"Bawara\", \"Baxi\", \"Bayya\", \"Bbusoowy\", \"Beddhu\", \"Beena\", \"Beerud\", \"Behari\", \"Bekkem\", \"Bela\", \"Beli\", \"Bellamkonda\", \"Bellare\", \"Belur\", \"Bemra\", \"Betanabhatla\", \"Bettadapura\", \"Bettadpur\", \"Bhabani\", \"Bhabra\", \"Bhadrabhusana\", \"Bhadramukhi\", \"Bhadrarupa\", \"Bhadrasvapna\", \"Bhadravalli\", \"Bhadrika\", \"Bhagavanti\", \"Bhagavatula\", \"Bhagra\", \"Bhagya\", \"Bhaina\", \"Bhalli\", \"Bhamidipati\", \"Bhamini\", \"Bhanap\", \"Bhanavi\", \"Bhandana\", \"Bhanot\", \"Bhanuja\", \"Bhanumati\", \"Bhanupriya\", \"Bhanusri\", \"Bharadvaji\", \"Bharadwaj\", \"Bharani\", \"Bharati\", \"Bharava\", \"Bhardwaj\", \"Bhargavi\", \"Bharti\", \"Bharu\", \"Bhasi\", \"Bhati\", \"Bhattini\", \"Bhauma\", \"Bhavaja\", \"Bhavana\", \"Bhavangama\", \"Bhavanika\", \"Bhavanti\", \"Bhavapuspa\", \"Bhaviki\", \"Bhavitra\", \"Bhimavarapu\", \"Bhishma\", \"Bhogya\", \"Bhomira\", \"Bhoopathi\", \"Bhraji\", \"Bhramambika\", \"Bhramarika\", \"Bhrami\", \"Bhrigu\", \"Bhrngari\", \"Bhubaneswar\", \"Bhumralkar\", \"Bhurji\", \"Bhusa\", \"Bhuva\", \"Bhuvanagiri\", \"Bhuvanamati\", \"Bhuvanesani\", \"Bhuvani\", \"Bhuvis\", \"Bidalika\", \"Bijaharini\", \"Bijaksara\", \"Bijal\", \"Bijli\", \"Bijoy\", \"Biju\", \"Bikramjit\", \"Billoo\", \"Bimbi\", \"Bimbini\", \"Bina\", \"Bindiya\", \"Bindu\", \"Bindumati\", \"Bindurekha\", \"Binita\", \"Birewar\", \"Bisala\", \"Bisaria\", \"Bishnu\", \"Bishu\", \"Bisini\", \"Biswanath\", \"Bodhini\", \"Boppana\", \"Boreda\", \"Brahmanjali\", \"Brhadyuti\", \"Brhanmati\", \"Bridgnandan\", \"Brij\", \"Brijesh\", \"Brinda\", \"Buddhidevi\", \"Buddhimatika\", \"Bula\", \"Bulusu\", \"Burjiz\", \"Cahana\", \"Caitali\", \"Caitri\", \"Cakramardika\", \"Caksani\", \"Caksusi\", \"Canaya\", \"Candakirana\", \"Candani\", \"Candrabala\", \"Candragauri\", \"Candragolika\", \"Candrakali\", \"Candramati\", \"Candramukha\", \"Candramukhi\", \"Candrasila\", \"Candrasri\", \"Candrasubha\", \"Candravadana\", \"Candravasa\", \"Candri\", \"Candrima\", \"Candrupa\", \"Carani\", \"Carnapurna\", \"Carubala\", \"Carucitra\", \"Carudarsana\", \"Carulata\", \"Carulocana\", \"Carusila\", \"Carutama\", \"Casukhela\", \"Casula\", \"Caturika\", \"Cauvery\", \"Cchandra\", \"Celana\", \"Cesta\", \"Cetana\", \"Chadaga\", \"Chaitanya\", \"Chaitra\", \"Chakradhar\", \"Chakrapani\", \"Chalamala\", \"Chalana\", \"Chalasani\", \"Challa\", \"Chand\", \"Chanda\", \"Chandra\", \"Chandrakanta\", \"Chandralekha\", \"Chaund\", \"Chava\", \"Chavi\", \"Chhaya\", \"Chinna\", \"Chinta\", \"Chintala\", \"Chintam\", \"Chinya\", \"Chitra\", \"Chitta\", \"Chundra\", \"Cinta\", \"Citrai\", \"Citrajyoti\", \"Citrali\", \"Citramaya\", \"Citramayi\", \"Citrarati\", \"Citrini\", \"Citrita\", \"Citta\", \"Cittii\", \"Cudala\", \"Cumba\", \"Cumban\", \"Cunni\", \"Daga\", \"Dahanolka\", \"Daksayaninya\", \"Dalaja\", \"Damodari\", \"Dandapani\", \"Danti\", \"Darpanika\", \"Darsatasri\", \"Dasamalika\", \"Dattadevi\", \"Datti\", \"Dayadi\", \"Dayanvita\", \"Dayavati\", \"Dayita\", \"Dayumnahuti\", \"Deena\", \"Deepali\", \"Deepika\", \"Desna\", \"Devaki\", \"Devamani\", \"Devamati\", \"Devamayi\", \"Devanganga\", \"Devapratima\", \"Devaradhana\", \"Devarapalli\", \"Devasmita\", \"Devavani\", \"Devavati\", \"Devaviti\", \"Devayosa\", \"Devi\", \"Devika\", \"Deviki\", \"Devina\", \"Dhamani\", \"Dhanavati\", \"Dhanistha\", \"Dhanvanya\", \"Dhanyamala\", \"Dharmini\", \"Dhilati\", \"Dhita\", \"Dhiti\", \"Dhrtavati\", \"Dhulika\", \"Dhulipala\", \"Dhulipalla\", \"Didhi\", \"Dinaprabha\", \"Dipa\", \"Dipakalika\", \"Dipaksi\", \"Dipali\", \"Dipamala\", \"Dipanjali\", \"Dipanwita\", \"Dipavali\", \"Dipmani\", \"Dipra\", \"Dipsikha\", \"Disti\", \"Divija\", \"Divolka\", \"Divyadevi\", \"Divyajyoti\", \"Divyakriti\", \"Drdhamati\", \"Drgbhu\", \"Drsika\", \"Druhi\", \"Druti\", \"Dulari\", \"Durgila\", \"Duvasvati\", \"Dyotana\", \"Dyuksa\", \"Edha\", \"Ekabhakti\", \"Ekacarini\", \"Ekadasi\", \"Ekadhana\", \"Ekaja\", \"Ekakini\", \"Ekamati\", \"Ekangika\", \"Ekanta\", \"Ekisa\", \"Eloksi\", \"Enaksi\", \"Eneela\", \"Eni\", \"Enipada\", \"Esa\", \"Esanika\", \"Eta\", \"Etaha\", \"Eti\", \"Gaganecara\", \"Gajagamani\", \"Gajagati\", \"Gajalakshmi\", \"Gajamukta\", \"Gajapathi\", \"Gajaweera\", \"Gajra\", \"Gamati\", \"Gamin\", \"Ganda\", \"Gandhaja\", \"Gangangini\", \"Ganjan\", \"Ganmanya\", \"Garbhagrha\", \"Gargi\", \"Gathika\", \"Gaurang\", \"Gavah\", \"Gayanti\", \"Gayathri\", \"Gayatri\", \"Gayatrini\", \"Geeta\", \"Geetha\", \"Geethanjali\", \"Gera\", \"Gesna\", \"Ghanivalli\", \"Ghanivallika\", \"Ghosavati\", \"Ghugari\", \"Girisma\", \"Girni\", \"Gita\", \"Gitali\", \"Gitanjali\", \"Giti\", \"Gitika\", \"Gopa\", \"Gopabala\", \"Gopaja\", \"Goparasa\", \"Gorocana\", \"Gouri\", \"Gowri\", \"Gulal\", \"Gulika\", \"Gulmini\", \"Gunamaya\", \"Gunavini\", \"Gunca\", \"Guncaka\", \"Gundu\", \"Guneeta\", \"Gunita\", \"Gunjan\", \"Gunnika\", \"Gunti\", \"Gunvati\", \"Gupti\", \"Gurdiya\", \"Gurnika\", \"Gurti\", \"Gurucarana\", \"Guruda\", \"Gurudeva\", \"Gurudipa\", \"Gurumita\", \"Gurumukha\", \"Gurunama\", \"Guruprasada\", \"Gurusarana\", \"Guruvacana\", \"Guruvira\", \"Gutika\", \"Hala\", \"Halima\", \"Haliman\", \"Hansanadini\", \"Hansanandini\", \"Hararvarupa\", \"Haravali\", \"Haribhadra\", \"Harinaksi\", \"Hariprita\", \"Harisri\", \"Harmya\", \"Harsala\", \"Harsavina\", \"Harsi\", \"Harsita\", \"Harsumati\", \"Hasika\", \"Hasumati\", \"Heena\", \"Hela\", \"Hemaksi\", \"Hemamalini\", \"Hemangini\", \"Hemanti\", \"Hemaprabha\", \"Hemavarna\", \"Himasveta\", \"Hiya\", \"Hrada\", \"Ibha\", \"Ibhi\", \"Iccha\", \"Icchavati\", \"Iditri\", \"Iha\", \"Ihita\", \"Ijya\", \"Iksa\", \"Iksenya\", \"Iksulata\", \"Ilaksi\", \"Ilesa\", \"Ilika\", \"Ilisa\", \"Inaksi\", \"Indali\", \"Inderjit\", \"Indira\", \"Indrabala\", \"Indrabha\", \"Indrabhattarika\", \"Indrahuti\", \"Indranilika\", \"Indu\", \"Induvadana\", \"Inika\", \"Ipsa\", \"Ipsita\", \"Iraja\", \"Iravati\", \"Irijaya\", \"Irika\", \"Isa\", \"Isanika\", \"Isika\", \"Istara\", \"Itkila\", \"Iya\", \"Jabala\", \"Jagatna\", \"Jagavi\", \"Jagrati\", \"Jagrti\", \"Jagruti\", \"Jailekha\", \"Jaimala\", \"Jaiman\", \"Jaiprbha\", \"Jaishree\", \"Jaisila\", \"Jaisudha\", \"Jaivanti\", \"Jaivati\", \"Jalabalika\", \"Jalajaksi\", \"Jalajini\", \"Jalalata\", \"Jalambika\", \"Jalanili\", \"Jalarnava\", \"Jalavalika\", \"Jallata\", \"Jama\", \"Jambhalika\", \"Janabalika\", \"Janaki\", \"Janamohini\", \"Janasruti\", \"Janhita\", \"Janki\", \"Januja\", \"Jasalina\", \"Jasarani\", \"Jaswinder\", \"Jatarupa\", \"Jatila\", \"Jatukarna\", \"Jaya\", \"Jayalaksmi\", \"Jayanti\", \"Jayashree\", \"Jayita\", \"Jayitri\", \"Jeendan\", \"Jhala\", \"Jharna\", \"Jhatalika\", \"Jhillika\", \"Jhilmil\", \"Jigisa\", \"Jindan\", \"Jitya\", \"Jivapuspa\", \"Jivika\", \"Jogu\", \"Josa\", \"Josya\", \"Jurni\", \"Justi\", \"Jutika\", \"Jvalita\", \"Jvalitri\", \"Jyota\", \"Jyoti\", \"Jyotiranika\", \"Jyotsna\", \"Jyotsni\", \"Kadhapriya\", \"Kahini\", \"Kailash\", \"Kajal\", \"Kajri\", \"Kakali\", \"Kaksi\", \"Kalahapriya\", \"Kalakanya\", \"Kalamali\", \"Kalandika\", \"Kalapini\", \"Kale\", \"Kalia\", \"Kaliappa\", \"Kalidindi\", \"Kalipi\", \"Kalli\", \"Kalmesika\", \"Kalpana\", \"Kalpavati\", \"Kalyani\", \"Kama\", \"Kamadyu\", \"Kamala\", \"Kamalah\", \"Kamalalocana\", \"Kamalanayani\", \"Kamalata\", \"Kamaleksana\", \"Kamalika\", \"Kamana\", \"Kamandaki\", \"Kamarekha\", \"Kamayani\", \"Kamini\", \"Kamita\", \"Kamlesh\", \"Kamma\", \"Kamna\", \"Kamni\", \"Kamra\", \"Kamya\", \"Kana\", \"Kanakalata\", \"Kanakamanjari\", \"Kanakamudra\", \"Kanakasundari\", \"Kanakavali\", \"Kanakavalli\", \"Kanakvi\", \"Kanam\", \"Kananabala\", \"Kancanabha\", \"Kanchana\", \"Kandarpabala\", \"Kandhara\", \"Kangana\", \"Kani\", \"Kania\", \"Kanici\", \"Kanika\", \"Kanin\", \"Kanistha\", \"Kanita\", \"Kanjari\", \"Kanjira\", \"Kankan\", \"Kankanika\", \"Kanksa\", \"Kanksini\", \"Kannika\", \"Kanta\", \"Kanti\", \"Kanya\", \"Kanyala\", \"Kanyana\", \"Kanyaratna\", \"Kapadia\", \"Kapardika\", \"Karabhoru\", \"Karia\", \"Karika\", \"Karisma\", \"Karisni\", \"Karkari\", \"Karmistha\", \"Karpani\", \"Karpuri\", \"Karsna\", \"Karttiki\", \"Karuna\", \"Karunya\", \"Kasturba\", \"Kasturi\", \"Kasturika\", \"Kasu\", \"Kausalika\", \"Kausalya\", \"Kavika\", \"Kavita\", \"Keyurin\", \"Khatu\", \"Kheli\", \"Kilasla\", \"Kinjala\", \"Kiranamayi\", \"Kirmi\", \"Kishori\", \"Kisori\", \"Kiya\", \"Kour\", \"Kranti\", \"Krpa\", \"Krsana\", \"Krsi\", \"Krsnan\", \"Krsni\", \"Ksa\", \"Ksamamati\", \"Ksamya\", \"Ksanada\", \"Ksatriyani\", \"Ksirasagara\", \"Ksunu\", \"Kuladevi\", \"Kulanari\", \"Kulangana\", \"Kumari\", \"Kumaria\", \"Kumud\", \"Kumudika\", \"Kumudini\", \"Kundamala\", \"Kundini\", \"Kunja\", \"Kunjalata\", \"Kunsi\", \"Kurangaksi\", \"Kurira\", \"Kusumanjali\", \"Kusumavati\", \"Kusumaya\", \"Kusumita\", \"Kuthodari\", \"Kuvalayadhrs\", \"Kuvalayini\", \"Kuvalayita\", \"Kuvarini\", \"Laboni\", \"Laduri\", \"Lakshmi\", \"Lakshmikantan\", \"Lakshminarashimhan\", \"Lakshminaraya\", \"Lakshminarayanan\", \"Laxmi\", \"Laxmikant\", \"Laxminarasimha\", \"Leela\", \"Leena\", \"Lela\", \"Madhavi\", \"Madhu\", \"Madhucchandra\", \"Madhukar\", \"Madhulika\", \"Madhumati\", \"Madhumita\", \"Madhumitra\", \"Madhur\", \"Madhuri\", \"Madhusree\", \"Madhusudhan\", \"Madhusudhana\", \"Madhusudhanan\", \"Makara\", \"Mala\", \"Malar\", \"Malathi\", \"Malati\", \"Malini\", \"Mandara\", \"Mangla\", \"Manglani\", \"Mani\", \"Manika\", \"Manish\", \"Manisha\", \"Meena\", \"Meera\", \"Mehadi\", \"Mena\", \"Menaka\", \"Mesha\", \"Meshal\", \"Minda\", \"Mira\", \"Mita\", \"Mohana\", \"Mohani\", \"Mohini\", \"Mohit\", \"Munakshi\", \"Mungela\", \"Natesa\", \"Natisa\", \"Nayantara\", \"Nimai\", \"Nimi\", \"Nimmi\", \"Ninderjit\", \"Nisha\", \"Nishchint\", \"Padma\", \"Padmaja\", \"Padmavati\", \"Padmini\", \"Pandita\", \"Pari\", \"Parimal\", \"Parimala\", \"Parmeshwarii\", \"Parminder\", \"Paro\", \"Pinga\", \"Pollyam\", \"Pom\", \"Poonam\", \"Poornima\", \"Pratibha\", \"Preia\", \"Prema\", \"Premila\", \"Premlata\", \"Priya\", \"Promila\", \"Pupul\", \"Purna\", \"Purnima\", \"Pushpa\", \"Puspa\", \"Radhe\", \"Radhika\", \"Rajalakshmi\", \"Raje\", \"Raji\", \"Rajni\", \"Rakesh\", \"Rani\", \"Rati\", \"Reena\", \"Renu\", \"Rita\", \"Ritu\", \"Rochana\", \"Rohana\", \"Rohena\", \"Rupinder\", \"Sahana\", \"Sahera\", \"Sakara\", \"Sakari\", \"Sakyamuni\", \"Sala\", \"Sandhya\", \"Santosh\", \"Sarala\", \"Saroj\", \"Saroja\", \"Sarojini\", \"Sateesh\", \"Satheesh\", \"Sathya\", \"Satish\", \"Satya\", \"Satyam\", \"Saura\", \"Savita\", \"Savitha\", \"Savitri\", \"Seema\", \"Seeta\", \"Seetha\", \"Sepatha\", \"Shabana\", \"Shaila\", \"Shakti\", \"Shakuntala\", \"Shalini\", \"Shanta\", \"Shantanu\", \"Shanthi\", \"Shanti\", \"Sharad\", \"Sharada\", \"Sharath\", \"Sharmila\", \"Shashi\", \"Sheela\", \"Sheila\", \"Shoba\", \"Shobha\", \"Shobhana\", \"Shobhna\", \"Shobu\", \"Shreya\", \"Shri\", \"Shyama\", \"Shyamala\", \"Shyamani\", \"Siddartha\", \"Sidharth\", \"Smriti\", \"Sneh\", \"Soochet\", \"Sri\", \"Suja\", \"Sujata\", \"Sujatha\", \"Sumant\", \"Sumanth\", \"Sumantra\", \"Sumantu\", \"Sumathi\", \"Sumati\", \"Sumit\", \"Sumita\", \"Sumitra\", \"Sumitro\", \"Suneet\", \"Suneetha\", \"Sunit\", \"Sunita\", \"Sunitha\", \"Suniti\", \"Surajit\", \"Sureshta\", \"Surjit\", \"Sushila\", \"Sushma\", \"Swaran\", \"Tara\", \"Uma\", \"Umi\", \"Urmila\", \"Urmilla\", \"Urvashi\", \"Urvasi\", \"Usha\", \"Vanmala\", \"Vasanta\", \"Vasundara\", \"Vasundhara\", \"Vimala\", \"Vimi\", \"Vimla\", \"Zubeida\"]], [[\"Kailasa\", \"Last\"], [\"Adani\", \"Advani\", \"Agarkar\", \"Agarwal\", \"Agrawal\", \"Ahsen\", \"Amarnath\", \"Amra\", \"Amroliwallah\", \"Anand\", \"Ankola\", \"Apte\", \"Arasaratnam\", \"Aron\", \"Baboor\", \"Badesha\", \"Bahl\", \"Bai\", \"Balakrishnan\", \"Banerjee\", \"Banker\", \"Barendran\", \"Barot\", \"Battacharjee\", \"Bedi\", \"Behari\", \"Bhagwat\", \"Bhagyamma\", \"Bhanghoo\", \"Bhanjee\", \"Bhaskar\", \"Bhatt\", \"Bhattacharya\", \"Bhatti\", \"Bhoola\", \"Bipen\", \"Bisht\", \"Biswas\", \"Bonjani\", \"Boparai\", \"Buchar\", \"Buhpathi\", \"Bux\", \"Cansai\", \"Chakrabarti\", \"Chandak\", \"Chandan\", \"Chandar\", \"Chande\", \"Chander\", \"Chandiramani\", \"Chandna\", \"Chandra\", \"Chandrakala\", \"Chandramouleeswaran\", \"Chandramouli\", \"Chandran\", \"Chandrark\", \"Chandrasekar\", \"Chandrasekaran\", \"Chandrasekhar\", \"Chandrasekharan\", \"Chandrashaker\", \"Chandrashekar\", \"Channarayapatra\", \"Chapal\", \"Charan\", \"Charu\", \"Chaterju\", \"Chatterjee\", \"Chatterji\", \"Chaudhari\", \"Chaudhry\", \"Chaudhury\", \"Chauhan\", \"Chawd\", \"Cheenu\", \"Chella\", \"Chellaiah\", \"Chellappa\", \"Chellappan\", \"Chengelpet\", \"Chennapragada\", \"Cheran\", \"Cherukuri\", \"Cherupara\", \"Chet\", \"Chetan\", \"Chetana\", \"Chethan\", \"Chetlapalli\", \"Chhachhi\", \"Chhavvi\", \"Chheda\", \"Chiba\", \"Chidambaram\", \"Chidamber\", \"Chikodi\", \"Chinmay\", \"Chinnakannan\", \"Chinnappan\", \"Chippada\", \"Chirag\", \"Chirimar\", \"Chitnis\", \"Chitrangda\", \"Chittibabu\", \"Chittoor\", \"Chittor\", \"Chitturu\", \"Chivukula\", \"Chohan\", \"Choudhari\", \"Choudhary\", \"Choudhury\", \"Choughoy\", \"Chowdhury\", \"Chowdry\", \"Chudasama\", \"Contractor\", \"Dalmiya\", \"Dama\", \"Darisipudi\", \"Darsha\", \"Daruka\", \"Daryapurkar\", \"Dasari\", \"Dasgupta\", \"Datar\", \"Datla\", \"Datta\", \"Davuluri\", \"Dawar\", \"Dehiya\", \"Deivan\", \"Deol\", \"Desai\", \"Dhadda\", \"Dhaliwal\", \"Dharuna\", \"Dhatri\", \"Dhawan\", \"Dhiri\", \"Dhrtiman\", \"Dhruba\", \"Dhupam\", \"Dhurvasula\", \"Dibyendu\", \"Diggavi\", \"Dinath\", \"Dinkar\", \"Dinkerrai\", \"Divecha\", \"Diwan\", \"Dosanjh\", \"Dravid\", \"Dristi\", \"Dua\", \"Duleepsinhji\", \"Durai\", \"Duranjaya\", \"Durjaya\", \"Durmada\", \"Duvvoori\", \"Dwijen\", \"Edulbehram\", \"Ekachakra\", \"Eknath\", \"Elango\", \"Elayavalli\", \"Emankum\", \"Emankumar\", \"Engineer\", \"Eswara\", \"Eswarapu\", \"Gadde\", \"Gade\", \"Gadepalli\", \"Gaekwad\", \"Gahlot\", \"Gajaren\", \"Gajendra\", \"Gajraj\", \"Gala\", \"Gambhir\", \"Ganapathiraman\", \"Ganapathy\", \"Ganesh\", \"Ganeshwaran\", \"Gangadharan\", \"Gangulee\", \"Ganguly\", \"Gargeya\", \"Garikapaty\", \"Garlanka\", \"Gavarasana\", \"Gavaskar\", \"Ghandi\", \"Ghani\", \"Ghazali\", \"Ghei\", \"Ghemawat\", \"Ghorpade\", \"Ghosal\", \"Ghosh\", \"Ghoshal\", \"Ghoshdashtidar\", \"Ghouse\", \"Gidh\", \"Gilab\", \"Giridhar\", \"Giridhara\", \"Giridharan\", \"Girish\", \"Girsh\", \"Godambe\", \"Goel\", \"Goenka\", \"Gokaraju\", \"Goli\", \"Gopalakrishnan\", \"Gopalan\", \"Gopinath\", \"Gopivallabha\", \"Gorantla\", \"Gorawala\", \"Gordha\", \"Gorti\", \"Govindasvamy\", \"Govindraj\", \"Gowd\", \"Gowda\", \"Gowravaram\", \"Gridharan\", \"Guha\", \"Gujral\", \"Gundamaraju\", \"Gundlapalli\", \"Gundugollu\", \"Gunendran\", \"Guneratne\", \"Gungabissoon\", \"Guntupalli\", \"Guntur\", \"Gunturu\", \"Gupte\", \"Guramurthy\", \"Gurbux\", \"Gurijala\", \"Gurinder\", \"Gurudutt\", \"Gutala\", \"Gutta\", \"Halder\", \"Hamada\", \"Hament\", \"Harbir\", \"Harishandra\", \"Harku\", \"Haryadi\", \"Hattangady\", \"Hazare\", \"Hemalatha\", \"Himani\", \"Himanshu\", \"Hindocha\", \"Hinduja\", \"Hiranandani\", \"Hiten\", \"Hitendra\", \"Honnenahalli\", \"Huggahalli\", \"Huggahilli\", \"Hynala\", \"Ilango\", \"Ilyas\", \"Imani\", \"Indrani\", \"Innuganti\", \"Irani\", \"Iyer\", \"Jadeja\", \"Jafferbhoy\", \"Jaffrey\", \"Jagarlamudi\", \"Jagder\", \"Jahnavi\", \"Jai\", \"Jaishree\", \"Jaisimha\", \"Jana\", \"Jandhyala\", \"Janjua\", \"Jannavi\", \"Jasmit\", \"Jaspal\", \"Jaspreet\", \"Jasthi\", \"Jayakar\", \"Jayantilal\", \"Jayaram\", \"Jayasinghe\", \"Jayasurya\", \"Jeeri\", \"Jeevan\", \"Jeoomal\", \"Jeyaseelan\", \"Jignesh\", \"Jimuta\", \"Jindal\", \"Jinen\", \"Jinturkar\", \"Jitesh\", \"Joardar\", \"Jobanputra\", \"Jonnalagadda\", \"Joshi\", \"Joshipura\", \"Junanker\", \"Jyothsna\", \"Jyotiradha\", \"Kaalki\", \"Kabir\", \"Kabra\", \"Kachwaha\", \"Kadak\", \"Kadamuddi\", \"Kadowala\", \"Kaikini\", \"Kaisth\", \"Kaith\", \"Kakde\", \"Kalanadhabhatla\", \"Kalirai\", \"Kallakuri\", \"Kallianpur\", \"Kallichuran\", \"Kalluri\", \"Kalpak\", \"Kalpna\", \"Kambhampat\", \"Kambhampati\", \"Kambhatla\", \"Kambli\", \"Kampan\", \"Kandadai\", \"Kandathil\", \"Kandula\", \"Kanetkar\", \"Kanitkar\", \"Kanive\", \"Kankipati\", \"Kanmani\", \"Kansal\", \"Kanwar\", \"Kapadia\", \"Kapoor\", \"Karapiet\", \"Karim\", \"Karkada\", \"Karumuri\", \"Karuppia\", \"Kasavaraju\", \"Kasthurirangan\", \"Kasturirangan\", \"Kateel\", \"Kathiravan\", \"Kathrada\", \"Katka\", \"Katragadda\", \"Kaul\", \"Kaushal\", \"Kaushik\", \"Kawediya\", \"Kayeeda\", \"Kedar\", \"Kedarnath\", \"Kedia\", \"Keerthana\", \"Keerthi\", \"Kelaka\", \"Kenchammana\", \"Keshab\", \"Keshav\", \"Keshava\", \"Keshavan\", \"Keshaw\", \"Kesiraju\", \"Keskar\", \"Ketaki\", \"Keyush\", \"Khadri\", \"Khanderia\", \"Kharbanda\", \"Khilnani\", \"Khodabhai\", \"Khodaiji\", \"Khot\", \"Khursh\", \"Kirmani\", \"Kishen\", \"Kishore\", \"Kittur\", \"Kitu\", \"Kity\", \"Kodali\", \"Kodanda\", \"Kodandarami\", \"Kodi\", \"Kodumudi\", \"Koduri\", \"Koganti\", \"Kola\", \"Kolagunta\", \"Kolala\", \"Kolar\", \"Kommana\", \"Konchady\", \"Konda\", \"Kondapalli\", \"Kondapaneni\", \"Konduru\", \"Koneru\", \"Konkar\", \"Konkipudi\", \"Koothrappally\", \"Koppala\", \"Koppale\", \"Koppolu\", \"Koppula\", \"Koritala\", \"Kosanam\", \"Kosuri\", \"Kota\", \"Kothandaraman\", \"Kothari\", \"Kotla\", \"Koushika\", \"Kripa\", \"Krishnamma\", \"Krishnamurthy\", \"Krithivas\", \"Kriti\", \"Kudesia\", \"Kulasekaran\", \"Kulkarni\", \"Kumar\", \"Kumawagra\", \"Kumbla\", \"Kumble\", \"Kumur\", \"Kunal\", \"Kunderan\", \"Kuntal\", \"Kunwarjit\", \"Kuram\", \"Kurapati\", \"Kurian\", \"Kurinji\", \"Kurtha\", \"Kurupath\", \"Kuruvilla\", \"Kusagra\", \"Kuttikkad\", \"Kutty\", \"Kutumbaka\", \"Labhsha\", \"Laddha\", \"Lahan\", \"Lahiri\", \"Lakhani\", \"Lalima\", \"Lalit\", \"Lalita\", \"Lalitesh\", \"Lalith\", \"Lalitha\", \"Lalji\", \"Lanka\", \"Lata\", \"Latesh\", \"Lath\", \"Latha\", \"Laul\", \"Lavanis\", \"Lavanya\", \"Laxmanan\", \"Lecamwasam\", \"Lokesh\", \"Lokhande\", \"Lolaksi\", \"Lolla\", \"Loy\", \"Luthra\", \"Luthria\", \"Macharla\", \"Mackherdhuj\", \"Macwan\", \"Madan\", \"Maddukuri\", \"Madduri\", \"Madhabi\", \"Madhana\", \"Madhani\", \"Madugula\", \"Magesh\", \"Mageshkumar\", \"Mahabala\", \"Mahadeo\", \"Mahadevan\", \"Mahajan\", \"Mahale\", \"Mahalingam\", \"Mahankali\", \"Mahanthapa\", \"Mahapatra\", \"Mahatapa\", \"Mahatma\", \"Mahavira\", \"Mainak\", \"Maiti\", \"Maitreya\", \"Maitryi\", \"Majety\", \"Majhi\", \"Maji\", \"Majoo\", \"Makam\", \"Makarand\", \"Makhija\", \"Malavika\", \"Malhotra\", \"Malik\", \"Malini\", \"Malipatlolla\", \"Malipeddi\", \"Malleshi\", \"Mallick\", \"Mallika\", \"Mallikarjun\", \"Mallya\", \"Malti\", \"Mamgain\", \"Mamta\", \"Manandhar\", \"Manas\", \"Manasa\", \"Manasi\", \"Manavendra\", \"Manavi\", \"Manchanda\", \"Manchapora\", \"Mandar\", \"Mandava\", \"Mandayam\", \"Mandhatri\", \"Mandyam\", \"Maneesh\", \"Manekshaw\", \"Manesh\", \"Mangalampally\", \"Mangalvedhe\", \"Mangalwadi\", \"Mangesh\", \"Mangeshkar\", \"Mangina\", \"Manglorkar\", \"Manikkalingam\", \"Maninder\", \"Manivanan\", \"Manjanatha\", \"Manjari\", \"Manjrekar\", \"Manju\", \"Manjunath\", \"Manjusha\", \"Mankad\", \"Manmeet\", \"Mannem\", \"Manohar\", \"Manohari\", \"Mansey\", \"Mantri\", \"Manushi\", \"Manyam\", \"Maqbool\", \"Maran\", \"Margasahayam\", \"Marisa\", \"Marita\", \"Markandeya\", \"Markendaya\", \"Maruthi\", \"Maruti\", \"Masrani\", \"Matanga\", \"Matangi\", \"Mathrubootham\", \"Mati\", \"Matta\", \"Matu\", \"Maudgalya\", \"Mavalvala\", \"Maya\", \"Mayappan\", \"Mayekar\", \"Mayur\", \"Mayuri\", \"Mecca\", \"Medapati\", \"Medha\", \"Medikonda\", \"Meenakshi\", \"Meenakshisundaram\", \"Meenan\", \"Megana\", \"Meghana\", \"Mehendale\", \"Meher\", \"Meherhomji\", \"Mehra\", \"Mehta\", \"Mehul\", \"Meka\", \"Melliyal\", \"Merchant\", \"Merchia\", \"Meyappan\", \"Mhambrey\", \"Mhari\", \"Michandani\", \"Mihir\", \"Milan\", \"Milind\", \"Minakshi\", \"Mirajkar\", \"Mirchandani\", \"Mista\", \"Mitali\", \"Mitanu\", \"Mitra\", \"Mittal\", \"Mittur\", \"Mitul\", \"Mitun\", \"Modi\", \"Mohaiemen\", \"Mohanty\", \"Moidu\", \"Mokate\", \"Mona\", \"Mondem\", \"Mongia\", \"Moni\", \"Monica\", \"Mooljee\", \"Moorthy\", \"More\", \"Motala\", \"Motiwala\", \"Mounil\", \"Mousumi\", \"Mrudaya\", \"Muddiah\", \"Mudhol\", \"Mudigonda\", \"Mukherjee\", \"Mukhi\", \"Mukku\", \"Muktheswara\", \"Mukti\", \"Mukul\", \"Mukund\", \"Mukunda\", \"Mukundagiri\", \"Mukundan\", \"Mulla\", \"Multani\", \"Munish\", \"Muniyappa\", \"Munusamy\", \"Muppala\", \"Muqtedar\", \"Murli\", \"Murthy\", \"Murti\", \"Murtugudde\", \"Murty\", \"Murugan\", \"Murugappa\", \"Murugesan\", \"Musunur\", \"Muthanna\", \"Muthiah\", \"Muthu\", \"Muthukaruppan\", \"Muthukrishn\", \"Muthukrishnan\", \"Muthukumar\", \"Muthukumarasamy\", \"Muthupalaniappan\", \"Muthuswami\", \"Naagesh\", \"Nabendu\", \"Nachik\", \"Nachiketa\", \"Nadhamuni\", \"Nadkarni\", \"Naeem\", \"Nagabhushana\", \"Nagalingam\", \"Naganathan\", \"Nagappa\", \"Nagaraj\", \"Nagaraja\", \"Nagarajan\", \"Nagarjuna\", \"Nagaswamy\", \"Nagedwaran\", \"Nagesh\", \"Nageshwar\", \"Nageshwara\", \"Nageswar\", \"Nagi\", \"Nagin\", \"Nagpal\", \"Nahid\", \"Naidoo\", \"Naik\", \"Nailadi\", \"Naimesh\", \"Naimish\", \"Naini\", \"Nakul\", \"Nalini\", \"Nallamothu\", \"Namasri\", \"Namdev\", \"Namrata\", \"Nandakishore\", \"Nandakumar\", \"Nandedkar\", \"Nandin\", \"Nandini\", \"Nandita\", \"Nandkeolyar\", \"Nandy\", \"Nanga\", \"Naoomal\", \"Nara\", \"Naran\", \"Narang\", \"Narasimban\", \"Narasimha\", \"Narasimhan\", \"Narasinha\", \"Narayan\", \"Narayanaswamy\", \"Narayanswami\", \"Narmada\", \"Narsi\", \"Nartana\", \"Naseer\", \"Nashier\", \"Nasir\", \"Natasha\", \"Nath\", \"Nathan\", \"Natterraja\", \"Naueshwara\", \"Navarathna\", \"Navya\", \"Nayak\", \"Nayar\", \"Nayna\", \"Nayudu\", \"Nayyar\", \"Neeharika\", \"Neel\", \"Neela\", \"Neelakantachar\", \"Neelam\", \"Neelesh\", \"Neena\", \"Neeraj\", \"Neerja\", \"Neeru\", \"Neha\", \"Nehru\", \"Neil\", \"Nelagadde\", \"Nema\", \"Nergis\", \"Nerurkar\", \"Nidheesh\", \"Nidhi\", \"Nidra\", \"Nigam\", \"Nihar\", \"Niharika\", \"Nikesh\", \"Nikhil\", \"Niki\", \"Nikitha\", \"Nikunj\", \"Nilani\", \"Nilesh\", \"Nilima\", \"Nilini\", \"Nilofer\", \"Nilu\", \"Nilufar\", \"Nimbalkar\", \"Nimesh\", \"Nira\", \"Niradhara\", \"Niraj\", \"Niral\", \"Niramitra\", \"Nirav\", \"Nirguna\", \"Nirmal\", \"Nirmala\", \"Nirupa\", \"Nirupama\", \"Nisha\", \"Nishar\", \"Nisheeth\", \"Nishit\", \"Nishita\", \"Nishtha\", \"Nita\", \"Niten\", \"Nitesh\", \"Nitesha\", \"Nithin\", \"Niti\", \"Nitin\", \"Nitu\", \"Niveda\", \"Nivedita\", \"Nizami\", \"Nuguru\", \"Nukala\", \"Nuregesan\", \"Ogale\", \"Omarjeet\", \"Omesh\", \"Omkar\", \"Oruganti\", \"Padmakant\", \"Padmanabh\", \"Padmanabhan\", \"Padmasola\", \"Padmesh\", \"Pahad\", \"Pahwa\", \"Pai\", \"Pal\", \"Palam\", \"Palanirajan\", \"Palanisamy\", \"Palathingal\", \"Palia\", \"Pallavan\", \"Pallavi\", \"Paloma\", \"Palomi\", \"Pals\", \"Palshikar\", \"Pamela\", \"Pancholi\", \"Pandian\", \"Pandit\", \"Pandya\", \"Panick\", \"Panjwani\", \"Pankaj\", \"Pankajakshan\", \"Pankharia\", \"Pant\", \"Panth\", \"Panyala\", \"Paola\", \"Papa\", \"Papatranal\", \"Parag\", \"Paramartha\", \"Parameswaran\", \"Parantap\", \"Paritosh\", \"Parmar\", \"Parnika\", \"Parnita\", \"Partha\", \"Parthak\", \"Parthasarathi\", \"Parthasarathy\", \"Parthathy\", \"Parthiban\", \"Parul\", \"Parvin\", \"Pasapuleti\", \"Pashupathy\", \"Pasram\", \"Pasuma\", \"Patachli\", \"Patanjali\", \"Patankar\", \"Patel\", \"Pattabhiraman\", \"Patterjee\", \"Pauravi\", \"Pavan\", \"Pavanaja\", \"Pavani\", \"Paveljit\", \"Pavi\", \"Pavithran\", \"Pawan\", \"Payal\", \"Pedapudi\", \"Pendharkar\", \"Pendyala\", \"Pennathur\", \"Persaud\", \"Perumal\", \"Perumbeti\", \"Pewar\", \"Phadkar\", \"Phadnis\", \"Phalgun\", \"Phani\", \"Phutika\", \"Pichai\", \"Pillalamarri\", \"Pillay\", \"Pivari\", \"Piyush\", \"Poduri\", \"Podury\", \"Polamreddy\", \"Polavarapu\", \"Ponamgi\", \"Ponnada\", \"Ponnekanti\", \"Ponte\", \"Pooja\", \"Poola\", \"Pothireddy\", \"Potla\", \"Potluri\", \"Prabhat\", \"Prabhath\", \"Prachi\", \"Pradhan\", \"Pradip\", \"Prafull\", \"Pragalsingh\", \"Praharaj\", \"Prajapati\", \"Prajna\", \"Pramath\", \"Pramila\", \"Pramsu\", \"Prasad\", \"Prasai\", \"Prasana\", \"Prasanna\", \"Prasannakumar\", \"Prasanta\", \"Prasanth\", \"Prasata\", \"Prasenjit\", \"Prashant\", \"Prashanth\", \"Prashun\", \"Prasoon\", \"Prassana\", \"Prateek\", \"Pratima\", \"Pratyush\", \"Praveen\", \"Praveenkumar\", \"Pravil\", \"Prayag\", \"Preeti\", \"Preetinder\", \"Preetish\", \"Premkumar\", \"Prerana\", \"Primal\", \"Prisha\", \"Pritha\", \"Prithu\", \"Prithvi\", \"Prithviraj\", \"Priti\", \"Pritish\", \"Privrata\", \"Priyabroto\", \"Priyadarshi\", \"Priyadarshini\", \"Priyanka\", \"Priyavardhan\", \"Priyodarshi\", \"Probal\", \"Profulla\", \"Progyan\", \"Promod\", \"Prudvi\", \"Puja\", \"Pujar\", \"Pulavarti\", \"Puli\", \"Puliyur\", \"Pulkit\", \"Pullela\", \"Pummy\", \"Punati\", \"Pundari\", \"Pundarik\", \"Punita\", \"Punith\", \"Punitha\", \"Punj\", \"Punnoose\", \"Purandhri\", \"Puranjay\", \"Puri\", \"Purujit\", \"Purva\", \"Pusan\", \"Pushkala\", \"Pushkar\", \"Pushkarini\", \"Puskara\", \"Pusti\", \"Pyara\", \"Qamar\", \"Rabinder\", \"Rabindra\", \"Rabindran\", \"Rachna\", \"Rachoor\", \"Radhabinod\", \"Radheshyam\", \"Radhey\", \"Radia\", \"Ragha\", \"Raghavanpillai\", \"Raghavendra\", \"Raghavendran\", \"Raghunandan\", \"Raghunathan\", \"Raghuram\", \"Raghuvir\", \"Raghvendra\", \"Ragunathan\", \"Raguraman\", \"Rai\", \"Rajabhushan\", \"Rajagopal\", \"Rajagopalan\", \"Rajah\", \"Rajal\", \"Rajamani\", \"Rajan\", \"Rajani\", \"Rajaram\", \"Rajarama\", \"Rajaraman\", \"Rajarshi\", \"Rajashi\", \"Rajasimha\", \"Rajat\", \"Raje\", \"Raji\", \"Raju\", \"Rakala\", \"Rakhi\", \"Ramadhin\", \"Ramadin\", \"Ramakan\", \"Ramalingam\", \"Ramamani\", \"Ramamohan\", \"Ramamoorthy\", \"Ramamurthy\", \"Ramamurti\", \"Ramamuthe\", \"Raman\", \"Ramana\", \"Ramanakoppa\", \"Ramanand\", \"Ramanathan\", \"Ramanuja\", \"Ramanujam\", \"Ramaprasad\", \"Ramasamy\", \"Ramasubraman\", \"Ramasubramanian\", \"Ramaswami\", \"Ramaswamy\", \"Ramchand\", \"Ramchander\", \"Ramchandra\", \"Ramdas\", \"Ramiah\", \"Ramila\", \"Ramjee\", \"Ramji\", \"Ramkumar\", \"Rammohan\", \"Ramnarine\", \"Ramprakash\", \"Ramprakesh\", \"Ramprasad\", \"Ramsamooj\", \"Ramsundar\", \"Rana\", \"Ranadhir\", \"Ranadive\", \"Randeep\", \"Ranga\", \"Ranganathan\", \"Rangaraj\", \"Rangarajan\", \"Rangarathnam\", \"Rangaswamy\", \"Rangnekar\", \"Rangwala\", \"Ranhotra\", \"Ranjan\", \"Ranjana\", \"Ranjani\", \"Ranjini\", \"Ranjitsinhji\", \"Rantidev\", \"Rasiah\", \"Rathiea\", \"Rathin\", \"Rathore\", \"Ratnasabapathi\", \"Ravandur\", \"Raven\", \"Ravikanth\", \"Ravikumar\", \"Ravipati\", \"Raviprakash\", \"Raviraj\", \"Raviram\", \"Ravuri\", \"Raychaudhari\", \"Raza\", \"Reba\", \"Rebani\", \"Reema\", \"Rege\", \"Rekha\", \"Rema\", \"Rengarajan\", \"Renuka\", \"Renukunta\", \"Resham\", \"Reshma\", \"Revathi\", \"Revati\", \"Rewari\", \"Richa\", \"Riddhi\", \"Riju\", \"Rima\", \"Rishi\", \"Rishiyur\", \"Rishmal\", \"Ritula\", \"Rob\", \"Robi\", \"Roopak\", \"Roshni\", \"Roy\", \"Ruchi\", \"Ruchika\", \"Ruchir\", \"Ruchira\", \"Rudrani\", \"Rudraraju\", \"Rukmini\", \"Ruma\", \"Rupa\", \"Rupali\", \"Rupesh\", \"Rustagi\", \"Saandeep\", \"Sabeena\", \"Sabeer\", \"Sachi\", \"Sachin\", \"Sadalge\", \"Sadaram\", \"Sadashiv\", \"Sadasivam\", \"Sadayappan\", \"Sadhwani\", \"Saeed\", \"Sagar\", \"Sagdo\", \"Saginala\", \"Sagoo\", \"Sahadev\", \"Sahar\", \"Sahgal\", \"Sahil\", \"Sahni\", \"Sai\", \"Saibal\", \"Saidullah\", \"Saighiridhar\", \"Saikumar\", \"Sailendra\", \"Sailesh\", \"Saini\", \"Sajal\", \"Sajan\", \"Sajeev\", \"Saji\", \"Sajid\", \"Sajja\", \"Sakib\", \"Saklani\", \"Salagame\", \"Saldanha\", \"Saligrama\", \"Salil\", \"Salim\", \"Saloni\", \"Saluja\", \"Sambandam\", \"Sambandan\", \"Samderiya\", \"Sameer\", \"Samiksha\", \"Samir\", \"Samit\", \"Sammeta\", \"Sampath\", \"Samrat\", \"Samudra\", \"Samuel\", \"Sanaka\", \"Sanat\", \"Sandeep\", \"Sandip\", \"Sandipa\", \"Sandipan\", \"Sandy\", \"Sangal\", \"Sangam\", \"Sangameswar\", \"Sangappa\", \"Sangawar\", \"Sangeeta\", \"Sangem\", \"Sangha\", \"Sanghi\", \"Sangita\", \"Sangodkar\", \"Sanigepalli\", \"Sanjna\", \"Sanjukta\", \"Sankait\", \"Sankaran\", \"Sankaranarayanan\", \"Sankrant\", \"Sankuratri\", \"Sanmugasunderam\", \"Santanu\", \"Santhanakrishnan\", \"Santhanam\", \"Santharam\", \"Sanu\", \"Sanyogita\", \"Sanyukta\", \"Sanzgiri\", \"Sapan\", \"Sapna\", \"Sapra\", \"Sapthotharan\", \"Sara\", \"Saraf\", \"Sarangapani\", \"Sarangarajan\", \"Sarasvan\", \"Sarasvati\", \"Saraswathi\", \"Sarat\", \"Sarath\", \"Saravati\", \"Sardesai\", \"Sarika\", \"Sarin\", \"Saripella\", \"Sarita\", \"Sarmad\", \"Sarmistha\", \"Saru\", \"Sarup\", \"Sarwate\", \"Saryu\", \"Sashekala\", \"Sashi\", \"Sashti\", \"Sasthi\", \"Saswata\", \"Satayu\", \"Sathasivam\", \"Sathaye\", \"Sathiamoorthy\", \"Sathianarayan\", \"Sathyanarayana\", \"Sathyanna\", \"Satin\", \"Satinder\", \"Satrujit\", \"Satsangi\", \"Sattar\", \"Satwant\", \"Satyanarayana\", \"Satyavati\", \"Satyavolu\", \"Satyavrat\", \"Satyen\", \"Saumya\", \"Saunak\", \"Saurin\", \"Savarna\", \"Savdeep\", \"Sawalha\", \"Sawant\", \"Sawardekar\", \"Saxena\", \"Scindia\", \"Seetamraju\", \"Seetharaman\", \"Sehgal\", \"Sekar\", \"Sekariapuram\", \"Sekhar\", \"Selvam\", \"Selvi\", \"Semerkant\", \"Sen\", \"Senagala\", \"Senajit\", \"Senapathy\", \"Senapati\", \"Sengupta\", \"Seri\", \"Seshaanath\", \"Seshadri\", \"Seshadrinathan\", \"Seshan\", \"Seshu\", \"Sethi\", \"Sethuraman\", \"Setna\", \"Setra\", \"Shaban\", \"Shabi\", \"Shachi\", \"Shadilya\", \"Shafiqul\", \"Shahbaz\", \"Shahid\", \"Shaik\", \"Shail\", \"Shaila\", \"Shailaja\", \"Shailendra\", \"Shailesh\", \"Shaina\", \"Shaje\", \"Shalabh\", \"Shalaby\", \"Shally\", \"Shameem\", \"Shamir\", \"Shamshaard\", \"Shamsher\", \"Shan\", \"Shanbhag\", \"Shantinath\", \"Sharda\", \"Shareeka\", \"Sharma\", \"Sharmistha\", \"Shashank\", \"Shashidhar\", \"Shashikanth\", \"Shashwat\", \"Shastri\", \"Shaukat\", \"Sheba\", \"Shefali\", \"Shetty\", \"Shibu\", \"Shikha\", \"Shiladitya\", \"Shilpa\", \"Shindi\", \"Shingane\", \"Shinjinee\", \"Shinu\", \"Shirish\", \"Shirishkumar\", \"Shirvaikar\", \"Shishir\", \"Shivaiah\", \"Shivakumar\", \"Shivani\", \"Shivaprakash\", \"Shokrollahi\", \"Shomik\", \"Shorey\", \"Shourov\", \"Shraddha\", \"Shradhdha\", \"Shreekant\", \"Shreenath\", \"Shreerang\", \"Shreeyash\", \"Shrestha\", \"Shridhar\", \"Shriharsha\", \"Shrikant\", \"Shrinivas\", \"Shripati\", \"Shrirang\", \"Shrisha\", \"Shrivastava\", \"Shroff\", \"Shruti\", \"Shubha\", \"Shubhabrata\", \"Shubhashish\", \"Shubhendu\", \"Shujauddin\", \"Shukla\", \"Shukta\", \"Shurpali\", \"Shvetank\", \"Shyamsundar\", \"Sibabrata\", \"Sidda\", \"Siddhi\", \"Sidhu\", \"Simha\", \"Sinduvalli\", \"Singri\", \"Sira\", \"Sita\", \"Sitha\", \"Sitipala\", \"Sivakumar\", \"Sivakumaran\", \"Sivaram\", \"Sivaramakrishnan\", \"Sivaraman\", \"Sivasubramaniam\", \"Sivasubramanian\", \"Smirti\", \"Smita\", \"Smitha\", \"Snehasis\", \"Snigdha\", \"Sobha\", \"Sodhani\", \"Sohal\", \"Sohoni\", \"Solaimathi\", \"Solanki\", \"Solkar\", \"Soma\", \"Somasundara\", \"Somasundaram\", \"Somatra\", \"Somayaji\", \"Somendra\", \"Somnath\", \"Sompalli\", \"Somu\", \"Soni\", \"Sonia\", \"Sony\", \"Soogoor\", \"Sophia\", \"Sorabhjee\", \"Sornam\", \"Soumen\", \"Soumitra\", \"Soumodip\", \"Soumyabrata\", \"Soundar\", \"Soundrapandian\", \"Sourabh\", \"Sourajyoti\", \"Sourav\", \"Sowrirajan\", \"Sraddha\", \"Sravan\", \"Sree\", \"Sreedevan\", \"Sreedhar\", \"Sreedharan\", \"Sreehari\", \"Sreekanth\", \"Sreekanthan\", \"Sreenivas\", \"Sreenivasa\", \"Sreenivasan\", \"Sreeram\", \"Sreerupa\", \"Sreevijayan\", \"Sridevan\", \"Srihari\", \"Srijata\", \"Srijoy\", \"Srikaran\", \"Srikrishna\", \"Srikrisna\", \"Srikumar\", \"Srila\", \"Srimal\", \"Srinath\", \"Srini\", \"Sripadam\", \"Sriramesh\", \"Sritharan\", \"Srivas\", \"Srivastav\", \"Srivastava\", \"Srivaths\", \"Srivathsan\", \"Srivatsan\", \"Sruthi\", \"Sruti\", \"Sthanumurthy\", \"Subas\", \"Subba\", \"Subbanna\", \"Subbarao\", \"Subbarat\", \"Subbaratnam\", \"Subbarayan\", \"Subbarayudu\", \"Subhaga\", \"Subhangi\", \"Subhendu\", \"Subhuja\", \"Subodh\", \"Subrahmanyam\", \"Subram\", \"Subramani\", \"Subramaniam\", \"Subramanian\", \"Subramanien\", \"Subramanium\", \"Subramanya\", \"Subramanyan\", \"Subrata\", \"Subudhi\", \"Sucharita\", \"Suchi\", \"Suchin\", \"Suchitra\", \"Sudarsan\", \"Sudarshan\", \"Sudarshana\", \"Sudershan\", \"Sudesh\", \"Sudesha\", \"Sudeshna\", \"Sudeva\", \"Sudevi\", \"Sudha\", \"Sudhakar\", \"Sudhanshu\", \"Sudhansu\", \"Sudheer\", \"Sudhindranath\", \"Sughavanam\", \"Sugriva\", \"Suhas\", \"Sujan\", \"Sujeet\", \"Sujeev\", \"Suji\", \"Sukanya\", \"Sukarman\", \"Suketu\", \"Sukhjinder\", \"Suksma\", \"Sukumar\", \"Sulagna\", \"Sultana\", \"Suman\", \"Sumanna\", \"Sumedh\", \"Sumeet\", \"Sumila\", \"Sumon\", \"Sunanda\", \"Sundaramoorthy\", \"Sundararajan\", \"Sundhararajan\", \"Suneina\", \"Sunny\", \"Sunondo\", \"Sunrita\", \"Sunthari\", \"Sunther\", \"Suppiah\", \"Supriya\", \"Suprotik\", \"Surabhi\", \"Suranjan\", \"Surapanani\", \"Surapaneni\", \"Surati\", \"Suravinda\", \"Surekha\", \"Surendar\", \"Surendra\", \"Surendran\", \"Surendranath\", \"Suri\", \"Suriyaprakash\", \"Surnilla\", \"Surotama\", \"Surpur\", \"Surti\", \"Suruchi\", \"Surujnarine\", \"Surupa\", \"Sury\", \"Suryadevara\", \"Suryanarayama\", \"Suryanarayan\", \"Suryanarayana\", \"Suryanarayanan\", \"Susan\", \"Susarla\", \"Susumna\", \"Sutapa\", \"Suthar\", \"Suvrata\", \"Swagat\", \"Swagato\", \"Swami\", \"Swaminathan\", \"Swamy\", \"Swani\", \"Swanimathan\", \"Swarnkar\", \"Swathi\", \"Swati\", \"Sweta\", \"Swetha\", \"Syamala\", \"Tagore\", \"Taksa\", \"Talip\", \"Talwar\", \"Tamhane\", \"Tammana\", \"Tamragouri\", \"Tandekar\", \"Tanmaya\", \"Tantry\", \"Tanu\", \"Tanuj\", \"Tanuja\", \"Tapan\", \"Tapas\", \"Tapesh\", \"Tapi\", \"Tapti\", \"Tarang\", \"Tarit\", \"Tarpa\", \"Tarpana\", \"Tasha\", \"Tasneem\", \"Tatat\", \"Tatavarti\", \"Tendulkar\", \"Tetegni\", \"Thadigiri\", \"Thakarta\", \"Thakur\", \"Thamma\", \"Thamry\", \"Thandray\", \"Thangaraj\", \"Thangavadivelu\", \"Thiagarajan\", \"Thimanniya\", \"Thirumalai\", \"Thirumalaiswamy\", \"Thirunarayan\", \"Thirunavu\", \"Thiruvengadathan\", \"Thogulva\", \"Thommana\", \"Thribhuvana\", \"Thukral\", \"Thulasidas\", \"Thundayal\", \"Thundyil\", \"Thuraisingham\", \"Thuvaradran\", \"Thyagarajan\", \"Thyagaraju\", \"Tickoo\", \"Tikaram\", \"Tikekar\", \"Tikku\", \"Tikoo\", \"Tilak\", \"Tina\", \"Tirumalai\", \"Tirumalesa\", \"Toodi\", \"Trikha\", \"Trilochana\", \"Trisanu\", \"Trishna\", \"Trishwant\", \"Trupti\", \"Trusha\", \"Tuhin\", \"Tuhina\", \"Tumkur\", \"Tummala\", \"Tupil\", \"Tushar\", \"Tusti\", \"Tuteja\", \"Tyagi\", \"Tyagri\", \"Ubriani\", \"Uday\", \"Udaya\", \"Udayan\", \"Uddin\", \"Udipi\", \"Udit\", \"Udutha\", \"Ujjaval\", \"Ujjwal\", \"Ujjwala\", \"Ujwal\", \"Ulind\", \"Ulla\", \"Ullas\", \"Umakanta\", \"Umesh\", \"Umrigar\", \"Unmesh\", \"Unnikrishnan\", \"Upanishad\", \"Upender\", \"Upendra\", \"Uppalapati\", \"Uppuluri\", \"Urimindi\", \"Urjavaha\", \"Utpal\", \"Utpat\", \"Uttanka\", \"Uttara\", \"Vadakke\", \"Vadivelu\", \"Vadlamani\", \"Vaibhav\", \"Vaidheeswarran\", \"Vaidhyanathan\", \"Vaidya\", \"Vaikuntam\", \"Vairaja\", \"Vaisakhi\", \"Vaish\", \"Vaishnavi\", \"Vaithu\", \"Vajipeyajula\", \"Vajpayee\", \"Vajpeyi\", \"Vakil\", \"Vallath\", \"Valli\", \"Vallurupa\", \"Vallurupalli\", \"Valsan\", \"Vamshi\", \"Vamsi\", \"Vanchinathan\", \"Vandana\", \"Vandita\", \"Vani\", \"Vaninadh\", \"Vaninadha\", \"Vanita\", \"Varad\", \"Varadarajan\", \"Varahabhotla\", \"Varati\", \"Varganti\", \"Varghese\", \"Variya\", \"Varki\", \"Varsha\", \"Varun\", \"Varuni\", \"Vasava\", \"Vasavi\", \"Vashisth\", \"Vasi\", \"Vasudev\", \"Vasudha\", \"Vasudhara\", \"Vasuki\", \"Vasuman\", \"Vasumati\", \"Vattikota\", \"Vattyam\", \"Vavveti\", \"Vedananda\", \"Vedanga\", \"Vedati\", \"Vedavyasa\", \"Vedula\", \"Veena\", \"Veer\", \"Veera\", \"Veeramany\", \"Veeraraju\", \"Veerasamy\", \"Veerender\", \"Velaga\", \"Vellanki\", \"Vellore\", \"Velusamy\", \"Vemireddy\", \"Vemuganti\", \"Venkatadri\", \"Venkataraghavan\", \"Venkataraman\", \"Venkataramanan\", \"Venkatasubramani\", \"Venkatasubramanian\", \"Venkatesan\", \"Venkatesann\", \"Venkateshwara\", \"Venkateswaran\", \"Venkateswarn\", \"Venkatraman\", \"Venktesh\", \"Venu\", \"Venugopal\", \"Venugopalan\", \"Verma\", \"Vibha\", \"Vibhuti\", \"Vichur\", \"Vidi\", \"Vidur\", \"Vidvan\", \"Vidwans\", \"Vidya\", \"Vidyarthi\", \"Vidyasagar\", \"Vidyashankar\", \"Vijaya\", \"Vijayabhas\", \"Vijayagopalan\", \"Vijayakumar\", \"Vijayalakshmi\", \"Vijayanath\", \"Vijayarangan\", \"Vijayashree\", \"Vijaykrishna\", \"Vijaykumar\", \"Vijaysaradhi\", \"Vikriti\", \"Vikul\", \"Vilok\", \"Vinata\", \"Vineet\", \"Vineeta\", \"Vinit\", \"Vinita\", \"Vinuta\", \"Vinutha\", \"Vipin\", \"Vipperla\", \"Vipul\", \"Viraf\", \"Viraj\", \"Viral\", \"Virani\", \"Virasana\", \"Virat\", \"Virendra\", \"Viresh\", \"Virinchi\", \"Virini\", \"Virmani\", \"Visala\", \"Visalakshi\", \"Vish\", \"Vishaal\", \"Vishal\", \"Vishnavi\", \"Vishnuraman\", \"Vishwa\", \"Vishwamber\", \"Visvajit\", \"Visvakarman\", \"Visvanathan\", \"Visvayu\", \"Viswanath\", \"Viswanathan\", \"Viswesh\", \"Visweswaramurthy\", \"Vittal\", \"Vivatma\", \"Vivek\", \"Vivekanand\", \"Vonguru\", \"Vootla\", \"Vraman\", \"Vuppula\", \"Vyapari\", \"Vyshali\", \"Wadekar\", \"Waman\", \"Yadavalli\", \"Yadgiri\", \"Yaksha\", \"Yalamanchi\", \"Yalamanchili\", \"Yalamanchilli\", \"Yamini\", \"Yamni\", \"Yamura\", \"Yanamandra\", \"Yarlagadda\", \"Yashodhar\", \"Yashodhara\", \"Yashovarman\", \"Yateen\", \"Yauvani\", \"Yavar\", \"Yavatkar\", \"Yegammai\", \"Yellepeddy\", \"Yelsangikar\", \"Yeluri\", \"Yerramilli\", \"Yesh\", \"Yeshonath\", \"Yogendra\", \"Yogesh\", \"Yogish\", \"Yudhajit\", \"Zahin\", \"Zev\"]], [[\"Ermor\", \"Male\"], [\"Amulius\", \"Domitius\", \"Flavus\", \"Galerius\", \"Gnaeus\", \"Gneo\", \"Julius\", \"Kaeso\", \"Oppius\", \"Vibius\", \"Cornelii\", \"Julii\", \"Licinii\", \"Pompeii\", \"Servilii\"]], [[\"Ermor\", \"Female\"], [\"Aeliana\", \"Aeterna\", \"Afrania\", \"Afrodisia\", \"Agneta\", \"Agrippina\", \"Aia\", \"Amabilis\", \"Amalthea\", \"Amanda\", \"Apicata\", \"Apphia\", \"Apronia\", \"Apulia\", \"Arruntia\", \"Astia\", \"Atia\", \"Augusta\", \"Aventina\", \"Avita\", \"Blatta\", \"Byrria\", \"Caepionis\", \"Caesonia\", \"Calva\", \"Camilla\", \"Capitolina\", \"Carina\", \"Casta\", \"Cata\", \"Catia\", \"Caula\", \"Censorina\", \"Cherusca\", \"Christiana\", \"Cinna\", \"Clara\", \"Cloelia\", \"Columella\", \"Concessa\", \"Cordelia\", \"Cosconia\", \"Cotta\", \"Coventina\", \"Crescentia\", \"Crispina\", \"Cristina\", \"Cypria\", \"Decima\", \"Desiderata\", \"Dinysia\", \"Dolichena\", \"Domna\", \"Dulcilla\", \"Emelia\", \"Emerentiana\", \"Encratia\", \"Ennia\", \"Erigena\", \"Estella\", \"Eubala\", \"Eubia\", \"Eutropia\", \"Fausta\", \"Faustina\", \"Faustinia\", \"Fecenia\", \"Felicia\", \"Felicula\", \"Fesonia\", \"Flora\", \"Fontia\", \"Fortunata\", \"Gaea\", \"Gaetulica\", \"Galla\", \"Geneura\", \"Gloria\", \"Gnaea\", \"Graecina\", \"Grata\", \"Hilara\", \"Hilaria\", \"Honora\", \"Hypatia\", \"Iana\", \"Idonea\", \"Indara\", \"Ingenua\", \"Innocentia\", \"Januaria\", \"Jovina\", \"Juliana\", \"Julilla\", \"Julitta\", \"Juncina\", \"Justa\", \"Justina\", \"Lanilla\", \"Larina\", \"Laureola\", \"Laurina\", \"Lavinia\", \"Lepida\", \"Lesbia\", \"Licinian\", \"Livigena\", \"Longina\", \"Luciana\", \"Lucilla\", \"Lucina\", \"Lupula\", \"Lutatia\", \"Macrina\", \"Maesa\", \"Maia\", \"Mallea\", \"Mamaea\", \"Mamma\", \"Mammiola\", \"Mansueta\", \"Mariana\", \"Marina\", \"Martia\", \"Martina\", \"Martiola\", \"Matrona\", \"Maxilla\", \"Maxima\", \"Maximilla\", \"Messalina\", \"Messina\", \"Metella\", \"Metiliana\", \"Milvia\", \"Myrtilla\", \"Naissa\", \"Narcissa\", \"Natalia\", \"Nobilioris\", \"Numantina\", \"Occia\", \"Ocresia\", \"Olivia\", \"Oriuna\", \"Pacata\", \"Palla\", \"Panthea\", \"Pantheria\", \"Pascentia\", \"Paulla\", \"Peregrina\", \"Petraea\", \"Phrygia\", \"Pinta\", \"Placida\", \"Planasia\", \"Plancina\", \"Plautia\", \"Plotina\", \"Pluma\", \"Pompeia\", \"Poppaea\", \"Porcella\", \"Postimia\", \"Potamiaena\", \"Praxedes\", \"Prenestina\", \"Priscilla\", \"Procilla\", \"Procula\", \"Pulchra\", \"Pussitta\", \"Regina\", \"Restita\", \"Rhea\", \"Ria\", \"Romana\", \"Sabina\", \"Sabrina\", \"Sacrata\", \"Salonia\", \"Salviena\", \"Sapientia\", \"Saturnia\", \"Saturnina\", \"Scaura\", \"Scipionis\", \"Secunda\", \"Selene\", \"Selina\", \"Serena\", \"Severa\", \"Severiana\", \"Silana\", \"Silicia\", \"Silvia\", \"Simplicia\", \"Sophrona\", \"Sosia\", \"Sulpicia\", \"Tacita\", \"Tarpeia\", \"Tebetta\", \"Teracina\", \"Tertia\", \"Tertulla\", \"Thena\", \"Tiberia\", \"Titullinia\", \"Trifosa\", \"Tristonia\", \"Tuomina\", \"Ulidia\", \"Una\", \"Ursula\", \"Utica\", \"Vacia\", \"Vecchia\", \"Velva\", \"Velvinna\", \"Vernico\", \"Veronica\", \"Viatrix\", \"Vibidia\", \"Victoria\", \"Victorina\", \"Vilbia\", \"Vinicia\", \"Virgilia\", \"Virginia\", \"Viventia\", \"Volumnia\", \"Xiphilina\", \"Zonara\"]], [[\"Ermor\", \"CognomenMale\"], [\"Abercius\", \"Abito\", \"Acacius\", \"Acaunus\", \"Acilianus\", \"Adauctus\", \"Adepphius\", \"Adjutor\", \"Adranos\", \"Adventus\", \"Aeacus\", \"Aebutus\", \"Aelianus\", \"Aemilianus\", \"Afer\", \"Agapitus\", \"Agatopus\", \"Agelastus\", \"Agorix\", \"Agricola\", \"Agrippa\", \"Agustalis\", \"Ahala\", \"Albinius\", \"Albinus\", \"Albucius\", \"Alethius\", \"Aloysius\", \"Aluredes\", \"Alypius\", \"Amandus\", \"Amantius\", \"Ambrosius\", \"Ammausius\", \"Ammianus\", \"Amor\", \"Amphion\", \"Ampliatus\", \"Ancus\", \"Angelus\", \"Annaeus\", \"Antistianus\", \"Antyllus\", \"Anullinus\", \"Apelles\", \"Apellinus\", \"Aper\", \"Apollonarius\", \"Aponius\", \"Apuleius\", \"Aquila\", \"Aquilius\", \"Aquillius\", \"Aratus\", \"Arcavius\", \"Archarius\", \"Arius\", \"Armiger\", \"Arpagius\", \"Arrianus\", \"Arruntius\", \"Aruns\", \"Arvina\", \"Asclepiodotus\", \"Asellio\", \"Asiagenes\", \"Asina\", \"Asprenas\", \"Asprenus\", \"Assanius\", \"Athanasius\", \"Audaios\", \"Audens\", \"Augendus\", \"Augurinus\", \"Augurius\", \"Augustales\", \"Augustalis\", \"Augustanus\", \"Augustus\", \"Auila\", \"Aurelianus\", \"Aurelius\", \"Ausonius\", \"Auspex\", \"Auxentius\", \"Auxientius\", \"Auxilius\", \"Avitus\", \"Balbillus\", \"Balbus\", \"Balduinus\", \"Bambalio\", \"Bamballio\", \"Banquerius\", \"Barbatus\", \"Baro\", \"Bartolomaeus\", \"Bassus\", \"Bato\", \"Belenus\", \"Belisarius\", \"Bellator\", \"Belletor\", \"Bellicus\", \"Bellus\", \"Benigius\", \"Bestia\", \"Betto\", \"Bibaculus\", \"Bibulus\", \"Bitucus\", \"Blaesus\", \"Blandus\", \"Blassianus\", \"Bodenius\", \"Bolanus\", \"Bonosus\", \"Bonus\", \"Bradua\", \"Bromidus\", \"Bruccius\", \"Brucetus\", \"Bruscius\", \"Brutus\", \"Bubo\", \"Bulla\", \"Burcanius\", \"Burrus\", \"Buteo\", \"Caecilianus\", \"Caecina\", \"Caecus\", \"Caelestis\", \"Caelestius\", \"Caelianus\", \"Caelinus\", \"Caepio\", \"Caerellius\", \"Caesar\", \"Caesoninus\", \"Calacicus\", \"Calatinus\", \"Caldus\", \"Calenus\", \"Calerus\", \"Caletus\", \"Caligula\", \"Callisunus\", \"Calogerus\", \"Calpornius\", \"Calpurnianus\", \"Calpurnis\", \"Calvinus\", \"Calvus\", \"Camerius\", \"Camillus\", \"Campanus\", \"Candidus\", \"Canidius\", \"Canio\", \"Canisius\", \"Cantaber\", \"Capito\", \"Capiton\", \"Caprarius\", \"Caracturus\", \"Carantus\", \"Carausius\", \"Carbo\", \"Carisius\", \"Carius\", \"Carnifex\", \"Casca\", \"Cassianus\", \"Castorius\", \"Castus\", \"Catianus\", \"Catilina\", \"Cato\", \"Catonius\", \"Catsuminianus\", \"Catullus\", \"Catulus\", \"Catus\", \"Cecilianus\", \"Celer\", \"Celsus\", \"Cenaeus\", \"Cencius\", \"Censorinus\", \"Censorius\", \"Centumalus\", \"Cerialis\", \"Cervianus\", \"Cervidus\", \"Cethegus\", \"Chilo\", \"Christianus\", \"Cicero\", \"Cico\", \"Cimber\", \"Cinna\", \"Cinnianus\", \"Cita\", \"Cittinus\", \"Civilis\", \"Clarus\", \"Classicianus\", \"Classicus\", \"Claudianus\", \"Clemens\", \"Clement\", \"Clodian\", \"Clodianus\", \"Cocceianus\", \"Cogitatus\", \"Colias\", \"Collatinus\", \"Columbanus\", \"Columella\", \"Comes\", \"Comitianus\", \"Comitinus\", \"Commidius\", \"Commidus\", \"Commius\", \"Compitalicius\", \"Concessus\", \"Condrausisius\", \"Congrio\", \"Consrotius\", \"Constans\", \"Constantius\", \"Contumeliorus\", \"Corbulo\", \"Cordus\", \"Cornix\", \"Cornutus\", \"Corvinus\", \"Cotentinus\", \"Cotta\", \"Crassus\", \"Cremutius\", \"Crescentius\", \"Cresces\", \"Crispian\", \"Crispin\", \"Crispus\", \"Crito\", \"Crotilo\", \"Cucuphas\", \"Culleolus\", \"Cumanus\", \"Cunobarrus\", \"Cupitus\", \"Curio\", \"Cyprianus\", \"Cyprias\", \"Dacian\", \"Dagwalus\", \"Dama\", \"Damasippus\", \"Dannicus\", \"Dardanius\", \"Dardanus\", \"Decianus\", \"Decmitius\", \"Decmus\", \"Decuminus\", \"Delicius\", \"Desideratus\", \"Dexion\", \"Dexippus\", \"Didacus\", \"Dignus\", \"Dio\", \"Diocletianus\", \"Dioscourides\", \"Disertus\", \"Docilinus\", \"Docilis\", \"Dolabella\", \"Dominicus\", \"Domitianus\", \"Donatianus\", \"Donatus\", \"Donicus\", \"Drusillus\", \"Drusus\", \"Dubitatus\", \"Durio\", \"Durus\", \"Duvianus\", \"Eborius\", \"Eburnus\", \"Ecdicius\", \"Eclectus\", \"Egbutius\", \"Egnatius\", \"Elerius\", \"Eleutherius\", \"Eliphias\", \"Elvorix\", \"Emeritus\", \"Encratis\", \"Ennecus\", \"Ennius\", \"Eonus\", \"Epidianus\", \"Epimachus\", \"Epitynchianus\", \"Epolonius\", \"Erasinus\", \"Esdras\", \"Eudomius\", \"Eugenius\", \"Eugenus\", \"Eumenius\", \"Eunapius\", \"Eustacius\", \"Eutherius\", \"Evodius\", \"Excingus\", \"Exsupereus\", \"Exuperantius\", \"Exupertus\", \"Fabianus\", \"Fabillus\", \"Facilis\", \"Fadus\", \"Fagus\", \"Falco\", \"Falconius\", \"Falx\", \"Famia\", \"Familiaris\", \"Fastidius\", \"Faustillus\", \"Faustinianus\", \"Faustinius\", \"Faustus\", \"Felicissimus\", \"Felissimus\", \"Felix\", \"Ferentinus\", \"Ferreolius\", \"Festus\", \"Fidelis\", \"Figulus\", \"Fimbria\", \"Fimus\", \"Firminus\", \"Firmus\", \"Flaccus\", \"Flavian\", \"Flavianus\", \"Flavillus\", \"Flavinus\", \"Florens\", \"Florianus\", \"Forianus\", \"Fortunatus\", \"Fraucus\", \"Fredisius\", \"Frigidian\", \"Frontalis\", \"Frontinus\", \"Fronto\", \"Fructosis\", \"Frugi\", \"Frugius\", \"Frumentius\", \"Fullofaudes\", \"Fulvianus\", \"Funisulanus\", \"Furius\", \"Fuscinus\", \"Fuscus\", \"Gaianus\", \"Gaius\", \"Gala\", \"Galarius\", \"Galerus\", \"Gallus\", \"Galvisius\", \"Garilianus\", \"Gaurus\", \"Gavros\", \"Gavrus\", \"Gelasius\", \"Gellius\", \"Gemellus\", \"Geminianus\", \"Generidus\", \"Genesius\", \"Genialis\", \"Gerardus\", \"Gessius\", \"Geta\", \"Getha\", \"Glabrio\", \"Glaucia\", \"Globulus\", \"Gluvias\", \"Glycia\", \"Gordianus\", \"Gordio\", \"Gorgonius\", \"Gracchus\", \"Gracilis\", \"Gratidianus\", \"Grumio\", \"Gualtierus\", \"Habitus\", \"Hadrianus\", \"Hardalio\", \"Haterius\", \"Helvius\", \"Herculius\", \"Herenus\", \"Herma\", \"Hermina\", \"Hesychius\", \"Hiberus\", \"Hieronimianus\", \"Hilario\", \"Hilaris\", \"Hilarius\", \"Hirpinius\", \"Hirrus\", \"Homullus\", \"Horatius\", \"Hortensius\", \"Hosidius\", \"Humilis\", \"Hyacinthus\", \"Hybrida\", \"Iacomus\", \"Igennus\", \"Indaletius\", \"Indus\", \"Ingenuus\", \"Ingenvinus\", \"Iocundus\", \"Isatis\", \"Italicus\", \"Ivimarus\", \"Januarius\", \"Javolenus\", \"Jovinianus\", \"Jovinus\", \"Jovius\", \"Juba\", \"Julian\", \"Julianus\", \"Juncinus\", \"Juncus\", \"Junianus\", \"Justianus\", \"Justin\", \"Justinianus\", \"Justinus\", \"Justus\", \"Juvenalis\", \"Kaeso\", \"Lactantius\", \"Laeca\", \"Laenas\", \"Laetinianus\", \"Laevinus\", \"Larcius\", \"Lartius\", \"Lateranus\", \"Latinus\", \"Laurentius\", \"Leddicus\", \"Lentullus\", \"Lentulus\", \"Leon\", \"Lepidus\", \"Lepontus\", \"Leptis\", \"Libanius\", \"Liberalis\", \"Libo\", \"Licinianus\", \"Licinius\", \"Ligur\", \"Ligustinus\", \"Limetanus\", \"Linus\", \"Litorius\", \"Littera\", \"Litumarus\", \"Livianus\", \"Livigenus\", \"Lovernianus\", \"Lovernius\", \"Lucan\", \"Lucanus\", \"Lucianus\", \"Lucilianus\", \"Lucretinaus\", \"Lucretius\", \"Luctacus\", \"Lucullus\", \"Lunaris\", \"Luonercus\", \"Lupercus\", \"Lupicinus\", \"Lupinus\", \"Lupus\", \"Lurco\", \"Lurio\", \"Lutherius\", \"Lutorius\", \"Maccalus\", \"Macrinus\", \"Macro\", \"Macrobius\", \"Mactator\", \"Maecenas\", \"Maecius\", \"Magnus\", \"Magunnus\", \"Maius\", \"Major\", \"Malchus\", \"Mallus\", \"Maltinus\", \"Maminianus\", \"Mancinus\", \"Manlius\", \"Mansuetus\", \"Marcellinus\", \"Marcellus\", \"Marcialis\", \"Marcipor\", \"Margarita\", \"Marinianus\", \"Marinus\", \"Maritimus\", \"Marius\", \"Maro\", \"Marsicus\", \"Marsus\", \"Marsyas\", \"Martial\", \"Martialis\", \"Martianus\", \"Martinus\", \"Martius\", \"Marullinus\", \"Marullus\", \"Maternus\", \"Matho\", \"Maursus\", \"Maximian\", \"Maximinius\", \"Maximus\", \"Medullinus\", \"Megellus\", \"Melissus\", \"Melitus\", \"Mellitus\", \"Melus\", \"Meminius\", \"Memmius\", \"Memor\", \"Mercator\", \"Mercurialis\", \"Mercurinus\", \"Merula\", \"Messala\", \"Messor\", \"Metellus\", \"Metilius\", \"Metunus\", \"Micianus\", \"Mico\", \"Milonius\", \"Minervalis\", \"Minianus\", \"Minicianus\", \"Moderatus\", \"Molacus\", \"Momus\", \"Montanus\", \"Montaus\", \"Mordanticus\", \"Mucianus\", \"Muco\", \"Muncius\", \"Murena\", \"Mus\", \"Musa\", \"Musicus\", \"Mutilus\", \"Mutius\", \"Nabor\", \"Naevius\", \"Namatianus\", \"Narcissus\", \"Nasica\", \"Naso\", \"Natalinus\", \"Natalis\", \"Naucratius\", \"Nazarius\", \"Nectaridus\", \"Nelius\", \"Nemesianus\", \"Nemnogenus\", \"Neneus\", \"Nennius\", \"Nepos\", \"Nero\", \"Nertomarus\", \"Nerva\", \"Nicasius\", \"Nigellus\", \"Niger\", \"Nigidius\", \"Nigrinus\", \"Niraemius\", \"Nolus\", \"Nonius\", \"Noster\", \"Novatian\", \"Novellius\", \"Numerianus\", \"Numonis\", \"Oceanus\", \"Octavian\", \"Octavianus\", \"Octobrianus\", \"Olennius\", \"Olympicus\", \"Opimius\", \"Opis\", \"Optatus\", \"Orientalis\", \"Orientius\", \"Orissus\", \"Orosius\", \"Ostorianus\", \"Pacatianus\", \"Pachomius\", \"Pacuvianus\", \"Paenula\", \"Paetinus\", \"Paetus\", \"Palicamus\", \"Pamphilius\", \"Panaetius\", \"Pansa\", \"Pantenus\", \"Pantera\", \"Panthera\", \"Papinian\", \"Papus\", \"Paratus\", \"Parnesius\", \"Pascentius\", \"Paterculus\", \"Patiens\", \"Paulinus\", \"Paullus\", \"Pavo\", \"Pennus\", \"Peregrinus\", \"Perennis\", \"Perpenna\", \"Perperna\", \"Pertacus\", \"Pertinax\", \"Petasius\", \"Petreius\", \"Petronax\", \"Petrus\", \"Philippus\", \"Pictor\", \"Pilatus\", \"Pilus\", \"Pinarius\", \"Piso\", \"Pius\", \"Placidus\", \"Planta\", \"Plautis\", \"Plautius\", \"Plautus\", \"Pleminius\", \"Pollienus\", \"Pollio\", \"Polus\", \"Polybius\", \"Pompolussa\", \"Pomponius\", \"Poplicola\", \"Porcus\", \"Porphyrius\", \"Postumianus\", \"Postumus\", \"Potitus\", \"Praetextus\", \"Prilidianus\", \"Primanus\", \"Primulus\", \"Primus\", \"Prisca\", \"Priscillian\", \"Priscillianus\", \"Priscus\", \"Processus\", \"Proceus\", \"Proculus\", \"Procyon\", \"Profuterius\", \"Propertius\", \"Propinquus\", \"Protacius\", \"Protus\", \"Proxsimus\", \"Publianus\", \"Publicola\", \"Pudens\", \"Pudentius\", \"Pulcher\", \"Pulcherius\", \"Pullus\", \"Pusinnus\", \"Pustula\", \"Quartinus\", \"Quarto\", \"Quatruus\", \"Quentin\", \"Quietus\", \"Quintilianus\", \"Quintilius\", \"Quintillius\", \"Quintillus\", \"Quiriac\", \"Quiricus\", \"Quirinalis\", \"Ramio\", \"Ramirus\", \"Ravilla\", \"Reburrus\", \"Receptus\", \"Rectus\", \"Regillus\", \"Reginus\", \"Regulus\", \"Remigius\", \"Remus\", \"Renatus\", \"Respectus\", \"Restitutus\", \"Rex\", \"Ripanus\", \"Rogelius\", \"Romanus\", \"Romulianus\", \"Romulus\", \"Roscius\", \"Rufinianus\", \"Rufinus\", \"Rufrius\", \"Rufus\", \"Rullus\", \"Ruricius\", \"Ruso\", \"Rusticus\", \"Rutilianus\", \"Sabellius\", \"Sabinianus\", \"Sabinus\", \"Saenus\", \"Salinator\", \"Salonianus\", \"Saloninus\", \"Salonius\", \"Salvianus\", \"Salvius\", \"Sanctus\", \"Sandilianus\", \"Sanga\", \"Sarimarcus\", \"Sarrius\", \"Saturninus\", \"Saunio\", \"Scaevola\", \"Scapula\", \"Scaro\", \"Scato\", \"Scaurus\", \"Schlerus\", \"Scipio\", \"Scribonianus\", \"Scrofa\", \"Secundus\", \"Segestes\", \"Sejanus\", \"Sellic\", \"Seneca\", \"Senecianus\", \"Senecio\", \"Senilis\", \"Senna\", \"Senopianus\", \"Sentius\", \"Septimianus\", \"Sergius\", \"Seronatus\", \"Serranus\", \"Sertorius\", \"Servanus\", \"Servatius\", \"Servilius\", \"Seuso\", \"Severinus\", \"Sevso\", \"Siculus\", \"Sidonius\", \"Sigilis\", \"Silanus\", \"Silius\", \"Silo\", \"Silus\", \"Silvanus\", \"Similis\", \"Simo\", \"Simplex\", \"Simplicianus\", \"Siricus\", \"Sisenna\", \"Sisinnius\", \"Sita\", \"Sollemnis\", \"Sorex\", \"Sorio\", \"Sosius\", \"Soterichus\", \"Sotericus\", \"Soulinus\", \"Spartacus\", \"Spendius\", \"Speratus\", \"Statius\", \"Stichus\", \"Strabo\", \"Sudrenus\", \"Suilius\", \"Sulinus\", \"Sulla\", \"Sulpicius\", \"Super\", \"Superbus\", \"Superstes\", \"Sura\", \"Surinus\", \"Surius\", \"Surus\", \"Sylla\", \"Sylvian\", \"Sylvius\", \"Symmachus\", \"Symphorian\", \"Sympronian\", \"Synistor\", \"Synnodus\", \"Tacitus\", \"Taenarus\", \"Tancinus\", \"Tanicus\", \"Tarquinius\", \"Tarsicius\", \"Tasius\", \"Tatian\", \"Tatianus\", \"Taurinus\", \"Taurus\", \"Telesinus\", \"Terenteianus\", \"Tertius\", \"Tertullian\", \"Tertullianus\", \"Tertulus\", \"Tetricus\", \"Tetullianus\", \"Thrasea\", \"Tiberillus\", \"Tiberinus\", \"Tibullus\", \"Tiburs\", \"Tiburtius\", \"Ticinus\", \"Titianus\", \"Titillus\", \"Torquatus\", \"Toutius\", \"Traianus\", \"Traillus\", \"Tranio\", \"Tranquillus\", \"Trebellius\", \"Trebius\", \"Trebonianus\", \"Trebonius\", \"Tremerus\", \"Tremorinus\", \"Trenico\", \"Trenus\", \"Triarius\", \"Trifer\", \"Triferus\", \"Trimalchio\", \"Trogus\", \"Trupo\", \"Tuccianus\", \"Tuditanus\", \"Tullius\", \"Tullus\", \"Turibius\", \"Turpilianus\", \"Turpilinus\", \"Turpilius\", \"Tuticanus\", \"Tutor\", \"Typhoeus\", \"Tyranus\", \"Ulfila\", \"Ulixes\", \"Ulpian\", \"Umbonius\", \"Ursacius\", \"Ursinus\", \"Ursus\", \"Uticensis\", \"Vala\", \"Valens\", \"Valentinian\", \"Valentinus\", \"Valerianus\", \"Valgus\", \"Varialus\", \"Varro\", \"Varus\", \"Vatia\", \"Vedrix\", \"Vegetius\", \"Velus\", \"Venator\", \"Ventor\", \"Venustinius\", \"Vepgenus\", \"Veranius\", \"Verecundus\", \"Vergilius\", \"Verinus\", \"Verres\", \"Verrucosis\", \"Verullus\", \"Verulus\", \"Verus\", \"Vespasianus\", \"Vestinus\", \"Vestorius\", \"Vetranio\", \"Vettonianus\", \"Veturius\", \"Vibennis\", \"Vibius\", \"Vibullius\", \"Victor\", \"Victricius\", \"Vincentius\", \"Vindex\", \"Vinicianus\", \"Vipsanius\", \"Virginius\", \"Viridio\", \"Virilis\", \"Virnius\", \"Vitalinus\", \"Vitalion\", \"Vitalis\", \"Vitoricus\", \"Vitulus\", \"Vitus\", \"Vocula\", \"Volturcius\", \"Volusenus\", \"Volusianus\", \"Vonones\", \"Vopiscus\", \"Voteporix\", \"Vulso\", \"Zosimus\", \"Africanus\", \"Allobrogicus\", \"Asiaticus\", \"Atticus\", \"Balearicus\", \"Briganticus\", \"Britannicus\", \"Creticu\", \"Dalmaticus\", \"Gallicus\", \"Germanicus\", \"Helveticus\", \"Isauricus\", \"Macedonicus\", \"Numidicus\", \"Spartacus\", \"Secundus\", \"Tertius\", \"Sextus\", \"Septimus\", \"Octavius\", \"Nonus\", \"Decimus\", \"Undecimus\", \"Vicesimus\"]], [[\"Ermor\", \"CognomenFemale\"], [\"Balearica\", \"Cretica\", \"Dalmatica\", \"Secunda\", \"Tertia\", \"Sexta\", \"Septima\", \"Octavia\", \"Nona\", \"Decima\", \"Undecima\", \"Vicesima\", \"Aeliana\", \"Aeterna\", \"Afrania\", \"Afrodisia\", \"Agneta\", \"Agrippina\", \"Aia\", \"Amabilis\", \"Amalthea\", \"Amanda\", \"Apicata\", \"Apphia\", \"Apronia\", \"Apulia\", \"Arruntia\", \"Astia\", \"Atia\", \"Augusta\", \"Aventina\", \"Avita\", \"Blatta\", \"Byrria\", \"Caepionis\", \"Caesonia\", \"Calva\", \"Camilla\", \"Capitolina\", \"Carina\", \"Casta\", \"Cata\", \"Catia\", \"Caula\", \"Censorina\", \"Cherusca\", \"Christiana\", \"Cinna\", \"Clara\", \"Cloelia\", \"Columella\", \"Concessa\", \"Cordelia\", \"Cosconia\", \"Cotta\", \"Coventina\", \"Crescentia\", \"Crispina\", \"Cristina\", \"Cypria\", \"Decima\", \"Desiderata\", \"Dinysia\", \"Dolichena\", \"Domna\", \"Dulcilla\", \"Emelia\", \"Emerentiana\", \"Encratia\", \"Ennia\", \"Erigena\", \"Estella\", \"Eubala\", \"Eubia\", \"Eutropia\", \"Fausta\", \"Faustina\", \"Faustinia\", \"Fecenia\", \"Felicia\", \"Felicula\", \"Fesonia\", \"Flora\", \"Fontia\", \"Fortunata\", \"Gaea\", \"Gaetulica\", \"Galla\", \"Geneura\", \"Gloria\", \"Gnaea\", \"Graecina\", \"Grata\", \"Hilara\", \"Hilaria\", \"Honora\", \"Hypatia\", \"Iana\", \"Idonea\", \"Indara\", \"Ingenua\", \"Innocentia\", \"Januaria\", \"Jovina\", \"Juliana\", \"Julilla\", \"Julitta\", \"Juncina\", \"Justa\", \"Justina\", \"Lanilla\", \"Larina\", \"Laureola\", \"Laurina\", \"Lavinia\", \"Lepida\", \"Lesbia\", \"Licinian\", \"Livigena\", \"Longina\", \"Luciana\", \"Lucilla\", \"Lucina\", \"Lupula\", \"Lutatia\", \"Macrina\", \"Maesa\", \"Maia\", \"Mallea\", \"Mamaea\", \"Mamma\", \"Mammiola\", \"Mansueta\", \"Mariana\", \"Marina\", \"Martia\", \"Martina\", \"Martiola\", \"Matrona\", \"Maxilla\", \"Maxima\", \"Maximilla\", \"Messalina\", \"Messina\", \"Metella\", \"Metiliana\", \"Milvia\", \"Myrtilla\", \"Naissa\", \"Narcissa\", \"Natalia\", \"Nobilioris\", \"Numantina\", \"Occia\", \"Ocresia\", \"Olivia\", \"Oriuna\", \"Pacata\", \"Palla\", \"Panthea\", \"Pantheria\", \"Pascentia\", \"Paulla\", \"Peregrina\", \"Petraea\", \"Phrygia\", \"Pinta\", \"Placida\", \"Planasia\", \"Plancina\", \"Plautia\", \"Plotina\", \"Pluma\", \"Pompeia\", \"Poppaea\", \"Porcella\", \"Postimia\", \"Potamiaena\", \"Praxedes\", \"Prenestina\", \"Priscilla\", \"Procilla\", \"Procula\", \"Pulchra\", \"Pussitta\", \"Regina\", \"Restita\", \"Rhea\", \"Ria\", \"Romana\", \"Sabina\", \"Sabrina\", \"Sacrata\", \"Salonia\", \"Salviena\", \"Sapientia\", \"Saturnia\", \"Saturnina\", \"Scaura\", \"Scipionis\", \"Secunda\", \"Selene\", \"Selina\", \"Serena\", \"Severa\", \"Severiana\", \"Silana\", \"Silicia\", \"Silvia\", \"Simplicia\", \"Sophrona\", \"Sosia\", \"Sulpicia\", \"Tacita\", \"Tarpeia\", \"Tebetta\", \"Teracina\", \"Tertia\", \"Tertulla\", \"Thena\", \"Tiberia\", \"Titullinia\", \"Trifosa\", \"Tristonia\", \"Tuomina\", \"Ulidia\", \"Una\", \"Ursula\", \"Utica\", \"Vacia\", \"Vecchia\", \"Velva\", \"Velvinna\", \"Vernico\", \"Veronica\", \"Viatrix\", \"Vibidia\", \"Victoria\", \"Victorina\", \"Vilbia\", \"Vinicia\", \"Virgilia\", \"Virginia\", \"Viventia\", \"Volumnia\", \"Xiphilina\", \"Zonara\"]], [[\"Ermor\", \"LastFemale\"], [\"Acilius\", \"Aebutius\", \"Aedinius\", \"Aegidius\", \"Aelia\", \"Aeresius\", \"Aetius\", \"Afrania\", \"Agrius\", \"Albanus\", \"Albia\", \"Albinovanus\", \"Albucius\", \"Alfenus\", \"Allectus\", \"Alleius\", \"Allia\", \"Amatius\", \"Ammianus\", \"Ancharius\", \"Annaeus\", \"Annia\", \"Anninius\", \"Antistius\", \"Antius\", \"Antonia\", \"Antoninus\", \"Appuleius\", \"Arius\", \"Arminia\", \"Arminus\", \"Arria\", \"Arruntia\", \"Artorius\", \"Asinius\", \"Ateius\", \"Atia\", \"Atilius\", \"Atrius\", \"Attia\", \"Aufidius\", \"Aulus\", \"Aurunceius\", \"Ausonius\", \"Autronius\", \"Avidius\", \"Axius\", \"Babudius\", \"Baebius\", \"Baenius\", \"Baibius\", \"Barrius\", \"Bebius\", \"Belaeus\", \"Bellienus\", \"Blandius\", \"Bruccius\", \"Bruttius\", \"Caelius\", \"Caeparius\", \"Caerellius\", \"Caesennius\", \"Caesius\", \"Calatoria\", \"Caledonius\", \"Calidius\", \"Calpurnia\", \"Calventius\", \"Calvinus\", \"Calvisius\", \"Cammius\", \"Canuleius\", \"Caprenius\", \"Caria\", \"Caristanius\", \"Caristianus\", \"Cassia\", \"Cassianus\", \"Catiotus\", \"Cecia\", \"Celatus\", \"Celerinius\", \"Centennius\", \"Cicereius\", \"Cipius\", \"Clitumna\", \"Cloatius\", \"Clovius\", \"Cluentius\", \"Cluntius\", \"Cnisius\", \"Cocceius\", \"Cominius\", \"Comnena\", \"Conconius\", \"Congaonius\", \"Congonius\", \"Cordius\", \"Cornificius\", \"Cosconius\", \"Cossutia\", \"Crispus\", \"Curatia\", \"Curius\", \"Curtius\", \"Decianus\", \"Decimius\", \"Decumius\", \"Delluius\", \"Desidenius\", \"Desticius\", \"Dexius\", \"Didius\", \"Dillius\", \"Dossenius\", \"Drusa\", \"Duccius\", \"Duilis\", \"Duilius\", \"Duronius\", \"Egnatius\", \"Ennius\", \"Epidius\", \"Equitia\", \"Fabricius\", \"Fadia\", \"Fadius\", \"Falerius\", \"Famulus\", \"Fannius\", \"Fausta\", \"Faventinus\", \"Favonius\", \"Fenius\", \"Festinius\", \"Flaccus\", \"Flaminius\", \"Flavinius\", \"Flavonius\", \"Floridius\", \"Florius\", \"Floronius\", \"Fonteia\", \"Francus\", \"Fufius\", \"Fulcinia\", \"Fulvia\", \"Fundanus\", \"Fundilius\", \"Funisulanus\", \"Gabinius\", \"Galenus\", \"Galerius\", \"Galla\", \"Gargilius\", \"Gavius\", \"Gellius\", \"Grania\", \"Gratia\", \"Gratidia\", \"Haterius\", \"Helvetius\", \"Helvia\", \"Herennius\", \"Herius\", \"Herminius\", \"Hispala\", \"Horatia\", \"Hortensia\", \"Hosidius\", \"Hostilius\", \"Inventius\", \"Iulus\", \"Javolena\", \"Jucundius\", \"Junia\", \"Justus\", \"Juventius\", \"Laberius\", \"Labienus\", \"Laelius\", \"Laetonius\", \"Lafrenius\", \"Lampronius\", \"Lepidus\", \"Liburnius\", \"Licinia\", \"Ligustinius\", \"Lollia\", \"Longinus\", \"Longus\", \"Loreius\", \"Lucceia\", \"Lucia\", \"Lucilia\", \"Lusius\", \"Lutatius\", \"Maccius\", \"Macrinus\", \"Maecilius\", \"Maelius\", \"Maenia\", \"Magius\", \"Maianius\", \"Mallius\", \"Mamilius\", \"Manilius\", \"Manlius\", \"Mannius\", \"Marcia\", \"Maria\", \"Martiannius\", \"Matia\", \"Maximius\", \"Melissaeius\", \"Memmius\", \"Messienus\", \"Metilius\", \"Milonius\", \"Minucius\", \"Minutius\", \"Modius\", \"Mucia\", \"Mummius\", \"Munatius\", \"Munius\", \"Murcius\", \"Murrius\", \"Naevius\", \"Nasennius\", \"Nemetorius\", \"Nepius\", \"Neratius\", \"Nigidius\", \"Nigidullus\", \"Nigilius\", \"Nigrius\", \"Nipius\", \"Nonius\", \"Norbanus\", \"Novius\", \"Numerius\", \"Occius\", \"Oclatinius\", \"Octavia\", \"Olcinius\", \"Oppius\", \"Opsius\", \"Oranius\", \"Orestilla\", \"Ostorius\", \"Otacilius\", \"Papellius\", \"Papius\", \"Paquius\", \"Peltrasius\", \"Perpennia\", \"Perquitienus\", \"Pescennius\", \"Petellius\", \"Petilius\", \"Petillius\", \"Petreia\", \"Petronia\", \"Piscius\", \"Pisentius\", \"Pituanius\", \"Placida\", \"Platorius\", \"Plautia\", \"Plinius\", \"Plotius\", \"Poenius\", \"Pollia\", \"Polus\", \"Pomponia\", \"Pomptinus\", \"Pontidius\", \"Pontius\", \"Popidius\", \"Popillia\", \"Poppaedius\", \"Portia\", \"Praesentius\", \"Publicius\", \"Pupius\", \"Quettius\", \"Quinctilia\", \"Quintilia\", \"Quintius\", \"Quirinius\", \"Rabirius\", \"Roscius\", \"Rufia\", \"Rufina\", \"Rufrius\", \"Rufus\", \"Rusonia\", \"Sabidius\", \"Sabucius\", \"Sacerdus\", \"Sallustius\", \"Salonia\", \"Salvius\", \"Saufeius\", \"Scribonia\", \"Secundinius\", \"Secundius\", \"Seius\", \"Senecianus\", \"Senicianus\", \"Sennius\", \"Sentius\", \"Septimius\", \"Sepunius\", \"Sepurcius\", \"Sertoria\", \"Sestius\", \"Sextilius\", \"Sextius\", \"Sidonius\", \"Silia\", \"Silvianus\", \"Sittius\", \"Socellius\", \"Sornatius\", \"Sosia\", \"Spurius\", \"Staius\", \"Statius\", \"Statlilius\", \"Stertinius\", \"Stlaccius\", \"Suedius\", \"Sylvia\", \"Tadia\", \"Talmudius\", \"Tanicius\", \"Teideius\", \"Terentia\", \"Terentius\", \"Tertinius\", \"Tetius\", \"Titia\", \"Titinia\", \"Tituleius\", \"Tragus\", \"Trebatius\", \"Trebellius\", \"Tremellius\", \"Tuccius\", \"Tullia\", \"Turrianus\", \"Ulpianus\", \"Ulpius\", \"Umbrenius\", \"Urgulania\", \"Uulius\", \"Vagiennius\", \"Vagionius\", \"Vagnius\", \"Valerianus\", \"Valerius\", \"Valgus\", \"Vargunteius\", \"Varia\", \"Vassinus\", \"Vatinius\", \"Vedius\", \"Velva\", \"Venidius\", \"Veranius\", \"Verecundius\", \"Vergilius\", \"Verus\", \"Vesnius\", \"Vesuius\", \"Vesuvius\", \"Vibenius\", \"Vibidius\", \"Victricius\", \"Vidacilius\", \"Viducius\", \"Vinicius\", \"Vipsania\", \"Viridius\", \"Virius\", \"Vitellia\", \"Vitruvius\", \"Vitulasius\", \"Volcatius\", \"Volumni\", \"Volusenus\", \"Volusia\", \"Aemilia\", \"Atilia\", \"Aurelia\", \"Caecilia\", \"Camilla\", \"Claudia\", \"Clodia\", \"Cornelia\", \"Domitia\", \"Fabia\", \"Flavia\", \"Furia\", \"Livia\", \"Manlia\", \"Papinia\", \"Papiria\", \"Pinarus\", \"Pompeia\", \"Porcia\", \"Postumia\", \"Rutilia\", \"Sempronia\", \"Segia\", \"Servilia\", \"Sulpicia\", \"Valeria\", \"Vettia\"]], [[\"Ermor\", \"LastMale\"], [\"Acilius\", \"Aebutius\", \"Aedinius\", \"Aegidius\", \"Aelius\", \"Aeresius\", \"Aetius\", \"Afranius\", \"Agrius\", \"Albanus\", \"Albius\", \"Albinovanus\", \"Albucius\", \"Alfenus\", \"Allectus\", \"Alleius\", \"Allius\", \"Amatius\", \"Ammianus\", \"Ancharius\", \"Annaeus\", \"Annius\", \"Anninius\", \"Antistius\", \"Antius\", \"Antonius\", \"Antoninus\", \"Appuleius\", \"Arius\", \"Arminius\", \"Arminus\", \"Arrius\", \"Arruntius\", \"Artorius\", \"Asinius\", \"Ateius\", \"Atius\", \"Atilius\", \"Atrius\", \"Attius\", \"Aufidius\", \"Aulus\", \"Aurunceius\", \"Ausonius\", \"Autronius\", \"Avidius\", \"Axius\", \"Babudius\", \"Baebius\", \"Baenius\", \"Baibius\", \"Barrius\", \"Bebius\", \"Belaeus\", \"Bellienus\", \"Blandius\", \"Bruccius\", \"Bruttius\", \"Caelius\", \"Caeparius\", \"Caerellius\", \"Caesennius\", \"Caesius\", \"Calatorius\", \"Caledonius\", \"Calidius\", \"Calpurnius\", \"Calventius\", \"Calvinus\", \"Calvisius\", \"Cammius\", \"Canuleius\", \"Caprenius\", \"Carius\", \"Caristanius\", \"Caristianus\", \"Cassius\", \"Cassianus\", \"Catiotus\", \"Cecius\", \"Celatus\", \"Celerinius\", \"Centennius\", \"Cicereius\", \"Cipius\", \"Clitumnus\", \"Cloatius\", \"Clovius\", \"Cluentius\", \"Cluntius\", \"Cnisius\", \"Cocceius\", \"Cominius\", \"Comnenus\", \"Conconius\", \"Congaonius\", \"Congonius\", \"Cordius\", \"Cornificius\", \"Cosconius\", \"Cossutius\", \"Crispus\", \"Curatius\", \"Curius\", \"Curtius\", \"Decianus\", \"Decimius\", \"Decumius\", \"Delluius\", \"Desidenius\", \"Desticius\", \"Dexius\", \"Didius\", \"Dillius\", \"Dossenius\", \"Drusus\", \"Duccius\", \"Duilis\", \"Duilius\", \"Duronius\", \"Egnatius\", \"Ennius\", \"Epidius\", \"Equitius\", \"Fabricius\", \"Fadia\", \"Fadius\", \"Falerius\", \"Famulus\", \"Fannius\", \"Faustus\", \"Faventinus\", \"Favonius\", \"Fenius\", \"Festinius\", \"Flaccus\", \"Flaminius\", \"Flavinius\", \"Flavonius\", \"Floridius\", \"Florius\", \"Floronius\", \"Fonteius\", \"Francus\", \"Fufius\", \"Fulcinius\", \"Fulvius\", \"Fundanus\", \"Fundilius\", \"Funisulanus\", \"Gabinius\", \"Galenus\", \"Galerius\", \"Gallus\", \"Gargilius\", \"Gavius\", \"Gellius\", \"Granius\", \"Gratus\", \"Gratidius\", \"Haterius\", \"Helvetius\", \"Helvius\", \"Herennius\", \"Herius\", \"Herminius\", \"Hispalus\", \"Horatius\", \"Hortensius\", \"Hosidius\", \"Hostilius\", \"Inventius\", \"Iulus\", \"Javolenus\", \"Jucundius\", \"Junius\", \"Justus\", \"Juventius\", \"Laberius\", \"Labienus\", \"Laelius\", \"Laetonius\", \"Lafrenius\", \"Lampronius\", \"Lepidus\", \"Liburnius\", \"Licinius\", \"Ligustinius\", \"Lollius\", \"Longinus\", \"Longus\", \"Loreius\", \"Lucceius\", \"Lucius\", \"Lucilius\", \"Lusius\", \"Lutatius\", \"Maccius\", \"Macrinus\", \"Maecilius\", \"Maelius\", \"Maenius\", \"Magius\", \"Maianius\", \"Mallius\", \"Mamilius\", \"Manilius\", \"Manlius\", \"Mannius\", \"Marcius\", \"Marius\", \"Martiannius\", \"Matius\", \"Maximius\", \"Melissaeius\", \"Memmius\", \"Messienus\", \"Metilius\", \"Milonius\", \"Minucius\", \"Minutius\", \"Modius\", \"Mucius\", \"Mummius\", \"Munatius\", \"Munius\", \"Murcius\", \"Murrius\", \"Naevius\", \"Nasennius\", \"Nemetorius\", \"Nepius\", \"Neratius\", \"Nigidius\", \"Nigidullus\", \"Nigilius\", \"Nigrius\", \"Nipius\", \"Nonius\", \"Norbanus\", \"Novius\", \"Numerius\", \"Occius\", \"Oclatinius\", \"Octavius\", \"Olcinius\", \"Oppius\", \"Opsius\", \"Oranius\", \"Orestilla\", \"Ostorius\", \"Otacilius\", \"Papellius\", \"Papius\", \"Paquius\", \"Peltrasius\", \"Perpennius\", \"Perquitienus\", \"Pescennius\", \"Petellius\", \"Petilius\", \"Petillius\", \"Petreius\", \"Petronius\", \"Piscius\", \"Pisentius\", \"Pituanius\", \"Placidus\", \"Platorius\", \"Plautius\", \"Plinius\", \"Plotius\", \"Poenius\", \"Pollius\", \"Polus\", \"Pomponius\", \"Pomptinus\", \"Pontidius\", \"Pontius\", \"Popidius\", \"Popillius\", \"Poppaedius\", \"Portius\", \"Praesentius\", \"Publicius\", \"Pupius\", \"Quettius\", \"Quinctilius\", \"Quintilius\", \"Quintius\", \"Quirinius\", \"Rabirius\", \"Roscius\", \"Rufius\", \"Rufinus\", \"Rufrius\", \"Rufus\", \"Rusonius\", \"Sabidius\", \"Sabucius\", \"Sacerdus\", \"Sallustius\", \"Salonius\", \"Salvius\", \"Saufeius\", \"Scribonius\", \"Secundinius\", \"Secundius\", \"Seius\", \"Senecianus\", \"Senicianus\", \"Sennius\", \"Sentius\", \"Septimius\", \"Sepunius\", \"Sepurcius\", \"Sertorius\", \"Sestius\", \"Sextilius\", \"Sextius\", \"Sidonius\", \"Silius\", \"Silvianus\", \"Sittius\", \"Socellius\", \"Sornatius\", \"Sosius\", \"Spurius\", \"Staius\", \"Statius\", \"Statlilius\", \"Stertinius\", \"Stlaccius\", \"Suedius\", \"Sylvius\", \"Tadius\", \"Talmudius\", \"Tanicius\", \"Teideius\", \"Terentia\", \"Terentius\", \"Tertinius\", \"Tetius\", \"Titius\", \"Titinius\", \"Tituleius\", \"Tragus\", \"Trebatius\", \"Trebellius\", \"Tremellius\", \"Tuccius\", \"Tullius\", \"Turrianus\", \"Ulpianus\", \"Ulpius\", \"Umbrenius\", \"Urgulanius\", \"Uulius\", \"Vagiennius\", \"Vagionius\", \"Vagnius\", \"Valerianus\", \"Valerius\", \"Valgus\", \"Vargunteius\", \"Varius\", \"Vassinus\", \"Vatinius\", \"Vedius\", \"Velvus\", \"Venidius\", \"Veranius\", \"Verecundius\", \"Vergilius\", \"Verus\", \"Vesnius\", \"Vesuius\", \"Vesuvius\", \"Vibenius\", \"Vibidius\", \"Victricius\", \"Vidacilius\", \"Viducius\", \"Vinicius\", \"Vipsanius\", \"Viridius\", \"Virius\", \"Vitellius\", \"Vitruvius\", \"Vitulasius\", \"Volcatius\", \"Volumnius\", \"Volusenus\", \"Volusius\", \"Aemilius\", \"Atilius\", \"Aurelius\", \"Caecilius\", \"Camillus\", \"Claudius\", \"Clodius\", \"Cornelius\", \"Domitius\", \"Fabius\", \"Flavius\", \"Furius\", \"Livius\", \"Manlius\", \"Papinius\", \"Papirius\", \"Pinarus\", \"Postumius\", \"Rutilius\", \"Sempronius\", \"Sergius\", \"Servilius\", \"Sulpicius\", \"Valerius\"]], [[\"Undauntra\", \"Male\"], [\"Abantes\", \"Abas\", \"Abascantus\", \"Abderos\", \"Aberkios\", \"Ablerus\", \"Abreas\", \"Abronychus\", \"Abydos\", \"Acaeus\", \"Acamus\", \"Acessamenus\", \"Acestes\", \"Aclepiades\", \"Acrisias\", \"Acrisius\", \"Acroneos\", \"Actor\", \"Adeimanthos\", \"Adelphius\", \"Admetos\", \"Adrastos\", \"Adrastus\", \"Adrestus\", \"Aeaces\", \"Aegaeon\", \"Aegicoros\", \"Aegisthes\", \"Aegon\", \"Aeimnestos\", \"Aenesidemos\", \"Aeolus\", \"Aeropus\", \"Aeschreas\", \"Aesculapius\", \"Aesepus\", \"Aeson\", \"Aesop\", \"Aetes\", \"Aethon\", \"Aetion\", \"Aetios\", \"Aetolos\", \"Agamedes\", \"Agamemnon\", \"Agapenor\", \"Agapias\", \"Agastrophos\", \"Agathocles\", \"Agathon\", \"Agelaus\", \"Agenor\", \"Agesilaus\", \"Agetos\", \"Agis\", \"Agrias\", \"Aiantes\", \"Aias\", \"Aigeus\", \"Airopos\", \"Aischylos\", \"Akadios\", \"Akamas\", \"Aktis\", \"Aktor\", \"Alastor\", \"Alcaeos\", \"Alcandros\", \"Alcides\", \"Alcimos\", \"Alcinous\", \"Alcmaion\", \"Alcman\", \"Alcon\", \"Alector\", \"Alektryon\", \"Aleuas\", \"Alexandros\", \"Alexarchos\", \"Alexias\", \"Alexis\", \"Alexon\", \"Alkamenos\", \"Alkestis\", \"Alketas\", \"Alkibiades\", \"Alkides\", \"Alkimachos\", \"Alkiphron\", \"Alkmaion\", \"Aloeus\", \"Alphaeus\", \"Alpheos\", \"Alphesiboeus\", \"Alphios\", \"Altes\", \"Alypius\", \"Amarinceus\", \"Ameinias\", \"Ameinokles\", \"Amiantos\", \"Amompharetos\", \"Amopaon\", \"Amphiaraos\", \"Amphidamos\", \"Amphimachos\", \"Amphimnestus\", \"Amphinomous\", \"Amphion\", \"Amphios\", \"Amphitrion\", \"Amyntas\", \"Amyntor\", \"Amyris\", \"Amythaon\", \"Anabesineos\", \"Anacharsis\", \"Anakletos\", \"Anakreon\", \"Anastasios\", \"Anaxagoras\", \"Anaxandridas\", \"Anaxandrides\", \"Anaxandros\", \"Anaxarchos\", \"Anaxilaus\", \"Anaximander\", \"Anaximenes\", \"Anaxis\", \"Anaxos\", \"Anchialus\", \"Anchimolios\", \"Anchises\", \"Ancus\", \"Andokides\", \"Andraemon\", \"Andreas\", \"Androbulos\", \"Androcles\", \"Androdamos\", \"Androgeus\", \"Aneristos\", \"Aniketos\", \"Anisodoros\", \"Antaeus\", \"Antagoras\", \"Antemion\", \"Antenor\", \"Anthemion\", \"Antichares\", \"Antidoros\", \"Antigenes\", \"Antigonos\", \"Antikles\", \"Antilochus\", \"Antinous\", \"Antiochus\", \"Antipatris\", \"Antipatros\", \"Antiphales\", \"Antiphones\", \"Antiphus\", \"Antisthenes\", \"Anytos\", \"Anytus\", \"Apelles\", \"Apellicon\", \"Aphidnos\", \"Apisaon\", \"Apollodoros\", \"Apollophanes\", \"Apollos\", \"Aratus\", \"Arcas\", \"Arcesilaus\", \"Archagoras\", \"Archelaos\", \"Archeptolemus\", \"Archesilaus\", \"Archestratidas\", \"Archilochus\", \"Archytas\", \"Arcidamus\", \"Arcturus\", \"Areilycus\", \"Areisius\", \"Areithous\", \"Argades\", \"Argaeus\", \"Argos\", \"Aridolis\", \"Arion\", \"Ariphron\", \"Aristaeus\", \"Aristagoras\", \"Aristaios\", \"Aristandros\", \"Aristarchos\", \"Aristarchus\", \"Aristides\", \"Aristion\", \"Aristippus\", \"Aristoboulos\", \"Aristobulus\", \"Aristocles\", \"Aristocypros\", \"Aristodemos\", \"Aristogeiton\", \"Aristomachos\", \"Ariston\", \"Aristonous\", \"Aristonymos\", \"Aristophanes\", \"Aristophantes\", \"Aristos\", \"Aristotles\", \"Aristoxenus\", \"Arrabaios\", \"Arridaios\", \"Arsenios\", \"Artemas\", \"Artemidoros\", \"Artemios\", \"Artemisthenes\", \"Arybbas\", \"Asasthenes\", \"Ascalaphus\", \"Ascanius\", \"Aschines\", \"Asius\", \"Asklepios\", \"Asonides\", \"Asopodoros\", \"Asopus\", \"Asphalion\", \"Assaraeus\", \"Astacos\", \"Aster\", \"Asterion\", \"Asteropaeus\", \"Astrabacus\", \"Astyanax\", \"Athamas\", \"Athenades\", \"Athenaeus\", \"Athenion\", \"Athenodorus\", \"Atiphates\", \"Atreus\", \"Atrometos\", \"Attaginas\", \"Attaginos\", \"Attalos\", \"Atymnius\", \"Atys\", \"Audax\", \"Augias\", \"Auletes\", \"Autesion\", \"Autodikos\", \"Autolycus\", \"Autolykos\", \"Automedon\", \"Autonous\", \"Axylus\", \"Azeus\", \"Bacchides\", \"Bacchios\", \"Bacchylides\", \"Bacenor\", \"Bacis\", \"Baerius\", \"Balius\", \"Barates\", \"Bardas\", \"Basileides\", \"Basileios\", \"Basilides\", \"Bathyaes\", \"Belos\", \"Bendis\", \"Bianor\", \"Bias\", \"Bion\", \"Bisaltes\", \"Biton\", \"Blathyllos\", \"Boethus\", \"Borus\", \"Boter\", \"Briareus\", \"Briarus\", \"Brison\", \"Brygos\", \"Bucoli\", \"Bulis\", \"Burrhus\", \"Butacidas\", \"Callimachus\", \"Callimorphus\", \"Carenos\", \"Carneades\", \"Carpophorus\", \"Carpus\", \"Casambus\", \"Castor\", \"Ceas\", \"Cebriones\", \"Celeas\", \"Cephalos\", \"Cepheus\", \"Cephissos\", \"Ceyx\", \"Chabrias\", \"Chaeremon\", \"Chairophon\", \"Chalcodon\", \"Chalcon\", \"Charax\", \"Chares\", \"Charidemos\", \"Charilaus\", \"Charillos\", \"Charmides\", \"Charon\", \"Charopos\", \"Cheiron\", \"Chersis\", \"Chileos\", \"Chilon\", \"Choerilos\", \"Choeros\", \"Chremes\", \"Chremon\", \"Chremonides\", \"Chromis\", \"Chromius\", \"Chrysaor\", \"Chryses\", \"Chrysippos\", \"Chrysogones\", \"Chrysogonus\", \"Chrysolorus\", \"Cilix\", \"Cineas\", \"Cinyras\", \"Cisses\", \"Cisseus\", \"Cleades\", \"Cleandros\", \"Cleathes\", \"Cleisthenes\", \"Cleobulus\", \"Cleodaeos\", \"Cleombrotos\", \"Cleomenes\", \"Cleon\", \"Cleonicus\", \"Cleonymus\", \"Clinias\", \"Clisthenes\", \"Clonius\", \"Clytius\", \"Clytomedes\", \"Cnoethos\", \"Cobon\", \"Codros\", \"Coenus\", \"Coeranus\", \"Coes\", \"Cois\", \"Conon\", \"Copreus\", \"Cordylion\", \"Coronos\", \"Corydallos\", \"Corydon\", \"Crathis\", \"Cratinus\", \"Cratippus\", \"Cretheus\", \"Crethon\", \"Cretines\", \"Crios\", \"Croesus\", \"Cronos\", \"Cteatus\", \"Ctesippus\", \"Cuphagoras\", \"Cyberniskos\", \"Cycnus\", \"Cylon\", \"Cynaegiros\", \"Cyncus\", \"Cyneas\", \"Cyniscus\", \"Cypselos\", \"Cyrenios\", \"Cytorissos\", \"Dadaces\", \"Daedalos\", \"Daetor\", \"Damasippus\", \"Damasithymos\", \"Damasos\", \"Damastor\", \"Damian\", \"Damianos\", \"Damiskos\", \"Damoetas\", \"Damon\", \"Danaos\", \"Danaus\", \"Daphis\", \"Daphnis\", \"Dardanus\", \"Dares\", \"Davos\", \"Deinias\", \"Deinokrates\", \"Deinomenes\", \"Deiotones\", \"Deiphobus\", \"Deiphonous\", \"Deipylus\", \"Demades\", \"Demaratos\", \"Demarmenos\", \"Demas\", \"Demeas\", \"Demetrios\", \"Democedes\", \"Demodocus\", \"Demokrates\", \"Demoleon\", \"Demonax\", \"Demonous\", \"Demophlos\", \"Demosthenes\", \"Deon\", \"Derkylos\", \"Deukalion\", \"Dexicos\", \"Dexios\", \"Diactorides\", \"Diadromes\", \"Diadumenus\", \"Diagoras\", \"Dicaeus\", \"Dieneces\", \"Diocles\", \"Diodoros\", \"Diodorus\", \"Diokles\", \"Diomedes\", \"Dionysios\", \"Dionysophanes\", \"Dionysos\", \"Diophantus\", \"Diores\", \"Dioscuros\", \"Diotrephes\", \"Dismas\", \"Dithyrambos\", \"Dmetor\", \"Dolon\", \"Dolops\", \"Doreios\", \"Doreius\", \"Dorian\", \"Doriskos\", \"Doros\", \"Dorotheus\", \"Doryssos\", \"Dosithios\", \"Drimylos\", \"Dromeus\", \"Dryas\", \"Dryops\", \"Ducetius\", \"Duris\", \"Dymas\", \"Dymnos\", \"Echekrates\", \"Echelaos\", \"Echemmon\", \"Echemus\", \"Echephron\", \"Echepolus\", \"Echestratos\", \"Eetion\", \"Eioneus\", \"Eirenaios\", \"Elasus\", \"Elatos\", \"Elatreus\", \"Eleon\", \"Elephenor\", \"Elpenor\", \"Elpides\", \"Elpidius\", \"Empedocles\", \"Endios\", \"Endymion\", \"Engenes\", \"Eniopus\", \"Ennaeus\", \"Ennomus\", \"Ennychus\", \"Enops\", \"Eos\", \"Epaenetus\", \"Epaphos\", \"Epaphroditus\", \"Epeigeus\", \"Epeius\", \"Ephialtes\", \"Epicurus\", \"Epicydes\", \"Epikrates\", \"Epimenes\", \"Epiphanes\", \"Epistor\", \"Epistrophos\", \"Epitrophos\", \"Epizelos\", \"Erasistratus\", \"Eratosthenes\", \"Eratostheres\", \"Erechtheus\", \"Eretmenus\", \"Ereuthalion\", \"Erginus\", \"Ergiyios\", \"Erichthonius\", \"Erxandros\", \"Eryalus\", \"Erysichton\", \"Eryx\", \"Eryximachos\", \"Eteocles\", \"Eteokles\", \"Eteonous\", \"Euaemon\", \"Eualcidas\", \"Euanthes\", \"Euarestos\", \"Eubalus\", \"Eubulus\", \"Eucarpus\", \"Euchenor\", \"Eucleides\", \"Eudorus\", \"Eudoxsus\", \"Eudoxus\", \"Euenius\", \"Euenor\", \"Euenus\", \"Eugammon\", \"Eugenios\", \"Eugenius\", \"Euhemenis\", \"Euippus\", \"Eukles\", \"Eumaeus\", \"Eumastas\", \"Eumelus\", \"Eumenes\", \"Eumneus\", \"Eumolpus\", \"Euneas\", \"Euonomos\", \"Eupalinus\", \"Euphenes\", \"Euphorbos\", \"Euphorion\", \"Euphronios\", \"Eupolos\", \"Euripides\", \"Euryanax\", \"Eurybates\", \"Eurybiades\", \"Eurycliedes\", \"Eurydamus\", \"Eurydemon\", \"Eurydemos\", \"Euryhus\", \"Eurykrates\", \"Eurykratides\", \"Euryleon\", \"Eurylochos\", \"Eurymachos\", \"Euryphon\", \"Eurypylos\", \"Eurystenes\", \"Eurysthenes\", \"Eurystheus\", \"Eurysthios\", \"Eurythion\", \"Eurytos\", \"Eussorus\", \"Euthydemos\", \"Euthynos\", \"Eutropios\", \"Eutuches\", \"Eutychides\", \"Eutychus\", \"Evaenetos\", \"Evagoras\", \"Evandros\", \"Evanetus\", \"Evelthon\", \"Evenios\", \"Evenus\", \"Evios\", \"Exaduis\", \"Exekias\", \"Faenus\", \"Galenus\", \"Gallus\", \"Ganymedes\", \"Gauanes\", \"Geleon\", \"Gelo\", \"Gelon\", \"Gennadios\", \"Gerasimos\", \"Giorgius\", \"Glaukias\", \"Glaukos\", \"Glycon\", \"Gnipho\", \"Gordias\", \"Gorgias\", \"Gorgion\", \"Gorgos\", \"Gorgythion\", \"Gregorius\", \"Gryllus\", \"Gurgos\", \"Gylippos\", \"Gyras\", \"Gyrtias\", \"Haemon\", \"Hagias\", \"Hagnon\", \"Halisthertes\", \"Halius\", \"Harmatidas\", \"Harmocydes\", \"Harmodios\", \"Harmon\", \"Harpagos\", \"Harpalion\", \"Harpalos\", \"Harpocras\", \"Hecataeus\", \"Hegesandros\", \"Hegesistratos\", \"Hegetoridas\", \"Heirax\", \"Heiron\", \"Hektor\", \"Helenos\", \"Helgesippos\", \"Helicaon\", \"Heliodorus\", \"Helios\", \"Helle\", \"Hephaestos\", \"Herakleides\", \"Herakleitos\", \"Heraklides\", \"Hermeias\", \"Hermeros\", \"Hermippos\", \"Hermogenes\", \"Hermolaos\", \"Hermolycus\", \"Hermon\", \"Hermotimos\", \"Hero\", \"Herodes\", \"Herodianus\", \"Herodion\", \"Heromenes\", \"Hicetaon\", \"Hiero\", \"Hieronymus\", \"Hipparchos\", \"Hipparinos\", \"Hippasus\", \"Hippias\", \"Hippoklides\", \"Hippokratides\", \"Hippolytos\", \"Hippomachos\", \"Hippomenes\", \"Hippon\", \"Hipponax\", \"Hipponicus\", \"Hipponous\", \"Hippotas\", \"Hippothous\", \"Hippotion\", \"Hoiples\", \"Homeros\", \"Hyakinthos\", \"Hylas\", \"Hyllos\", \"Hyllus\", \"Hypatius\", \"Hypeirochus\", \"Hypenor\", \"Hyperenor\", \"Hyperion\", \"Hypsenor\", \"Hyrcanus\", \"Hyrtacus\", \"Hyrtius\", \"Iakchos\", \"Ialmenes\", \"Iambulus\", \"Iamus\", \"Iasos\", \"Iatragoras\", \"Iatrokles\", \"Ibanolis\", \"Ibykos\", \"Icarion\", \"Icarius\", \"Icarus\", \"Idaeus\", \"Idaios\", \"Idas\", \"Idomeneus\", \"Ilioneus\", \"Illyrius\", \"Ilus\", \"Imbrasus\", \"Imbrius\", \"Imbrus\", \"Inachos\", \"Inachus\", \"Inaros\", \"Iobates\", \"Iolaos\", \"Iollas\", \"Ion\", \"Iphiclus\", \"Iphicrates\", \"Iphikrates\", \"Iphinous\", \"Iphitos\", \"Iphitus\", \"Iros\", \"Irus\", \"Isagoras\", \"Isandros\", \"Ischenous\", \"Isidor\", \"Isidoros\", \"Ision\", \"Ismaros\", \"Ismenios\", \"Isocrates\", \"Isodemos\", \"Isokrates\", \"Itheus\", \"Itylus\", \"Itys\", \"Kadmos\", \"Kaenas\", \"Kaeneus\", \"Kalchas\", \"Kalesius\", \"Kaletor\", \"Kalliaros\", \"Kallias\", \"Kallikles\", \"Kallikrates\", \"Kallimachos\", \"Kallinicus\", \"Kallinos\", \"Kallipides\", \"Kallipos\", \"Kallisthenes\", \"Kallon\", \"Kameirus\", \"Kandaules\", \"Kannadis\", \"Kapaneus\", \"Kapys\", \"Karipos\", \"Karopophores\", \"Kasos\", \"Kassandros\", \"Kaunos\", \"Kebalinos\", \"Kebes\", \"Kekrops\", \"Keos\", \"Kephalon\", \"Kephalos\", \"Kerameikos\", \"Kerkyon\", \"Keteus\", \"Kimon\", \"Kirphis\", \"Kittos\", \"Kleitos\", \"Kleobis\", \"Kleomenes\", \"Koines\", \"Koinos\", \"Konon\", \"Koragos\", \"Korax\", \"Kosmas\", \"Krantor\", \"Krateros\", \"Kreon\", \"Krinippos\", \"Kristos\", \"Kritias\", \"Kritoboulos\", \"Kritodemos\", \"Kriton\", \"Kroisos\", \"Krokinos\", \"Ktesiphon\", \"Kyknos\", \"Kynaegeiros\", \"Kyrillos\", \"Kyrios\", \"Kyros\", \"Labdacus\", \"Labotas\", \"Laertes\", \"Lagos\", \"Laios\", \"Lamachos\", \"Lampo\", \"Lampon\", \"Lampus\", \"Lamus\", \"Laodamas\", \"Laodocus\", \"Laogonus\", \"Laomedon\", \"Laphanes\", \"Lasos\", \"Lasthenes\", \"Laureion\", \"Leagros\", \"Leandros\", \"Learchos\", \"Leicritus\", \"Leitus\", \"Lemnus\", \"Leo\", \"Leocedes\", \"Leodes\", \"Leon\", \"Leonidas\", \"Leonnatos\", \"Leontiades\", \"Leontis\", \"Leoprepes\", \"Leotychides\", \"Lethos\", \"Leucippus\", \"Leukos\", \"Lichas\", \"Licymnios\", \"Linus\", \"Loxias\", \"Lukos\", \"Lycaon\", \"Lycaretos\", \"Lycidas\", \"Lycomedes\", \"Lycophon\", \"Lycophron\", \"Lycoris\", \"Lycurgos\", \"Lycus\", \"Lydus\", \"Lygdamis\", \"Lykomedes\", \"Lykon\", \"Lynceus\", \"Lysagoras\", \"Lysandros\", \"Lysanios\", \"Lysias\", \"Lysikles\", \"Lysimachos\", \"Lysippos\", \"Lysippus\", \"Lysis\", \"Macar\", \"Macarias\", \"Machaon\", \"Maeon\", \"Maiandrios\", \"Makarios\", \"Maleos\", \"Males\", \"Mantes\", \"Mantios\", \"Marcion\", \"Marnes\", \"Maro\", \"Maron\", \"Marsyas\", \"Mastor\", \"Matullus\", \"Mausolos\", \"Mecistes\", \"Mecistios\", \"Medios\", \"Medon\", \"Medus\", \"Megadates\", \"Megakles\", \"Megakreon\", \"Megapenthes\", \"Megareus\", \"Megasthenes\", \"Megathenes\", \"Meges\", \"Megistias\", \"Meidias\", \"Melampos\", \"Melampus\", \"Melanippos\", \"Melanthios\", \"Melanthos\", \"Melas\", \"Meleagros\", \"Melegros\", \"Meles\", \"Meliboeus\", \"Melicertes\", \"Memnon\", \"Menalcas\", \"Menandros\", \"Menares\", \"Menekrates\", \"Menelaos\", \"Menestas\", \"Menesthes\", \"Menesthios\", \"Menexinos\", \"Menoeces\", \"Menoitios\", \"Mentes\", \"Mentor\", \"Meriones\", \"Mermerus\", \"Merops\", \"Mesaulius\", \"Mesthles\", \"Methodios\", \"Metiochus\", \"Meton\", \"Metrobius\", \"Metron\", \"Metrophanes\", \"Meurius\", \"Micythos\", \"Midas\", \"Midylos\", \"Mikkos\", \"Mikon\", \"Milanion\", \"Miltiades\", \"Minos\", \"Misenus\", \"Mnasyllus\", \"Mnesiphilos\", \"Mnester\", \"Mnesus\", \"Moeris\", \"Moliones\", \"Molpagoras\", \"Monoecus\", \"Monomachus\", \"Mopsius\", \"Mopsus\", \"Morsimus\", \"Morys\", \"Moschion\", \"Mulius\", \"Musaeus\", \"Musaios\", \"Mydon\", \"Mygdon\", \"Myrsinus\", \"Myrto\", \"Mys\", \"Narkissos\", \"Nastes\", \"Naubolus\", \"Naukles\", \"Nausithous\", \"Nauteus\", \"Nearchos\", \"Neleos\", \"Nelpus\", \"Neokles\", \"Neoptolemos\", \"Neritos\", \"Nestor\", \"Niarchos\", \"Nicandros\", \"Nicanor\", \"Nicholas\", \"Nicholaus\", \"Nicias\", \"Nicodromos\", \"Nicolaus\", \"Nicomachos\", \"Nicon\", \"Nikandros\", \"Nikanor\", \"Nikasios\", \"Nikeratos\", \"Nikias\", \"Nikomachos\", \"Nikomedes\", \"Nilus\", \"Nireus\", \"Nisos\", \"Noemon\", \"Nomion\", \"Nothon\", \"Numa\", \"Nyctinus\", \"Nymphicus\", \"Nymphodorus\", \"Ocealus\", \"Ochesius\", \"Ochos\", \"Ocytos\", \"Odaenathus\", \"Odius\", \"Odysseus\", \"Oeagnus\", \"Oecleus\", \"Oedipus\", \"Oenemaus\", \"Oeneus\", \"Oenomaus\", \"Oenopion\", \"Oenops\", \"Oicles\", \"Oileas\", \"Oliatos\", \"Olus\", \"Olympicus\", \"Olympiodorus\", \"Onamakritos\", \"Onesilos\", \"Onesimos\", \"Onesiphorus\", \"Onetas\", \"Onetor\", \"Onias\", \"Onomastos\", \"Ophelestes\", \"Opites\", \"Ops\", \"Orcus\", \"Orestes\", \"Oresus\", \"Orges\", \"Oribasius\", \"Orion\", \"Orius\", \"Oroites\", \"Orpheus\", \"Orsilochus\", \"Orsiphantes\", \"Orthaeus\", \"Orythroneus\", \"Otreus\", \"Otrynteus\", \"Otus\", \"Paios\", \"Palaechthon\", \"Palaemon\", \"Pallans\", \"Pallas\", \"Palmys\", \"Pammon\", \"Panaetios\", \"Panaetius\", \"Panares\", \"Pandaros\", \"Pandion\", \"Panionos\", \"Panites\", \"Pankratios\", \"Pantares\", \"Panthous\", \"Pantites\", \"Paopeus\", \"Paraebates\", \"Paris\", \"Parmenides\", \"Parmenion\", \"Parthenopaeus\", \"Pasion\", \"Pataicos\", \"Patrobas\", \"Patrobus\", \"Patroclus\", \"Patron\", \"Pausanius\", \"Pedaeus\", \"Pedasus\", \"Pedocles\", \"Peirithous\", \"Peiros\", \"Peisandros\", \"Peithon\", \"Pelagon\", \"Pelegon\", \"Peleus\", \"Pelias\", \"Pelicles\", \"Pelonus\", \"Pelopidas\", \"Peneleos\", \"Peneus\", \"Pentheus\", \"Penthylos\", \"Peolpidas\", \"Perdikkas\", \"Perdix\", \"Periandros\", \"Periclymenus\", \"Perieeres\", \"Perikles\", \"Perimedes\", \"Perimos\", \"Periphas\", \"Periphetes\", \"Periscus\", \"Peritas\", \"Periumus\", \"Peteos\", \"Peukestes\", \"Phaedo\", \"Phaenippos\", \"Phaeops\", \"Phaestus\", \"Phaidon\", \"Phaidriades\", \"Phalanthus\", \"Phalces\", \"Phalinos\", \"Phanagoras\", \"Phancis\", \"Phanes\", \"Phanias\", \"Phantias\", \"Pharnaces\", \"Phausius\", \"Phegeus\", \"Pheidias\", \"Pheidippides\", \"Pheidon\", \"Phemius\", \"Phereclus\", \"Pherecydes\", \"Pheres\", \"Pheronactus\", \"Phidias\", \"Phigaleios\", \"Philagros\", \"Philaon\", \"Phileas\", \"Philemon\", \"Philetor\", \"Philiskos\", \"Philistos\", \"Phillipos\", \"Philocion\", \"Philocrates\", \"Philoctetes\", \"Philocypros\", \"Philoetius\", \"Philogus\", \"Philokles\", \"Philokrates\", \"Philolaos\", \"Philologus\", \"Philomen\", \"Philomenes\", \"Philometer\", \"Philon\", \"Philonikos\", \"Philopoemon\", \"Philostratos\", \"Philostratus\", \"Philotas\", \"Philotectes\", \"Philoxenos\", \"Philpoemon\", \"Phineus\", \"Phintias\", \"Phlaris\", \"Phlegon\", \"Phlios\", \"Phoenix\", \"Phoibus\", \"Phoinix\", \"Phoitios\", \"Phokas\", \"Phokion\", \"Phorbas\", \"Phorcys\", \"Phormion\", \"Phormos\", \"Photius\", \"Phrixus\", \"Phrynichos\", \"Phrynikos\", \"Phrynon\", \"Phylacus\", \"Phylas\", \"Pidytes\", \"Pigres\", \"Pinder\", \"Pirithoos\", \"Pisistratos\", \"Pistias\", \"Pittacos\", \"Pittacus\", \"Pittheus\", \"Pixodarus\", \"Plades\", \"Pleistarchos\", \"Pleistos\", \"Plutarch\", \"Podaeleirus\", \"Podaleirus\", \"Podalinus\", \"Podarces\", \"Podargos\", \"Podaroes\", \"Podes\", \"Poeas\", \"Poecas\", \"Poimen\", \"Polemion\", \"Poliadas\", \"Pollio\", \"Polyas\", \"Polybius\", \"Polyctor\", \"Polydectes\", \"Polydeuces\", \"Polydius\", \"Polydoros\", \"Polyeides\", \"Polygonus\", \"Polykleitos\", \"Polykles\", \"Polykritos\", \"Polymedes\", \"Polyneices\", \"Polypemon\", \"Polyperchon\", \"Polyphemous\", \"Polyphetes\", \"Polyphontes\", \"Polypoetes\", \"Polyxeinus\", \"Ponteus\", \"Porphyrios\", \"Porphyrius\", \"Poseidon\", \"Posides\", \"Posidonios\", \"Potamon\", \"Pratinos\", \"Praxilaus\", \"Praxis\", \"Praxiteles\", \"Praxites\", \"Prexinos\", \"Priam\", \"Prinetadas\", \"Priskos\", \"Procrustes\", \"Proctus\", \"Proetus\", \"Prokles\", \"Prokopios\", \"Prokrustes\", \"Proreus\", \"Protagoras\", \"Protesilaus\", \"Prothoenor\", \"Prothous\", \"Protogenes\", \"Protus\", \"Proxenos\", \"Prymneus\", \"Prytanis\", \"Ptolemaios\", \"Ptolomaeus\", \"Pylades\", \"Pylaemenes\", \"Pylaeus\", \"Pylartes\", \"Pylas\", \"Pylenor\", \"Pyris\", \"Pyrrhus\", \"Pythagoras\", \"Pytheas\", \"Pythes\", \"Pythios\", \"Pythogenes\", \"Radamanthos\", \"Rhadamanthos\", \"Rhesus\", \"Rhexenor\", \"Ribes\", \"Rizon\", \"Sabas\", \"Sabyllos\", \"Salmoneus\", \"Sarpedon\", \"Satyros\", \"Scaios\", \"Scamandius\", \"Scamandrius\", \"Schedius\", \"Scylax\", \"Scyllias\", \"Scythas\", \"Sebastos\", \"Seisames\", \"Selagus\", \"Seldomus\", \"Selepos\", \"Seleukos\", \"Sicinnos\", \"Siculus\", \"Silanos\", \"Silenos\", \"Simmias\", \"Simo\", \"Simoisius\", \"Simonides\", \"Sinis\", \"Sinon\", \"Sippas\", \"Siromos\", \"Sisyphus\", \"Skiron\", \"Smindyrides\", \"Smintheus\", \"Socus\", \"Sophanes\", \"Sophokles\", \"Soranus\", \"Sosibios\", \"Sosicles\", \"Sosigines\", \"Sosilus\", \"Sosimenes\", \"Sosipatros\", \"Sosthenes\", \"Sostias\", \"Sostratos\", \"Spertias\", \"Speudon\", \"Speusippos\", \"Spinther\", \"Spirodion\", \"Stachys\", \"Stentor\", \"Stesagoras\", \"Stesanor\", \"Stesilaus\", \"Sthenelaus\", \"Sthenelus\", \"Stichius\", \"Stolos\", \"Strabo\", \"Strachys\", \"Stratios\", \"Straton\", \"Strophantes\", \"Strophius\", \"Strymon\", \"Syagros\", \"Syennesis\", \"Syloson\", \"Synesius\", \"Talaemenes\", \"Talaos\", \"Talaus\", \"Talos\", \"Talthybios\", \"Tarchon\", \"Taureas\", \"Tebaeus\", \"Tecton\", \"Teiresias\", \"Telamon\", \"Telekles\", \"Telemacho\", \"Telemachos\", \"Telemachus\", \"Telephos\", \"Telephus\", \"Telesinus\", \"Telesphorus\", \"Telines\", \"Tellias\", \"Tellis\", \"Telys\", \"Temenos\", \"Tenes\", \"Tenes\", \"Tenthredon\", \"Tereus\", \"Terillos\", \"Teucer\", \"Teukros\", \"Teutamos\", \"Teuthranes\", \"Teuthras\", \"Thales\", \"Thalpius\", \"Thalysios\", \"Tharybis\", \"Thaulos\", \"Thaumastus\", \"Theagenes\", \"Theages\", \"Theas\", \"Theasides\", \"Themistius\", \"Theoclymnius\", \"Theocydes\", \"Theodekles\", \"Theodoros\", \"Theodotus\", \"Theognis\", \"Theomestor\", \"Theomestros\", \"Theophanes\", \"Theophrastos\", \"Theophrastus\", \"Theophylaktos\", \"Theopompos\", \"Theopompus\", \"Theopropides\", \"Theoros\", \"Theos\", \"Theramenes\", \"Therapon\", \"Theras\", \"Thero\", \"Theron\", \"Thersandros\", \"Therseandros\", \"Thersilochus\", \"Thersites\", \"Thessalos\", \"Thestor\", \"Thettalos\", \"Thoas\", \"Thon\", \"Thorax\", \"Thrasidaios\", \"Thrasilaus\", \"Thrasius\", \"Thrasybulos\", \"Thrasyllus\", \"Thrasymedes\", \"Threspotus\", \"Thukydides\", \"Thyestes\", \"Thymoetes\", \"Thymotes\", \"Thyrsis\", \"Thyrsos\", \"Timagenidas\", \"Timagoras\", \"Timais\", \"Timanthes\", \"Timasion\", \"Timasitheus\", \"Timesithius\", \"Timnes\", \"Timoleon\", \"Timon\", \"Timonax\", \"Timotheus\", \"Timoxenos\", \"Tiro\", \"Tirynthius\", \"Tisamenos\", \"Tisandros\", \"Tisias\", \"Tithonius\", \"Titormos\", \"Tityrus\", \"Tlepolemus\", \"Tmolus\", \"Trechus\", \"Triopas\", \"Triptolemus\", \"Triton\", \"Troezenus\", \"Trophimus\", \"Trophnus\", \"Tros\", \"Trypho\", \"Turrianus\", \"Tychaeus\", \"Tydeides\", \"Tydeus\", \"Tymnes\", \"Tyndareus\", \"Tyndarios\", \"Ucalegon\", \"Vettias\", \"Xanthippos\", \"Xanthippus\", \"Xanthos\", \"Xenagoras\", \"Xenokrates\", \"Xenophanes\", \"Xenophon\", \"Xiphilinus\", \"Xuthos\", \"Xuthus\", \"Zagreus\", \"Zamolxis\", \"Zenicetes\", \"Zenodoros\", \"Zephyrinus\", \"Zethus\", \"Zeuxidamos\", \"Zeuxis\", \"Zosimus\"]], [[\"Undauntra\", \"Female\"], [\"Achaia\", \"Achradina\", \"Ada\", \"Adeia\", \"Aedon\", \"Aegiolea\", \"Aegle\", \"Aerope\", \"Aethre\", \"Agamede\", \"Aganippe\", \"Agape\", \"Agapia\", \"Agarista\", \"Agathonice\", \"Agave\", \"Aglaia\", \"Aglaurus\", \"Aikaterine\", \"Aithra\", \"Aketa\", \"Alcandre\", \"Alcestis\", \"Alcippe\", \"Alcmene\", \"Alcyone\", \"Alemene\", \"Alkmena\", \"Althaea\", \"Althaia\", \"Althea\", \"Amarhyllis\", \"Amathea\", \"Amatheia\", \"Amphithoe\", \"Amphitrite\", \"Ampinomene\", \"Amplias\", \"Anais\", \"Anastasia\", \"Andromeda\", \"Antehe\", \"Anteia\", \"Antheia\", \"Anthousa\", \"Anthusa\", \"Anticleia\", \"Antigone\", \"Antiochis\", \"Antiope\", \"Anysia\", \"Appollonia\", \"Apseudes\", \"Arete\", \"Arethusa\", \"Argeia\", \"Ariadne\", \"Arisbe\", \"Aristonike\", \"Aristophane\", \"Arsinoe\", \"Artemidora\", \"Artemisia\", \"Aspasia\", \"Astera\", \"Astyoche\", \"Astyocheia\", \"Atalanta\", \"Athis\", \"Auge\", \"Augo\", \"Autonoe\", \"Auxesia\", \"Axiothea\", \"Barbara\", \"Basiane\", \"Baucis\", \"Berenike\", \"Bito\", \"Briseis\", \"Caenis\", \"Caleope\", \"Callianeira\", \"Callianessa\", \"Calliphana\", \"Calypso\", \"Canace\", \"Castianiera\", \"Charis\", \"Chione\", \"Chiore\", \"Chloris\", \"Chryse\", \"Chryseis\", \"Chrysothemis\", \"Cilissa\", \"Cilla\", \"Circe\", \"Clio\", \"Clymene\", \"Clymere\", \"Colubra\", \"Corythia\", \"Cratais\", \"Creusa\", \"Crisa\", \"Ctimene\", \"Cybele\", \"Cydippe\", \"Cymodoce\", \"Cymothoe\", \"Cyrene\", \"Cythereia\", \"Cytheris\", \"Damaris\", \"Damia\", \"Deianeira\", \"Deineira\", \"Deiphobe\", \"Deipyle\", \"Delias\", \"Demetria\", \"Demophile\", \"Dexamene\", \"Dianeme\", \"Diomede\", \"Dione\", \"Dirce\", \"Doris\", \"Dorothea\", \"Doto\", \"Drosis\", \"Dynamene\", \"Egeria\", \"Egina\", \"Eidothee\", \"Eileithyia\", \"Elcmene\", \"Electra\", \"Elpir\", \"Endeis\", \"Enyo\", \"Eos\", \"Epicaste\", \"Eriboea\", \"Erigone\", \"Eriopis\", \"Eriphyle\", \"Eris\", \"Eucarpia\", \"Eudokia\", \"Eunice\", \"Euodias\", \"Euphro\", \"Euphrosyne\", \"Europa\", \"Eurycleia\", \"Eurydike\", \"Eurynome\", \"Evadne\", \"Galatea\", \"Glauce\", \"Glyke\", \"Gorgo\", \"Gygaea\", \"Haidee\", \"Halie\", \"Harmodias\", \"Harmonia\", \"Hecuba\", \"Hekabe\", \"Hekaline\", \"Hekate\", \"Helice\", \"Helike\", \"Heliodora\", \"Hellanike\", \"Helle\", \"Hermine\", \"Hermione\", \"Hero\", \"Herophile\", \"Hesione\", \"Hilaera\", \"Hippodameia\", \"Hippodamia\", \"Hippolyta\", \"Hypsipyle\", \"Hyrmina\", \"Iaera\", \"Ianeira\", \"Ianessa\", \"Ianthe\", \"Ino\", \"Iola\", \"Iolanthe\", \"Iole\", \"Iomene\", \"Ione\", \"Iphianassa\", \"Iphigenia\", \"Iphimedeia\", \"Iphis\", \"Iphitheme\", \"Irene\", \"Iris\", \"Isadora\", \"Ismene\", \"Issa\", \"Jocasta\", \"Kallisto\", \"Kallixeina\", \"Kassandra\", \"Katana\", \"Katina\", \"Kephissa\", \"Kharmion\", \"Khloris\", \"Kleio\", \"Kleopatra\", \"Klymene\", \"Klytemnestra\", \"Koritto\", \"Kydilla\", \"Kynna\", \"Kynthia\", \"Kypris\", \"Kyra\", \"Labda\", \"Lais\", \"Lalage\", \"Lampetie\", \"Lampito\", \"Lanike\", \"Laodameia\", \"Laodamia\", \"Laodice\", \"Laothoe\", \"Lasthena\", \"Latona\", \"Leda\", \"Lede\", \"Leto\", \"Leucothea\", \"Limnoreia\", \"Lois\", \"Lyra\", \"Maeonia\", \"Maera\", \"Maia\", \"Maiandria\", \"Marpessa\", \"Medea\", \"Medesicaste\", \"Megaera\", \"Megara\", \"Megare\", \"Melanie\", \"Melantho\", \"Melissa\", \"Melita\", \"Melite\", \"Menelaia\", \"Merope\", \"Metis\", \"Metriche\", \"Milo\", \"Milto\", \"Molpadia\", \"Monima\", \"Monime\", \"Mykale\", \"Myrine\", \"Nausicaa\", \"Neaera\", \"Nemerte\", \"Nephele\", \"Nesaea\", \"Nicopolis\", \"Nikaia\", \"Nikasepolis\", \"Niko\", \"Niobe\", \"Nysa\", \"Oenone\", \"Oitane\", \"Olympias\", \"Omphale\", \"Oreithuia\", \"Oreithyia\", \"Orithyia\", \"Orthia\", \"Otonia\", \"Pales\", \"Panope\", \"Panora\", \"Parthenia\", \"Parthenope\", \"Pasiphae\", \"Pelopia\", \"Penelope\", \"Penthesilea\", \"Percalus\", \"Perialla\", \"Periboea\", \"Pero\", \"Perse\", \"Persephone\", \"Persis\", \"Pervica\", \"Pervinca\", \"Phaedra\", \"Phaedre\", \"Phaethusa\", \"Phaia\", \"Pherenike\", \"Pherusa\", \"Phigaleia\", \"Philea\", \"Philinna\", \"Philomache\", \"Philomela\", \"Philona\", \"Phoebe\", \"Phryne\", \"Phylace\", \"Phylia\", \"Phyllis\", \"Phylo\", \"Phylomedusa\", \"Podarge\", \"Polycaste\", \"Polydamna\", \"Polydora\", \"Polymede\", \"Polyxena\", \"Procne\", \"Procris\", \"Prone\", \"Proto\", \"Protogonia\", \"Psamathe\", \"Psyche\", \"Pylia\", \"Pyrrha\", \"Pythias\", \"Raisa\", \"Rhea\", \"Rhene\", \"Rhoda\", \"Rhode\", \"Rhodope\", \"Roxane\", \"Sappho\", \"Scylla\", \"Sebasteia\", \"Semele\", \"Sophia\", \"Sotera\", \"Speio\", \"Stheneboea\", \"Stratonice\", \"Tecmessa\", \"Telephassa\", \"Thais\", \"Thalassa\", \"Thaleia\", \"Theano\", \"Thebe\", \"Thelma\", \"Themis\", \"Theodotis\", \"Theophane\", \"Theophania\", \"Theophano\", \"Theresa\", \"Thessala\", \"Thessalonike\", \"Thetis\", \"Thisbe\", \"Thyia\", \"Timandra\", \"Timo\", \"Tryphena\", \"Tryphosa\", \"Tyro\", \"Xanthe\", \"Xanthippe\", \"Xantippe\", \"Xene\", \"Xenophile\", \"Zenobia\", \"Zita\", \"Zoe\"]], [[\"Arboria\", \"Male\"], [\"Adam\", \"Geoffrey\", \"Gilbert\", \"Henry\", \"Hugh\", \"John\", \"Nicholas\", \"Peter\", \"Ralf\", \"Richard\", \"Robert\", \"Roger\", \"Simon\", \"Thomas\", \"Walter\", \"William\"]], [[\"Arboria\", \"Female\"], [\"Agnes\", \"Alice\", \"Avice\", \"Beatrice\", \"Cecily\", \"Emma\", \"Isabella\", \"Joan\", \"Juliana\", \"Margery\", \"Matilda\", \"Rohesia\"]], [[\"Arboria\", \"Last\"], [\"Achard\", \"Addinell\", \"Adeney\", \"Aguilon\", \"Albelin\", \"Alevi\", \"Alis\", \"Altard\", \"Ansgot\", \"Anzeray\", \"Arundel\", \"Aschuill\", \"Asselin\", \"Auber\", \"Aubert\", \"Auffrye\", \"Aungier\", \"Auvray\", \"Azor\", \"Bachiler\", \"Baignard\", \"Bailleul\", \"Bainard\", \"Baliol\", \"Ballard\", \"Barkentin\", \"Basnage\", \"Basset\", \"Baudry\", \"Baujot\", \"Bauldry\", \"Bauquemare\", \"Bavent\", \"Beaumanoir\", \"Beaumarchais\", \"Beaumont\", \"Beauvallet\", \"Bele\", \"Belet\", \"Bellecote\", \"Belmis\", \"Benoist\", \"Beringar\", \"Berners\", \"Bertran\", \"Bigot\", \"Blancbaston\", \"Blangi\", \"Blosbeville\", \"Blouet\", \"Bohon\", \"Boisivon\", \"Boislevesque\", \"Boissel\", \"Boivin\", \"Bolam\", \"Bolbec\", \"Bondeville\", \"Bonel\", \"Bonenffant\", \"Boneth\", \"Bonvalet\", \"Bordel\", \"Bosanquet\", \"Bosc\", \"Bosiet\", \"Bossard\", \"Bostel\", \"Boteler\", \"Boterel\", \"Botin\", \"Bouchard\", \"Bourchier\", \"Bourdekin\", \"Bourdet\", \"Bourneville\", \"Bradwardine\", \"Brai\", \"Braund\", \"Brebeuf\", \"Brereton\", \"Bretel\", \"Breteuil\", \"Bretteville\", \"Brimou\", \"Brinon\", \"Briouse\", \"Briqueville\", \"Brix\", \"Buci\", \"Budi\", \"Bulli\", \"Burci\", \"Burguet\", \"Buron\", \"Bursigni\", \"Busnois\", \"Busquent\", \"Caen\", \"Cailli\", \"Caillot\", \"Cairon\", \"Calmette\", \"Cambrai\", \"Campion\", \"Canaigres\", \"Canouville\", \"Caradas\", \"Carbonnel\", \"Cardon\", \"Cardonell\", \"Carnet\", \"Carteret\", \"Castillon\", \"Caunter\", \"Cavelier\", \"Ceauce\", \"Cely\", \"Challenge\", \"Chandos\", \"Chartres\", \"Chauncy\", \"Cheney\", \"Cherbourg\", \"Cioches\", \"Claville\", \"Clerinell\", \"Clinchamps\", \"Coliar\", \"Colleville\", \"Colombelles\", \"Colombieres\", \"Comyn\", \"Conteville\", \"Corbet\", \"Corbon\", \"Cormeilles\", \"Corneilles\", \"Corviser\", \"Cosin\", \"Couci\", \"Couer\", \"Courcelle\", \"Courcelles\", \"Courci\", \"Courcon\", \"Courcy\", \"Courseume\", \"Craon\", \"Crevecoeur\", \"Croc\", \"Cruel\", \"Cugey\", \"Culai\", \"Cumin\", \"Curteys\", \"Dalyngridge\", \"Damours\", \"Danneville\", \"Danvers\", \"Darcy\", \"Darell\", \"Daunger\", \"Deschamps\", \"Desmares\", \"Destain\", \"Digby\", \"Ditton\", \"Douai\", \"Dreux\", \"Droullin\", \"Druel\", \"Dubosc\", \"Dufay\", \"Dufour\", \"Duhamel\", \"Dumont\", \"Dupasquier\", \"Duquesne\", \"Durandal\", \"Durerie\", \"Durjardin\", \"Durville\", \"Duval\", \"Dyel\", \"Ecouland\", \"Elers\", \"Emory\", \"Engerrand\", \"Erquemboure\", \"Espec\", \"Esteney\", \"Evelyn\", \"Eveque\", \"Faceby\", \"Faintree\", \"Falaise\", \"Fantosme\", \"Faucon\", \"Fecamp\", \"Fergant\", \"Ferrieres\", \"Feu\", \"Fitzalan\", \"Fitzherbert\", \"Fitzhugh\", \"Fitzroy\", \"Flambard\", \"Folet\", \"Foliot\", \"Fonnereau\", \"Fontemai\", \"Fossard\", \"Fougeres\", \"Fourneaux\", \"Framan\", \"Fresle\", \"Fribois\", \"Froissart\", \"Fromentin\", \"Furnival\", \"Gael\", \"Gand\", \"Garin\", \"Gaveston\", \"Gibard\", \"Giffard\", \"Gillain\", \"Gilpin\", \"Giscard\", \"Glanville\", \"Godart\", \"Godefroy\", \"Gomboult\", \"Gouel\", \"Goulaffre\", \"Gournai\", \"Grai\", \"Grancourt\", \"Grentemesnil\", \"Grenteville\", \"Greslet\", \"Griffin\", \"Grimoult\", \"Grouchet\", \"Groulart\", \"Guernon\", \"Gueron\", \"Guideville\", \"Guiffart\", \"Guildersleeve\", \"Guinand\", \"Gurney\", \"Guyot\", \"Hachet\", \"Halacre\", \"Hamage\", \"Harcourt\", \"Haute\", \"Hauville\", \"Hendry\", \"Herbard\", \"Heriet\", \"Hewse\", \"Hodenc\", \"Holland\", \"Hotot\", \"Hue\", \"Hugonin\", \"Hynde\", \"Ide\", \"Jolland\", \"Jubert\", \"Laci\", \"Lallement\", \"Lanquetot\", \"Lefebre\", \"Letre\", \"Levasseur\", \"Lhuillier\", \"Libourg\", \"Ligonier\", \"Linesi\", \"Lisieux\", \"Loges\", \"Lorz\", \"Loucelles\", \"Louet\", \"Louvet\", \"Lovet\", \"Lucy\", \"Ludel\", \"Lynom\", \"Machault\", \"Machel\", \"Maci\", \"Maignart\", \"Malet\", \"Mallebisse\", \"Malleville\", \"Mallilie\", \"Mallory\", \"Malvallet\", \"Malveisin\", \"Maminot\", \"Mandeville\", \"Manneilli\", \"Mansel\", \"Mantel\", \"Marchmain\", \"Marci\", \"Marescot\", \"Margas\", \"Mariage\", \"Marillac\", \"Marisco\", \"Martel\", \"Mathan\", \"Maubenc\", \"Maudit\", \"Mauduit\", \"Maunsell\", \"Maurouard\", \"Mautravers\", \"Maynet\", \"Medley\", \"Mercier\", \"Meri\", \"Merteberge\", \"Mesnage\", \"Meulan\", \"Meules\", \"Meverel\", \"Middleton\", \"Mobec\", \"Moion\", \"Monceaux\", \"Montacute\", \"Montaigu\", \"Montbrai\", \"Montfiquet\", \"Montfort\", \"Montgomery\", \"Montgommeri\", \"Moron\", \"Morphew\", \"Mortagne\", \"Mortain\", \"Mortemer\", \"Mortmain\", \"Moyaux\", \"Mucedent\", \"Munneville\", \"Murdac\", \"Musard\", \"Musart\", \"Mussegros\", \"Mustel\", \"Nelond\", \"Neot\", \"Nesdin\", \"Neufmarche\", \"Neuville\", \"Noyers\", \"Omand\", \"Orlebar\", \"Ormond\", \"Osmond\", \"Osmont\", \"Ouistreham\", \"Painel\", \"Paixdecouer\", \"Pancevolt\", \"Pantoul\", \"Papelion\", \"Papon\", \"Paris\", \"Parry\", \"Parthenai\", \"Paschal\", \"Pasquier\", \"Pastforeire\", \"Patris\", \"Paumera\", \"Peccoth\", \"Peche\", \"Peis\", \"Pennant\", \"Perci\", \"Perroy\", \"Petremol\", \"Peveril\", \"Pevrel\", \"Picard\", \"Picot\", \"Picvini\", \"Pierrepont\", \"Pinel\", \"Pipin\", \"Pippery\", \"Piquiri\", \"Pistres\", \"Pithou\", \"Plucknet\", \"Poer\", \"Poignant\", \"Poillei\", \"Pointel\", \"Pont\", \"Pontchardon\", \"Port\", \"Postel\", \"Poussin\", \"Prestcote\", \"Puchot\", \"Quesnel\", \"Quincarnon\", \"Raimbeaucourt\", \"Rainecourt\", \"Raleigh\", \"Rames\", \"Raoullin\", \"Rassent\", \"Ravenot\", \"Rennes\", \"Renold\", \"Restault\", \"Reviers\", \"Riebou\", \"Roard\", \"Rocque\", \"Roger\", \"Romenel\", \"Ros\", \"Rosai\", \"Rou\", \"Roussel\", \"Runeville\", \"Sacquerville\", \"Saisset\", \"Sauvigni\", \"Scolland\", \"Senarpont\", \"Senlis\", \"Simnel\", \"Sollers\", \"Somneri\", \"Sourdeval\", \"Strivelyn\", \"Stukely\", \"Tabraham\", \"Taillebois\", \"Taillepied\", \"Talvace\", \"Tessel\", \"Thaon\", \"Theroulde\", \"Thibault\", \"Thiboust\", \"Thorel\", \"Tibon\", \"Tilly\", \"Tinel\", \"Tirel\", \"Toclive\", \"Torteval\", \"Touchet\", \"Tourlaville\", \"Tourmente\", \"Tournai\", \"Tournebulle\", \"Tournebut\", \"Tourneville\", \"Toustain\", \"Tranchant\", \"Trelli\", \"Tulles\", \"Urry\", \"Valance\", \"Valognes\", \"Vastel\", \"Vatteville\", \"Vaubadon\", \"Vauville\", \"Vaux\", \"Vavassour\", \"Veci\", \"Venois\", \"Ventris\", \"Ver\", \"Verdun\", \"Vernold\", \"Vernon\", \"Verrall\", \"Vesci\", \"Vesli\", \"Veteripont\", \"Vieuxpont\", \"Villehardain\", \"Villon\", \"Vipont\", \"Vitalis\", \"Vivers\", \"Viville\", \"Voisin\", \"Wadard\", \"Warci\", \"Watteau\", \"Werables\", \"Willoughby\", \"Wissant\", \"Ygou\", \"Beauchamp\", \"Bigod\", \"Bohun\", \"Boleyn\", \"Cecil\", \"Courteney\", \"Dacre\", \"Devereux\", \"Dudley\", \"Fairfax\", \"Ferrers\", \"Fiennes\", \"Fitton\", \"Herbert\", \"Howard\", \"Lovell\", \"Montague\", \"Mortimer\", \"Mowbray\", \"Neville\", \"Percy\", \"Quincey\", \"Russell\", \"Sidney\", \"Stafford\", \"Stanley\", \"Talbot\", \"Umfraville\", \"Vane\", \"Vaughan\", \"Woodville\"]], [[\"Mordor\", \"Male\"], [\"Gronk\", \"Sponk\", \"Spud\", \"Thud\", \"Blat\", \"Kreegah\", \"Krock\", \"Skar\", \"Smash\", \"Szeth\", \"Vallano\"]]]);\r\n\r\n","import { toString, Record, Union } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Types.js\";\r\nimport { record_type, list_type, string_type, int32_type, union_type } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Reflection.js\";\r\nimport { tail, head, isEmpty, cons, empty, map, singleton as singleton_1, ofArray } from \"../ShiningSword/fable_modules/fable-library.3.6.2/List.js\";\r\nimport { confer, op_EqualsEqualsGreater, Choice$1, fresh, rulesOf, Setting$1$reflection } from \"./DerivedTraits.fs.js\";\r\nimport { singleton, append, delay, toList } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Seq.js\";\r\nimport { FSharpSet__Contains, ofSeq } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Set.js\";\r\nimport { rangeChar } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Range.js\";\r\nimport { comparePrimitives } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Util.js\";\r\nimport { isLetterOrDigit } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Char.js\";\r\nimport { chooseRandom } from \"./Common.fs.js\";\r\nimport { tryFind } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Map.js\";\r\nimport { nameLists } from \"./Onomastikon.fs.js\";\r\n\r\nexport class Stat extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Str\", \"Dex\", \"Con\", \"Int\", \"Wis\", \"Cha\"];\r\n    }\r\n}\r\n\r\nexport function Stat$reflection() {\r\n    return union_type(\"Domain.Character.Stat\", [], Stat, () => [[], [], [], [], [], []]);\r\n}\r\n\r\nexport function Stat_get_All() {\r\n    return ofArray([new Stat(0), new Stat(1), new Stat(2), new Stat(3), new Stat(4), new Stat(5)]);\r\n}\r\n\r\nexport class Trait extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"PC\", \"Race\", \"Human\", \"Elf\", \"Dwarf\", \"WoodElf\", \"HighElf\", \"DrowElf\", \"HillDwarf\", \"MountainDwarf\", \"StatMod\", \"Feat\", \"GWM\", \"Tough\", \"Lucky\", \"Mobile\", \"HeavyArmorMaster\", \"BonusWizardCantrip\", \"Cantrip\", \"MaskOfTheWild\", \"Faster\", \"SunlightSensitivity\", \"ImprovedDarkvision\", \"SwordBowBonus\", \"ShieldProficiency\", \"LightArmorProficiency\", \"MediumArmorProficiency\", \"HeavyArmorProficiency\", \"ExtraHPPerLevel\"];\r\n    }\r\n}\r\n\r\nexport function Trait$reflection() {\r\n    return union_type(\"Domain.Character.Trait\", [], Trait, () => [[], [], [], [], [], [], [], [], [], [], [[\"Item1\", Stat$reflection()], [\"Item2\", int32_type]], [], [], [], [], [], [], [], [[\"Item\", string_type]], [], [[\"Item\", int32_type]], [], [], [[\"Item\", int32_type]], [], [], [], [], [[\"Item\", int32_type]]]);\r\n}\r\n\r\nexport class Sex extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Male\", \"Female\", \"Neither\"];\r\n    }\r\n}\r\n\r\nexport function Sex$reflection() {\r\n    return union_type(\"Domain.Character.Sex\", [], Sex, () => [[], [], []]);\r\n}\r\n\r\nexport class CharacterSheet extends Record {\r\n    constructor(name, nationalOrigin, sex, Str, Dex, Con, Int, Wis, Cha, originalRolls, traits) {\r\n        super();\r\n        this.name = name;\r\n        this.nationalOrigin = nationalOrigin;\r\n        this.sex = sex;\r\n        this.Str = (Str | 0);\r\n        this.Dex = (Dex | 0);\r\n        this.Con = (Con | 0);\r\n        this.Int = (Int | 0);\r\n        this.Wis = (Wis | 0);\r\n        this.Cha = (Cha | 0);\r\n        this.originalRolls = originalRolls;\r\n        this.traits = traits;\r\n    }\r\n}\r\n\r\nexport function CharacterSheet$reflection() {\r\n    return record_type(\"Domain.Character.CharacterSheet\", [], CharacterSheet, () => [[\"name\", string_type], [\"nationalOrigin\", string_type], [\"sex\", Sex$reflection()], [\"Str\", int32_type], [\"Dex\", int32_type], [\"Con\", int32_type], [\"Int\", int32_type], [\"Wis\", int32_type], [\"Cha\", int32_type], [\"originalRolls\", list_type(int32_type)], [\"traits\", Setting$1$reflection(Trait$reflection())]]);\r\n}\r\n\r\nexport const feats = ofArray([new Trait(12), new Trait(13), new Trait(14), new Trait(15), new Trait(16)]);\r\n\r\nexport const rules = rulesOf(toList(delay(() => {\r\n    let inputRecord;\r\n    return append(singleton([new Trait(0), (inputRecord = fresh(singleton_1(new Trait(1))), new Choice$1(inputRecord.options, inputRecord.numberAllowed, inputRecord.mustBeDistinct, true, true))]), delay(() => append(singleton(op_EqualsEqualsGreater(new Trait(1), ofArray([new Trait(3), new Trait(2), new Trait(4)]))), delay(() => {\r\n        let inputRecord_1;\r\n        return append(singleton([new Trait(2), (inputRecord_1 = fresh(map((x) => (new Trait(10, x, 1)), ofArray([new Stat(0), new Stat(1), new Stat(2), new Stat(3), new Stat(4), new Stat(5)]))), new Choice$1(inputRecord_1.options, 2, true, inputRecord_1.elideFromDisplayAndSummary, inputRecord_1.autopick))]), delay(() => append(singleton(confer(new Trait(2), singleton_1(new Trait(11)))), delay(() => append(singleton(op_EqualsEqualsGreater(new Trait(11), feats)), delay(() => append(singleton(confer(new Trait(3), ofArray([new Trait(23, 1), new Trait(10, new Stat(1), 2)]))), delay(() => append(singleton(op_EqualsEqualsGreater(new Trait(3), ofArray([new Trait(6), new Trait(5), new Trait(7)]))), delay(() => append(singleton(confer(new Trait(6), singleton_1(new Trait(17)))), delay(() => append(singleton(confer(new Trait(5), ofArray([new Trait(19), new Trait(20, 5)]))), delay(() => append(singleton(confer(new Trait(7), ofArray([new Trait(22), new Trait(21)]))), delay(() => append(singleton(op_EqualsEqualsGreater(new Trait(17), ofArray([new Trait(18, \"Fire Bolt\"), new Trait(18, \"Minor Illusion\"), new Trait(18, \"Blade Ward\"), new Trait(18, \"Toll the Dead\")]))), delay(() => append(singleton(confer(new Trait(4), ofArray([new Trait(10, new Stat(2), 2), new Trait(20, -5)]))), delay(() => append(singleton(op_EqualsEqualsGreater(new Trait(4), ofArray([new Trait(8), new Trait(9)]))), delay(() => append(singleton(confer(new Trait(8), ofArray([new Trait(28, 1), new Trait(10, new Stat(4), 1)]))), delay(() => singleton(confer(new Trait(9), singleton_1(new Trait(26))))))))))))))))))))))))))));\r\n    }))));\r\n})));\r\n\r\nexport function uncamel(str) {\r\n    const caps = ofSeq(toList(rangeChar(\"A\", \"Z\")), {\r\n        Compare: (x, y) => comparePrimitives(x, y),\r\n    });\r\n    const lower = ofSeq(toList(rangeChar(\"a\", \"z\")), {\r\n        Compare: (x_1, y_1) => comparePrimitives(x_1, y_1),\r\n    });\r\n    let spaceNeededBefore = empty();\r\n    let inWord = true;\r\n    for (let i = 1; i <= (str.length - 1); i++) {\r\n        const matchValue = str[i];\r\n        if (matchValue === \" \") {\r\n            inWord = false;\r\n        }\r\n        else if ((FSharpSet__Contains(caps, matchValue) && inWord) && ((!FSharpSet__Contains(caps, str[i - 1])) ? true : (((i + 1) < str.length) && FSharpSet__Contains(lower, str[i + 1])))) {\r\n            spaceNeededBefore = cons(i, spaceNeededBefore);\r\n        }\r\n        else if (isLetterOrDigit(matchValue)) {\r\n            inWord = true;\r\n        }\r\n    }\r\n    const recur = (workingCopy_mut, spacesNeeded_mut) => {\r\n        recur:\r\n        while (true) {\r\n            const workingCopy = workingCopy_mut, spacesNeeded = spacesNeeded_mut;\r\n            if (!isEmpty(spacesNeeded)) {\r\n                const index = head(spacesNeeded) | 0;\r\n                workingCopy_mut = (`${workingCopy.slice(0, (index - 1) + 1)} ${workingCopy.slice(index, workingCopy.length)}`);\r\n                spacesNeeded_mut = tail(spacesNeeded);\r\n                continue recur;\r\n            }\r\n            else {\r\n                return workingCopy;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return recur(str, spaceNeededBefore);\r\n}\r\n\r\nexport function makeName() {\r\n    const sex = chooseRandom([new Sex(0), new Sex(1)]);\r\n    const nationOfOrigin = chooseRandom([\"Tir na n\\u0027Og\", \"Abysia\", \"Kailasa\", \"Ermor\", \"Undauntra\", \"Arboria\", \"Mordor\"]);\r\n    const chooseFromLists = (_arg1_mut) => {\r\n        chooseFromLists:\r\n        while (true) {\r\n            const _arg1 = _arg1_mut;\r\n            if (isEmpty(_arg1)) {\r\n                return \"\";\r\n            }\r\n            else {\r\n                const matchValue = tryFind([nationOfOrigin, head(_arg1)], nameLists);\r\n                if (matchValue == null) {\r\n                    _arg1_mut = tail(_arg1);\r\n                    continue chooseFromLists;\r\n                }\r\n                else {\r\n                    return chooseRandom(matchValue);\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const firstName = chooseFromLists(singleton_1(toString(sex)));\r\n    if (firstName === \"\") {\r\n        return makeName();\r\n    }\r\n    else {\r\n        const lastName = (name) => {\r\n            const surname = chooseFromLists(ofArray([\"Last\", `Cognomen${sex}`, `Last${sex}`]));\r\n            return (`${name} ${surname}`).trim();\r\n        };\r\n        const prefix = (name_1) => (`${chooseRandom([\"Insanity\", \"Black\", \"Merciless\", \"Gentle\", \"Calamity\"])} ${name_1}`).trim();\r\n        const title = (name_2) => (`${name_2}, ${chooseRandom([\"Defender of Humanity\", \"Last of the Dwarflords\", \"the Accursed\", \"Esquire\", \"the Undying\"])}`).trim();\r\n        return [sex, nationOfOrigin, chooseRandom([prefix, lastName, (arg_2) => title(lastName(arg_2)), (arg_1) => title(lastName(prefix(arg_1)))])(firstName)];\r\n    }\r\n}\r\n\r\n","import { equals, toIterator, getEnumerator } from \"./Util.js\";\r\nimport { iterate, map, delay, toArray, iterateIndexed, concat } from \"./Seq.js\";\r\nimport { FSharpRef } from \"./Types.js\";\r\nimport { class_type } from \"./Reflection.js\";\r\nimport { getItemFromDict, tryGetValue } from \"./MapUtil.js\";\r\nimport { format } from \"./String.js\";\r\n\r\nexport class Dictionary {\r\n    constructor(pairs, comparer) {\r\n        const this$ = new FSharpRef(null);\r\n        this.comparer = comparer;\r\n        this$.contents = this;\r\n        this.hashMap = (new Map([]));\r\n        this[\"init@8-1\"] = 1;\r\n        const enumerator = getEnumerator(pairs);\r\n        try {\r\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                const pair = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                Dictionary__Add_5BDDA1(this$.contents, pair[0], pair[1]);\r\n            }\r\n        }\r\n        finally {\r\n            enumerator.Dispose();\r\n        }\r\n    }\r\n    get [Symbol.toStringTag]() {\r\n        return \"Dictionary\";\r\n    }\r\n    toJSON(_key) {\r\n        const this$ = this;\r\n        return Array.from(this$);\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const this$ = this;\r\n        return getEnumerator(this$);\r\n    }\r\n    GetEnumerator() {\r\n        const this$ = this;\r\n        return getEnumerator(concat(this$.hashMap.values()));\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](item) {\r\n        const this$ = this;\r\n        Dictionary__Add_5BDDA1(this$, item[0], item[1]);\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\r\n        const this$ = this;\r\n        Dictionary__Clear(this$);\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](item) {\r\n        const this$ = this;\r\n        const matchValue = Dictionary__TryFind_2B595(this$, item[0]);\r\n        let pattern_matching_result;\r\n        if (matchValue != null) {\r\n            if (equals(matchValue[1], item[1])) {\r\n                pattern_matching_result = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result = 1;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return true;\r\n            }\r\n            case 1: {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](array, arrayIndex) {\r\n        const this$ = this;\r\n        iterateIndexed((i, e) => {\r\n            array[arrayIndex + i] = e;\r\n        }, this$);\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\r\n        const this$ = this;\r\n        return Dictionary__get_Count(this$) | 0;\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\r\n        return false;\r\n    }\r\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](item) {\r\n        const this$ = this;\r\n        const matchValue = Dictionary__TryFind_2B595(this$, item[0]);\r\n        if (matchValue != null) {\r\n            if (equals(matchValue[1], item[1])) {\r\n                Dictionary__Remove_2B595(this$, item[0]);\r\n            }\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    [\"System.Collections.Generic.IDictionary`2.Add5BDDA1\"](key, value) {\r\n        const this$ = this;\r\n        Dictionary__Add_5BDDA1(this$, key, value);\r\n    }\r\n    [\"System.Collections.Generic.IDictionary`2.ContainsKey2B595\"](key) {\r\n        const this$ = this;\r\n        return Dictionary__ContainsKey_2B595(this$, key);\r\n    }\r\n    [\"System.Collections.Generic.IDictionary`2.get_Item2B595\"](key) {\r\n        const this$ = this;\r\n        return Dictionary__get_Item_2B595(this$, key);\r\n    }\r\n    [\"System.Collections.Generic.IDictionary`2.set_Item5BDDA1\"](key, v) {\r\n        const this$ = this;\r\n        Dictionary__set_Item_5BDDA1(this$, key, v);\r\n    }\r\n    [\"System.Collections.Generic.IDictionary`2.get_Keys\"]() {\r\n        const this$ = this;\r\n        return toArray(delay(() => map((pair) => pair[0], this$)));\r\n    }\r\n    [\"System.Collections.Generic.IDictionary`2.Remove2B595\"](key) {\r\n        const this$ = this;\r\n        return Dictionary__Remove_2B595(this$, key);\r\n    }\r\n    [\"System.Collections.Generic.IDictionary`2.TryGetValue23A0B95A\"](key, value) {\r\n        const this$ = this;\r\n        const matchValue = Dictionary__TryFind_2B595(this$, key);\r\n        if (matchValue != null) {\r\n            const pair = matchValue;\r\n            value.contents = pair[1];\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    [\"System.Collections.Generic.IDictionary`2.get_Values\"]() {\r\n        const this$ = this;\r\n        return toArray(delay(() => map((pair) => pair[1], this$)));\r\n    }\r\n    get size() {\r\n        const this$ = this;\r\n        return Dictionary__get_Count(this$) | 0;\r\n    }\r\n    clear() {\r\n        const this$ = this;\r\n        Dictionary__Clear(this$);\r\n    }\r\n    delete(k) {\r\n        const this$ = this;\r\n        return Dictionary__Remove_2B595(this$, k);\r\n    }\r\n    entries() {\r\n        const this$ = this;\r\n        return map((p) => [p[0], p[1]], this$);\r\n    }\r\n    get(k) {\r\n        const this$ = this;\r\n        return Dictionary__get_Item_2B595(this$, k);\r\n    }\r\n    has(k) {\r\n        const this$ = this;\r\n        return Dictionary__ContainsKey_2B595(this$, k);\r\n    }\r\n    keys() {\r\n        const this$ = this;\r\n        return map((p) => p[0], this$);\r\n    }\r\n    set(k, v) {\r\n        const this$ = this;\r\n        Dictionary__set_Item_5BDDA1(this$, k, v);\r\n        return this$;\r\n    }\r\n    values() {\r\n        const this$ = this;\r\n        return map((p) => p[1], this$);\r\n    }\r\n    forEach(f, thisArg) {\r\n        const this$ = this;\r\n        iterate((p) => {\r\n            f(p[1], p[0], this$);\r\n        }, this$);\r\n    }\r\n}\r\n\r\nexport function Dictionary$reflection(gen0, gen1) {\r\n    return class_type(\"Fable.Collections.Dictionary\", [gen0, gen1], Dictionary);\r\n}\r\n\r\nexport function Dictionary_$ctor_6623D9B3(pairs, comparer) {\r\n    return new Dictionary(pairs, comparer);\r\n}\r\n\r\nfunction Dictionary__TryFindIndex_2B595(this$, k) {\r\n    const h = this$.comparer.GetHashCode(k) | 0;\r\n    let matchValue;\r\n    let outArg = null;\r\n    matchValue = [tryGetValue(this$.hashMap, h, new FSharpRef(() => outArg, (v) => {\r\n        outArg = v;\r\n    })), outArg];\r\n    if (matchValue[0]) {\r\n        return [true, h, matchValue[1].findIndex((pair) => this$.comparer.Equals(k, pair[0]))];\r\n    }\r\n    else {\r\n        return [false, h, -1];\r\n    }\r\n}\r\n\r\nexport function Dictionary__TryFind_2B595(this$, k) {\r\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\r\n    let pattern_matching_result;\r\n    if (matchValue[0]) {\r\n        if (matchValue[2] > -1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return getItemFromDict(this$.hashMap, matchValue[1])[matchValue[2]];\r\n        }\r\n        case 1: {\r\n            return void 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function Dictionary__get_Comparer(this$) {\r\n    return this$.comparer;\r\n}\r\n\r\nexport function Dictionary__Clear(this$) {\r\n    this$.hashMap.clear();\r\n}\r\n\r\nexport function Dictionary__get_Count(this$) {\r\n    let count = 0;\r\n    let enumerator = getEnumerator(this$.hashMap.values());\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const pairs = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            count = ((count + pairs.length) | 0);\r\n        }\r\n    }\r\n    finally {\r\n        enumerator.Dispose();\r\n    }\r\n    return count | 0;\r\n}\r\n\r\nexport function Dictionary__get_Item_2B595(this$, k) {\r\n    const matchValue = Dictionary__TryFind_2B595(this$, k);\r\n    if (matchValue != null) {\r\n        return matchValue[1];\r\n    }\r\n    else {\r\n        throw (new Error(\"The item was not found in collection\"));\r\n    }\r\n}\r\n\r\nexport function Dictionary__set_Item_5BDDA1(this$, k, v) {\r\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\r\n    let pattern_matching_result;\r\n    if (matchValue[0]) {\r\n        if (matchValue[2] > -1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            getItemFromDict(this$.hashMap, matchValue[1])[matchValue[2]] = [k, v];\r\n            break;\r\n        }\r\n        case 1: {\r\n            if (matchValue[0]) {\r\n                const value = void (getItemFromDict(this$.hashMap, matchValue[1]).push([k, v]));\r\n            }\r\n            else {\r\n                this$.hashMap.set(matchValue[1], [[k, v]]);\r\n            }\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\nexport function Dictionary__Add_5BDDA1(this$, k, v) {\r\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\r\n    let pattern_matching_result;\r\n    if (matchValue[0]) {\r\n        if (matchValue[2] > -1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            const msg = format(\"An item with the same key has already been added. Key: {0}\", k);\r\n            throw (new Error(msg));\r\n            break;\r\n        }\r\n        case 1: {\r\n            if (matchValue[0]) {\r\n                const value = void (getItemFromDict(this$.hashMap, matchValue[1]).push([k, v]));\r\n            }\r\n            else {\r\n                this$.hashMap.set(matchValue[1], [[k, v]]);\r\n            }\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\nexport function Dictionary__ContainsKey_2B595(this$, k) {\r\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\r\n    let pattern_matching_result;\r\n    if (matchValue[0]) {\r\n        if (matchValue[2] > -1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return true;\r\n        }\r\n        case 1: {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport function Dictionary__Remove_2B595(this$, k) {\r\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\r\n    let pattern_matching_result;\r\n    if (matchValue[0]) {\r\n        if (matchValue[2] > -1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            getItemFromDict(this$.hashMap, matchValue[1]).splice(matchValue[2], 1);\r\n            return true;\r\n        }\r\n        case 1: {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\n","import { toList, toArray, map, filter, delay } from \"./Seq.js\";\r\nimport { HashSet } from \"./MutableSet.js\";\r\nimport { addToDict, getItemFromDict, tryGetValue, addToSet } from \"./MapUtil.js\";\r\nimport { Dictionary } from \"./MutableMap.js\";\r\nimport { getEnumerator } from \"./Util.js\";\r\nimport { FSharpRef } from \"./Types.js\";\r\n\r\nexport function distinct(xs, comparer) {\r\n    return delay(() => {\r\n        const hashSet = new HashSet([], comparer);\r\n        return filter((x) => addToSet(x, hashSet), xs);\r\n    });\r\n}\r\n\r\nexport function distinctBy(projection, xs, comparer) {\r\n    return delay(() => {\r\n        const hashSet = new HashSet([], comparer);\r\n        return filter((x) => addToSet(projection(x), hashSet), xs);\r\n    });\r\n}\r\n\r\nexport function except(itemsToExclude, xs, comparer) {\r\n    return delay(() => {\r\n        const hashSet = new HashSet(itemsToExclude, comparer);\r\n        return filter((x) => addToSet(x, hashSet), xs);\r\n    });\r\n}\r\n\r\nexport function countBy(projection, xs, comparer) {\r\n    return delay(() => {\r\n        const dict = new Dictionary([], comparer);\r\n        const keys = [];\r\n        const enumerator = getEnumerator(xs);\r\n        try {\r\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                const key = projection(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n                let matchValue;\r\n                let outArg = 0;\r\n                matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v) => {\r\n                    outArg = (v | 0);\r\n                })), outArg];\r\n                if (matchValue[0]) {\r\n                    dict.set(key, matchValue[1] + 1);\r\n                }\r\n                else {\r\n                    dict.set(key, 1);\r\n                    void (keys.push(key));\r\n                }\r\n            }\r\n        }\r\n        finally {\r\n            enumerator.Dispose();\r\n        }\r\n        return map((key_1) => [key_1, getItemFromDict(dict, key_1)], keys);\r\n    });\r\n}\r\n\r\nexport function groupBy(projection, xs, comparer) {\r\n    return delay(() => {\r\n        const dict = new Dictionary([], comparer);\r\n        const keys = [];\r\n        const enumerator = getEnumerator(xs);\r\n        try {\r\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                const key = projection(x);\r\n                let matchValue;\r\n                let outArg = null;\r\n                matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v) => {\r\n                    outArg = v;\r\n                })), outArg];\r\n                if (matchValue[0]) {\r\n                    void (matchValue[1].push(x));\r\n                }\r\n                else {\r\n                    addToDict(dict, key, [x]);\r\n                    void (keys.push(key));\r\n                }\r\n            }\r\n        }\r\n        finally {\r\n            enumerator.Dispose();\r\n        }\r\n        return map((key_1) => [key_1, getItemFromDict(dict, key_1)], keys);\r\n    });\r\n}\r\n\r\nexport function Array_distinct(xs, comparer) {\r\n    return toArray(distinct(xs, comparer));\r\n}\r\n\r\nexport function Array_distinctBy(projection, xs, comparer) {\r\n    return toArray(distinctBy(projection, xs, comparer));\r\n}\r\n\r\nexport function Array_except(itemsToExclude, xs, comparer) {\r\n    return toArray(except(itemsToExclude, xs, comparer));\r\n}\r\n\r\nexport function Array_countBy(projection, xs, comparer) {\r\n    return toArray(countBy(projection, xs, comparer));\r\n}\r\n\r\nexport function Array_groupBy(projection, xs, comparer) {\r\n    return toArray(map((tupledArg) => [tupledArg[0], toArray(tupledArg[1])], groupBy(projection, xs, comparer)));\r\n}\r\n\r\nexport function List_distinct(xs, comparer) {\r\n    return toList(distinct(xs, comparer));\r\n}\r\n\r\nexport function List_distinctBy(projection, xs, comparer) {\r\n    return toList(distinctBy(projection, xs, comparer));\r\n}\r\n\r\nexport function List_except(itemsToExclude, xs, comparer) {\r\n    return toList(except(itemsToExclude, xs, comparer));\r\n}\r\n\r\nexport function List_countBy(projection, xs, comparer) {\r\n    return toList(countBy(projection, xs, comparer));\r\n}\r\n\r\nexport function List_groupBy(projection, xs, comparer) {\r\n    return toList(map((tupledArg) => [tupledArg[0], toList(tupledArg[1])], groupBy(projection, xs, comparer)));\r\n}\r\n\r\n","export class CancellationToken {\n    constructor(cancelled = false) {\n        this._id = 0;\n        this._cancelled = cancelled;\n        this._listeners = new Map();\n    }\n    get isCancelled() {\n        return this._cancelled;\n    }\n    cancel() {\n        if (!this._cancelled) {\n            this._cancelled = true;\n            for (const [, listener] of this._listeners) {\n                listener();\n            }\n        }\n    }\n    addListener(f) {\n        const id = this._id;\n        this._listeners.set(this._id++, f);\n        return id;\n    }\n    removeListener(id) {\n        return this._listeners.delete(id);\n    }\n    register(f, state) {\n        const $ = this;\n        const id = this.addListener(state == null ? f : () => f(state));\n        return { Dispose() { $.removeListener(id); } };\n    }\n}\nexport class OperationCanceledError extends Error {\n    constructor() {\n        super(\"The operation was canceled\");\n        Object.setPrototypeOf(this, OperationCanceledError.prototype);\n    }\n}\nexport class Trampoline {\n    constructor() {\n        this.callCount = 0;\n    }\n    static get maxTrampolineCallCount() {\n        return 2000;\n    }\n    incrementAndCheck() {\n        return this.callCount++ > Trampoline.maxTrampolineCallCount;\n    }\n    hijack(f) {\n        this.callCount = 0;\n        setTimeout(f, 0);\n    }\n}\nexport function protectedCont(f) {\n    return (ctx) => {\n        if (ctx.cancelToken.isCancelled) {\n            ctx.onCancel(new OperationCanceledError());\n        }\n        else if (ctx.trampoline.incrementAndCheck()) {\n            ctx.trampoline.hijack(() => {\n                try {\n                    f(ctx);\n                }\n                catch (err) {\n                    ctx.onError(err);\n                }\n            });\n        }\n        else {\n            try {\n                f(ctx);\n            }\n            catch (err) {\n                ctx.onError(err);\n            }\n        }\n    };\n}\nexport function protectedBind(computation, binder) {\n    return protectedCont((ctx) => {\n        computation({\n            onSuccess: (x) => {\n                try {\n                    binder(x)(ctx);\n                }\n                catch (ex) {\n                    ctx.onError(ex);\n                }\n            },\n            onError: ctx.onError,\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function protectedReturn(value) {\n    return protectedCont((ctx) => ctx.onSuccess(value));\n}\nexport class AsyncBuilder {\n    Bind(computation, binder) {\n        return protectedBind(computation, binder);\n    }\n    Combine(computation1, computation2) {\n        return this.Bind(computation1, () => computation2);\n    }\n    Delay(generator) {\n        return protectedCont((ctx) => generator()(ctx));\n    }\n    For(sequence, body) {\n        const iter = sequence[Symbol.iterator]();\n        let cur = iter.next();\n        return this.While(() => !cur.done, this.Delay(() => {\n            const res = body(cur.value);\n            cur = iter.next();\n            return res;\n        }));\n    }\n    Return(value) {\n        return protectedReturn(value);\n    }\n    ReturnFrom(computation) {\n        return computation;\n    }\n    TryFinally(computation, compensation) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: (x) => {\n                    compensation();\n                    ctx.onSuccess(x);\n                },\n                onError: (x) => {\n                    compensation();\n                    ctx.onError(x);\n                },\n                onCancel: (x) => {\n                    compensation();\n                    ctx.onCancel(x);\n                },\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n            });\n        });\n    }\n    TryWith(computation, catchHandler) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: ctx.onSuccess,\n                onCancel: ctx.onCancel,\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n                onError: (ex) => {\n                    try {\n                        catchHandler(ex)(ctx);\n                    }\n                    catch (ex2) {\n                        ctx.onError(ex2);\n                    }\n                },\n            });\n        });\n    }\n    Using(resource, binder) {\n        return this.TryFinally(binder(resource), () => resource.Dispose());\n    }\n    While(guard, computation) {\n        if (guard()) {\n            return this.Bind(computation, () => this.While(guard, computation));\n        }\n        else {\n            return this.Return(void 0);\n        }\n    }\n    Zero() {\n        return protectedCont((ctx) => ctx.onSuccess(void 0));\n    }\n}\nexport const singleton = new AsyncBuilder();\n","import { OperationCanceledError, Trampoline } from \"./AsyncBuilder.js\";\nimport { CancellationToken } from \"./AsyncBuilder.js\";\nimport { protectedCont } from \"./AsyncBuilder.js\";\nimport { protectedBind } from \"./AsyncBuilder.js\";\nimport { protectedReturn } from \"./AsyncBuilder.js\";\nimport { Choice_makeChoice1Of2, Choice_makeChoice2Of2 } from \"./Choice.js\";\nimport { TimeoutException } from \"./SystemException.js\";\n// Implemented just for type references\nexport class Async {\n}\nfunction emptyContinuation(_x) {\n    // NOP\n}\n// see AsyncBuilder.Delay\nfunction delay(generator) {\n    return protectedCont((ctx) => generator()(ctx));\n}\n// MakeAsync: body:(AsyncActivation<'T> -> AsyncReturn) -> Async<'T>\nexport function makeAsync(body) {\n    return body;\n}\n// Invoke: computation: Async<'T> -> ctxt:AsyncActivation<'T> -> AsyncReturn\nexport function invoke(computation, ctx) {\n    return computation(ctx);\n}\n// CallThenInvoke: ctxt:AsyncActivation<'T> -> result1:'U -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function callThenInvoke(ctx, result1, part2) {\n    return part2(result1)(ctx);\n}\n// Bind: ctxt:AsyncActivation<'T> -> part1:Async<'U> -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function bind(ctx, part1, part2) {\n    return protectedBind(part1, part2)(ctx);\n}\nexport function createCancellationToken(arg) {\n    const token = new CancellationToken(typeof arg === \"boolean\" ? arg : false);\n    if (typeof arg === \"number\") {\n        setTimeout(() => { token.cancel(); }, arg);\n    }\n    return token;\n}\nexport function cancel(token) {\n    token.cancel();\n}\nexport function cancelAfter(token, ms) {\n    setTimeout(() => { token.cancel(); }, ms);\n}\nexport function isCancellationRequested(token) {\n    return token != null && token.isCancelled;\n}\nexport function throwIfCancellationRequested(token) {\n    if (token != null && token.isCancelled) {\n        throw new Error(\"Operation is cancelled\");\n    }\n}\nfunction throwAfter(millisecondsDueTime) {\n    return protectedCont((ctx) => {\n        let tokenId;\n        const timeoutId = setTimeout(() => {\n            ctx.cancelToken.removeListener(tokenId);\n            ctx.onError(new TimeoutException());\n        }, millisecondsDueTime);\n        tokenId = ctx.cancelToken.addListener(() => {\n            clearTimeout(timeoutId);\n            ctx.onCancel(new OperationCanceledError());\n        });\n    });\n}\nexport function startChild(computation, ms) {\n    if (ms) {\n        const computationWithTimeout = protectedBind(parallel2(computation, throwAfter(ms)), xs => protectedReturn(xs[0]));\n        return startChild(computationWithTimeout);\n    }\n    const promise = startAsPromise(computation);\n    // JS Promises are hot, computation has already started\n    // but we delay returning the result\n    return protectedCont((ctx) => protectedReturn(awaitPromise(promise))(ctx));\n}\nexport function awaitPromise(p) {\n    return fromContinuations((conts) => p.then(conts[0]).catch((err) => (err instanceof OperationCanceledError\n        ? conts[2] : conts[1])(err)));\n}\nexport function cancellationToken() {\n    return protectedCont((ctx) => ctx.onSuccess(ctx.cancelToken));\n}\nexport const defaultCancellationToken = new CancellationToken();\nexport function catchAsync(work) {\n    return protectedCont((ctx) => {\n        work({\n            onSuccess: (x) => ctx.onSuccess(Choice_makeChoice1Of2(x)),\n            onError: (ex) => ctx.onSuccess(Choice_makeChoice2Of2(ex)),\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function fromContinuations(f) {\n    return protectedCont((ctx) => f([ctx.onSuccess, ctx.onError, ctx.onCancel]));\n}\nexport function ignore(computation) {\n    return protectedBind(computation, (_x) => protectedReturn(void 0));\n}\nexport function parallel(computations) {\n    return delay(() => awaitPromise(Promise.all(Array.from(computations, (w) => startAsPromise(w)))));\n}\nfunction parallel2(a, b) {\n    return delay(() => awaitPromise(Promise.all([startAsPromise(a), startAsPromise(b)])));\n}\nexport function sequential(computations) {\n    function _sequential(computations) {\n        let pr = Promise.resolve([]);\n        for (const c of computations) {\n            pr = pr.then(results => startAsPromise(c).then(r => results.concat([r])));\n        }\n        return pr;\n    }\n    return delay(() => awaitPromise(_sequential(computations)));\n}\nexport function sleep(millisecondsDueTime) {\n    return protectedCont((ctx) => {\n        let tokenId;\n        const timeoutId = setTimeout(() => {\n            ctx.cancelToken.removeListener(tokenId);\n            ctx.onSuccess(void 0);\n        }, millisecondsDueTime);\n        tokenId = ctx.cancelToken.addListener(() => {\n            clearTimeout(timeoutId);\n            ctx.onCancel(new OperationCanceledError());\n        });\n    });\n}\nexport function runSynchronously() {\n    throw new Error(\"Asynchronous code cannot be run synchronously in JS\");\n}\nexport function start(computation, cancellationToken) {\n    return startWithContinuations(computation, cancellationToken);\n}\nexport function startImmediate(computation, cancellationToken) {\n    return start(computation, cancellationToken);\n}\nexport function startWithContinuations(computation, continuation, exceptionContinuation, cancellationContinuation, cancelToken) {\n    if (typeof continuation !== \"function\") {\n        cancelToken = continuation;\n        continuation = undefined;\n    }\n    const trampoline = new Trampoline();\n    computation({\n        onSuccess: continuation ? continuation : emptyContinuation,\n        onError: exceptionContinuation ? exceptionContinuation : emptyContinuation,\n        onCancel: cancellationContinuation ? cancellationContinuation : emptyContinuation,\n        cancelToken: cancelToken ? cancelToken : defaultCancellationToken,\n        trampoline,\n    });\n}\nexport function startAsPromise(computation, cancellationToken) {\n    return new Promise((resolve, reject) => startWithContinuations(computation, resolve, reject, reject, cancellationToken ? cancellationToken : defaultCancellationToken));\n}\nexport default Async;\n","import { some } from \"../fable-library.3.6.2/Option.js\";\r\nimport Timer from \"../fable-library.3.6.2/Timer.js\";\r\nimport { add } from \"../fable-library.3.6.2/Observable.js\";\r\n\r\nexport function Log_onError(text, ex) {\r\n    console.error(some(text), ex);\r\n}\r\n\r\nexport function Log_toConsole(text, o) {\r\n    console.log(some(text), o);\r\n}\r\n\r\nexport function Timer_delay(interval, callback) {\r\n    let t;\r\n    let returnVal = new Timer(interval);\r\n    returnVal.AutoReset = false;\r\n    t = returnVal;\r\n    add(callback, t.Elapsed());\r\n    t.Enabled = true;\r\n    t.Start();\r\n}\r\n\r\n","import { singleton, concat, map, empty, iterate } from \"../fable-library.3.6.2/List.js\";\r\nimport { singleton as singleton_1 } from \"../fable-library.3.6.2/AsyncBuilder.js\";\r\nimport { startImmediate, catchAsync } from \"../fable-library.3.6.2/Async.js\";\r\nimport { Timer_delay } from \"./prelude.fs.js\";\r\n\r\nexport function Cmd_exec(onError, dispatch, cmd) {\r\n    iterate((call) => {\r\n        try {\r\n            call(dispatch);\r\n        }\r\n        catch (ex) {\r\n            onError(ex);\r\n        }\r\n    }, cmd);\r\n}\r\n\r\nexport function Cmd_none() {\r\n    return empty();\r\n}\r\n\r\nexport function Cmd_map(f, cmd) {\r\n    return map((g) => ((arg_1) => {\r\n        g((arg) => {\r\n            arg_1(f(arg));\r\n        });\r\n    }), cmd);\r\n}\r\n\r\nexport function Cmd_batch(cmds) {\r\n    return concat(cmds);\r\n}\r\n\r\nexport function Cmd_ofSub(sub) {\r\n    return singleton(sub);\r\n}\r\n\r\nexport function Cmd_OfFunc_either(task, arg, ofSuccess, ofError) {\r\n    return singleton((dispatch) => {\r\n        try {\r\n            return dispatch(ofSuccess(task(arg)));\r\n        }\r\n        catch (x) {\r\n            return dispatch(ofError(x));\r\n        }\r\n    });\r\n}\r\n\r\nexport function Cmd_OfFunc_perform(task, arg, ofSuccess) {\r\n    return singleton((dispatch) => {\r\n        try {\r\n            dispatch(ofSuccess(task(arg)));\r\n        }\r\n        catch (x) {\r\n        }\r\n    });\r\n}\r\n\r\nexport function Cmd_OfFunc_attempt(task, arg, ofError) {\r\n    return singleton((dispatch) => {\r\n        try {\r\n            task(arg);\r\n        }\r\n        catch (x) {\r\n            dispatch(ofError(x));\r\n        }\r\n    });\r\n}\r\n\r\nexport function Cmd_OfFunc_result(msg) {\r\n    return singleton((dispatch) => {\r\n        dispatch(msg);\r\n    });\r\n}\r\n\r\nexport function Cmd_OfAsyncWith_either(start, task, arg, ofSuccess, ofError) {\r\n    return singleton((arg_1) => {\r\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\r\n            const r = _arg1;\r\n            arg_1((r.tag === 1) ? ofError(r.fields[0]) : ofSuccess(r.fields[0]));\r\n            return singleton_1.Zero();\r\n        })));\r\n    });\r\n}\r\n\r\nexport function Cmd_OfAsyncWith_perform(start, task, arg, ofSuccess) {\r\n    return singleton((arg_1) => {\r\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\r\n            const r = _arg1;\r\n            if (r.tag === 0) {\r\n                arg_1(ofSuccess(r.fields[0]));\r\n                return singleton_1.Zero();\r\n            }\r\n            else {\r\n                return singleton_1.Zero();\r\n            }\r\n        })));\r\n    });\r\n}\r\n\r\nexport function Cmd_OfAsyncWith_attempt(start, task, arg, ofError) {\r\n    return singleton((arg_1) => {\r\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\r\n            const r = _arg1;\r\n            if (r.tag === 1) {\r\n                arg_1(ofError(r.fields[0]));\r\n                return singleton_1.Zero();\r\n            }\r\n            else {\r\n                return singleton_1.Zero();\r\n            }\r\n        })));\r\n    });\r\n}\r\n\r\nexport function Cmd_OfAsyncWith_result(start, task) {\r\n    return singleton((arg) => {\r\n        start(singleton_1.Delay(() => singleton_1.Bind(task, (_arg1) => {\r\n            arg(_arg1);\r\n            return singleton_1.Zero();\r\n        })));\r\n    });\r\n}\r\n\r\nexport function Cmd_OfAsync_start(x) {\r\n    Timer_delay(0, (_arg1) => {\r\n        startImmediate(x);\r\n    });\r\n}\r\n\r\nexport function Cmd_OfPromise_either(task, arg, ofSuccess, ofError) {\r\n    return singleton((dispatch) => {\r\n        task(arg).then((arg_1) => dispatch(ofSuccess(arg_1))).catch((arg_3) => dispatch(ofError(arg_3)));\r\n    });\r\n}\r\n\r\nexport function Cmd_OfPromise_perform(task, arg, ofSuccess) {\r\n    return singleton((dispatch) => {\r\n        task(arg).then((arg_1) => dispatch(ofSuccess(arg_1)));\r\n    });\r\n}\r\n\r\nexport function Cmd_OfPromise_attempt(task, arg, ofError) {\r\n    return singleton((dispatch) => {\r\n        task(arg).catch((arg_2) => {\r\n            dispatch(ofError(arg_2));\r\n        });\r\n    });\r\n}\r\n\r\nexport function Cmd_OfPromise_result(task) {\r\n    return singleton((dispatch) => {\r\n        task.then(dispatch);\r\n    });\r\n}\r\n\r\nexport function Cmd_attemptFunc(task, arg, ofError) {\r\n    return Cmd_OfFunc_attempt(task, arg, ofError);\r\n}\r\n\r\n","import * as react from \"react\";\r\nimport { equals, uncurry } from \"../fable-library.3.6.2/Util.js\";\r\nimport { choose, fold } from \"../fable-library.3.6.2/Seq.js\";\r\nimport { isNullOrEmpty } from \"../fable-library.3.6.2/String.js\";\r\nimport { HTMLAttr } from \"./Fable.React.Props.fs.js\";\r\n\r\nexport function ReactElementTypeModule_memo(render) {\r\n    return react.memo(render, uncurry(2, null));\r\n}\r\n\r\nexport function ReactElementTypeModule_memoWith(areEqual, render) {\r\n    return react.memo(render, areEqual);\r\n}\r\n\r\nexport function Helpers_equalsButFunctions(x, y) {\r\n    if (x === y) {\r\n        return true;\r\n    }\r\n    else if ((typeof x === 'object' && !x[Symbol.iterator]) && (!(y == null))) {\r\n        const keys = Object.keys(x);\r\n        const length = keys.length | 0;\r\n        let i = 0;\r\n        let result = true;\r\n        while ((i < length) && result) {\r\n            const key = keys[i];\r\n            i = ((i + 1) | 0);\r\n            const xValue = x[key];\r\n            result = ((typeof xValue === 'function') ? true : equals(xValue, y[key]));\r\n        }\r\n        return result;\r\n    }\r\n    else {\r\n        return equals(x, y);\r\n    }\r\n}\r\n\r\nexport function Helpers_memoEqualsButFunctions(x, y) {\r\n    if (x === y) {\r\n        return true;\r\n    }\r\n    else if ((typeof x === 'object' && !x[Symbol.iterator]) && (!(y == null))) {\r\n        const keys = Object.keys(x);\r\n        const length = keys.length | 0;\r\n        let i = 0;\r\n        let result = true;\r\n        while ((i < length) && result) {\r\n            const key = keys[i];\r\n            i = ((i + 1) | 0);\r\n            const xValue = x[key];\r\n            result = ((typeof xValue === 'function') ? true : (xValue === y[key]));\r\n        }\r\n        return result;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function Helpers_memoBuilder(name, render) {\r\n    render.displayName = name;\r\n    const memoType = ReactElementTypeModule_memo(render);\r\n    return (props) => react.createElement(memoType, props);\r\n}\r\n\r\nexport function Helpers_memoBuilderWith(name, areEqual, render) {\r\n    render.displayName = name;\r\n    const memoType = ReactElementTypeModule_memoWith(areEqual, render);\r\n    return (props) => react.createElement(memoType, props);\r\n}\r\n\r\nexport function Helpers_opt(o) {\r\n    const o_1 = o;\r\n    if (o_1 == null) {\r\n        return null;\r\n    }\r\n    else {\r\n        return o_1;\r\n    }\r\n}\r\n\r\nexport const Helpers_nothing = null;\r\n\r\nexport function Helpers_classBaseList(baseClass, classes) {\r\n    return new HTMLAttr(64, fold((state, name_1) => ((state + \" \") + name_1), baseClass, choose((tupledArg) => {\r\n        const name = tupledArg[0];\r\n        if (tupledArg[1] && (!isNullOrEmpty(name))) {\r\n            return name;\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, classes)));\r\n}\r\n\r\nexport function Helpers_classList(classes) {\r\n    return Helpers_classBaseList(\"\", classes);\r\n}\r\n\r\n","import { class_type } from \"../fable-library.3.6.2/Reflection.js\";\r\nimport { defaultArg, value as value_1, some } from \"../fable-library.3.6.2/Option.js\";\r\nimport { curry, int32ToString } from \"../fable-library.3.6.2/Util.js\";\r\nimport { ReactElementTypeModule_memoWith } from \"./Fable.React.Helpers.fs.js\";\r\nimport * as react from \"react\";\r\n\r\nexport class Cache {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function Cache$reflection() {\r\n    return class_type(\"Fable.React.Cache\", void 0, Cache);\r\n}\r\n\r\nexport function Cache_$ctor() {\r\n    return new Cache();\r\n}\r\n\r\n(() => {\r\n    Cache.cache = (new Map());\r\n})();\r\n\r\nexport function Cache_GetOrAdd_Z3AD3E68D(key, valueFactory) {\r\n    if (Cache.cache.has(key)) {\r\n        return Cache.cache.get(key);\r\n    }\r\n    else {\r\n        const v = valueFactory(key);\r\n        Cache.cache.set(key, some(v));\r\n        return v;\r\n    }\r\n}\r\n\r\nexport class FunctionComponent {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function FunctionComponent$reflection() {\r\n    return class_type(\"Fable.React.FunctionComponent\", void 0, FunctionComponent);\r\n}\r\n\r\nexport function FunctionComponent_Of_Z5A158BBF(render, displayName, memoizeWith, withKey, __callingMemberName, __callingSourceFile, __callingSourceLine) {\r\n    return Cache_GetOrAdd_Z3AD3E68D((value_1(__callingSourceFile) + \"#L\") + int32ToString(value_1(__callingSourceLine)), (_arg1) => {\r\n        const displayName_1 = defaultArg(displayName, value_1(__callingMemberName));\r\n        render.displayName = displayName_1;\r\n        let elemType;\r\n        if (curry(2, memoizeWith) == null) {\r\n            elemType = render;\r\n        }\r\n        else {\r\n            const memoElement = ReactElementTypeModule_memoWith(memoizeWith, render);\r\n            memoElement.displayName = ((\"Memo(\" + displayName_1) + \")\");\r\n            elemType = memoElement;\r\n        }\r\n        return (props) => {\r\n            let f_1;\r\n            return react.createElement(elemType, (withKey == null) ? props : ((f_1 = withKey, (props.key = f_1(props), props))));\r\n        };\r\n    });\r\n}\r\n\r\n","import { some } from \"../fable-library.3.6.2/Option.js\";\r\nimport { create, isLeapYear } from \"../fable-library.3.6.2/Date.js\";\r\nimport { parse } from \"../fable-library.3.6.2/Int32.js\";\r\nimport { split, isNullOrWhiteSpace } from \"../fable-library.3.6.2/String.js\";\r\nimport { equalsWith } from \"../fable-library.3.6.2/Array.js\";\r\nimport react from \"react\";\r\n\r\nexport function DateParsing_$007CBetween$007C_$007C(x, y, input) {\r\n    if ((input >= x) && (input <= y)) {\r\n        return some(void 0);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function DateParsing_isLeapYear(year) {\r\n    return isLeapYear(year);\r\n}\r\n\r\nexport function DateParsing_$007CInt$007C_$007C(input) {\r\n    try {\r\n        return parse(input, 511, false, 32);\r\n    }\r\n    catch (matchValue) {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function DateParsing_parse(input) {\r\n    try {\r\n        if (isNullOrWhiteSpace(input)) {\r\n            return void 0;\r\n        }\r\n        else {\r\n            const parts = split(input, [\"-\"], null, 0);\r\n            let patternInput;\r\n            let pattern_matching_result, month, year;\r\n            if ((!equalsWith((x, y) => (x === y), parts, null)) && (parts.length === 2)) {\r\n                const activePatternResult3093 = DateParsing_$007CInt$007C_$007C(parts[0]);\r\n                if (activePatternResult3093 != null) {\r\n                    const activePatternResult3094 = DateParsing_$007CInt$007C_$007C(parts[1]);\r\n                    if (activePatternResult3094 != null) {\r\n                        pattern_matching_result = 0;\r\n                        month = activePatternResult3094;\r\n                        year = activePatternResult3093;\r\n                    }\r\n                    else {\r\n                        pattern_matching_result = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    pattern_matching_result = 1;\r\n                }\r\n            }\r\n            else {\r\n                pattern_matching_result = 1;\r\n            }\r\n            switch (pattern_matching_result) {\r\n                case 0: {\r\n                    patternInput = [year, month, 1, 0, 0];\r\n                    break;\r\n                }\r\n                case 1: {\r\n                    let pattern_matching_result_1, day, month_1, year_1;\r\n                    if ((!equalsWith((x_1, y_1) => (x_1 === y_1), parts, null)) && (parts.length === 3)) {\r\n                        const activePatternResult3090 = DateParsing_$007CInt$007C_$007C(parts[0]);\r\n                        if (activePatternResult3090 != null) {\r\n                            const activePatternResult3091 = DateParsing_$007CInt$007C_$007C(parts[1]);\r\n                            if (activePatternResult3091 != null) {\r\n                                const activePatternResult3092 = DateParsing_$007CInt$007C_$007C(parts[2]);\r\n                                if (activePatternResult3092 != null) {\r\n                                    pattern_matching_result_1 = 0;\r\n                                    day = activePatternResult3092;\r\n                                    month_1 = activePatternResult3091;\r\n                                    year_1 = activePatternResult3090;\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_1 = 1;\r\n                                }\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_1 = 1;\r\n                            }\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_1 = 1;\r\n                        }\r\n                    }\r\n                    else {\r\n                        pattern_matching_result_1 = 1;\r\n                    }\r\n                    switch (pattern_matching_result_1) {\r\n                        case 0: {\r\n                            patternInput = [year_1, month_1, day, 0, 0];\r\n                            break;\r\n                        }\r\n                        case 1: {\r\n                            let pattern_matching_result_2, day_1, month_2, year_2;\r\n                            if ((!equalsWith((x_2, y_2) => (x_2 === y_2), parts, null)) && (parts.length === 3)) {\r\n                                const activePatternResult3088 = DateParsing_$007CInt$007C_$007C(parts[0]);\r\n                                if (activePatternResult3088 != null) {\r\n                                    const activePatternResult3089 = DateParsing_$007CInt$007C_$007C(parts[1]);\r\n                                    if (activePatternResult3089 != null) {\r\n                                        pattern_matching_result_2 = 0;\r\n                                        day_1 = parts[2];\r\n                                        month_2 = activePatternResult3089;\r\n                                        year_2 = activePatternResult3088;\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_2 = 1;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_2 = 1;\r\n                                }\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_2 = 1;\r\n                            }\r\n                            switch (pattern_matching_result_2) {\r\n                                case 0: {\r\n                                    if (day_1.indexOf(\"T\") >= 0) {\r\n                                        const matchValue = split(day_1, [\"T\"], null, 0);\r\n                                        let pattern_matching_result_3, parsedDay, time;\r\n                                        if ((!equalsWith((x_3, y_3) => (x_3 === y_3), matchValue, null)) && (matchValue.length === 2)) {\r\n                                            const activePatternResult3087 = DateParsing_$007CInt$007C_$007C(matchValue[0]);\r\n                                            if (activePatternResult3087 != null) {\r\n                                                pattern_matching_result_3 = 0;\r\n                                                parsedDay = activePatternResult3087;\r\n                                                time = matchValue[1];\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result_3 = 1;\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result_3 = 1;\r\n                                        }\r\n                                        switch (pattern_matching_result_3) {\r\n                                            case 0: {\r\n                                                const matchValue_1 = split(time, [\":\"], null, 0);\r\n                                                let pattern_matching_result_4, hour, minute;\r\n                                                if ((!equalsWith((x_4, y_4) => (x_4 === y_4), matchValue_1, null)) && (matchValue_1.length === 2)) {\r\n                                                    const activePatternResult3085 = DateParsing_$007CInt$007C_$007C(matchValue_1[0]);\r\n                                                    if (activePatternResult3085 != null) {\r\n                                                        const activePatternResult3086 = DateParsing_$007CInt$007C_$007C(matchValue_1[1]);\r\n                                                        if (activePatternResult3086 != null) {\r\n                                                            pattern_matching_result_4 = 0;\r\n                                                            hour = activePatternResult3085;\r\n                                                            minute = activePatternResult3086;\r\n                                                        }\r\n                                                        else {\r\n                                                            pattern_matching_result_4 = 1;\r\n                                                        }\r\n                                                    }\r\n                                                    else {\r\n                                                        pattern_matching_result_4 = 1;\r\n                                                    }\r\n                                                }\r\n                                                else {\r\n                                                    pattern_matching_result_4 = 1;\r\n                                                }\r\n                                                switch (pattern_matching_result_4) {\r\n                                                    case 0: {\r\n                                                        const matchValue_2 = [hour, minute];\r\n                                                        let pattern_matching_result_5;\r\n                                                        if (DateParsing_$007CBetween$007C_$007C(0, 59, matchValue_2[0]) != null) {\r\n                                                            if (DateParsing_$007CBetween$007C_$007C(0, 59, matchValue_2[1]) != null) {\r\n                                                                pattern_matching_result_5 = 0;\r\n                                                            }\r\n                                                            else {\r\n                                                                pattern_matching_result_5 = 1;\r\n                                                            }\r\n                                                        }\r\n                                                        else {\r\n                                                            pattern_matching_result_5 = 1;\r\n                                                        }\r\n                                                        switch (pattern_matching_result_5) {\r\n                                                            case 0: {\r\n                                                                patternInput = [year_2, month_2, parsedDay, hour, minute];\r\n                                                                break;\r\n                                                            }\r\n                                                            case 1: {\r\n                                                                patternInput = [-1, 1, 1, 0, 0];\r\n                                                                break;\r\n                                                            }\r\n                                                        }\r\n                                                        break;\r\n                                                    }\r\n                                                    case 1: {\r\n                                                        patternInput = [-1, 1, 1, 0, 0];\r\n                                                        break;\r\n                                                    }\r\n                                                }\r\n                                                break;\r\n                                            }\r\n                                            case 1: {\r\n                                                patternInput = [-1, 1, 1, 0, 0];\r\n                                                break;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        patternInput = [-1, 1, 1, 0, 0];\r\n                                    }\r\n                                    break;\r\n                                }\r\n                                case 1: {\r\n                                    patternInput = [-1, 1, 1, 0, 0];\r\n                                    break;\r\n                                }\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            const year_3 = patternInput[0] | 0;\r\n            const month_3 = patternInput[1] | 0;\r\n            const minute_1 = patternInput[4] | 0;\r\n            const hour_1 = patternInput[3] | 0;\r\n            const day_2 = patternInput[2] | 0;\r\n            if (year_3 <= 0) {\r\n                return void 0;\r\n            }\r\n            else {\r\n                const matchValue_3 = [month_3, day_2];\r\n                let pattern_matching_result_6;\r\n                if (matchValue_3[0] === 2) {\r\n                    if (DateParsing_$007CBetween$007C_$007C(1, 29, matchValue_3[1]) != null) {\r\n                        if (DateParsing_isLeapYear(year_3)) {\r\n                            pattern_matching_result_6 = 0;\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_6 = 1;\r\n                        }\r\n                    }\r\n                    else {\r\n                        pattern_matching_result_6 = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    pattern_matching_result_6 = 1;\r\n                }\r\n                switch (pattern_matching_result_6) {\r\n                    case 0: {\r\n                        return create(year_3, month_3, day_2, hour_1, minute_1, 0);\r\n                    }\r\n                    case 1: {\r\n                        let pattern_matching_result_7;\r\n                        if (matchValue_3[0] === 2) {\r\n                            if (DateParsing_$007CBetween$007C_$007C(1, 28, matchValue_3[1]) != null) {\r\n                                if (!DateParsing_isLeapYear(year_3)) {\r\n                                    pattern_matching_result_7 = 0;\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_7 = 1;\r\n                                }\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_7 = 1;\r\n                            }\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_7 = 1;\r\n                        }\r\n                        switch (pattern_matching_result_7) {\r\n                            case 0: {\r\n                                return create(year_3, month_3, day_2, hour_1, minute_1, 0);\r\n                            }\r\n                            case 1: {\r\n                                let pattern_matching_result_8;\r\n                                if (matchValue_3[0] === 1) {\r\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\r\n                                        pattern_matching_result_8 = 0;\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_8 = 1;\r\n                                    }\r\n                                }\r\n                                else if (matchValue_3[0] === 3) {\r\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\r\n                                        pattern_matching_result_8 = 0;\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_8 = 1;\r\n                                    }\r\n                                }\r\n                                else if (matchValue_3[0] === 5) {\r\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\r\n                                        pattern_matching_result_8 = 0;\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_8 = 1;\r\n                                    }\r\n                                }\r\n                                else if (matchValue_3[0] === 7) {\r\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\r\n                                        pattern_matching_result_8 = 0;\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_8 = 1;\r\n                                    }\r\n                                }\r\n                                else if (matchValue_3[0] === 8) {\r\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\r\n                                        pattern_matching_result_8 = 0;\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_8 = 1;\r\n                                    }\r\n                                }\r\n                                else if (matchValue_3[0] === 10) {\r\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\r\n                                        pattern_matching_result_8 = 0;\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_8 = 1;\r\n                                    }\r\n                                }\r\n                                else if (matchValue_3[0] === 12) {\r\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\r\n                                        pattern_matching_result_8 = 0;\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_8 = 1;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_8 = 1;\r\n                                }\r\n                                switch (pattern_matching_result_8) {\r\n                                    case 0: {\r\n                                        return create(year_3, month_3, day_2, hour_1, minute_1, 0);\r\n                                    }\r\n                                    case 1: {\r\n                                        let pattern_matching_result_9;\r\n                                        if (matchValue_3[0] === 4) {\r\n                                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\r\n                                                pattern_matching_result_9 = 0;\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result_9 = 1;\r\n                                            }\r\n                                        }\r\n                                        else if (matchValue_3[0] === 6) {\r\n                                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\r\n                                                pattern_matching_result_9 = 0;\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result_9 = 1;\r\n                                            }\r\n                                        }\r\n                                        else if (matchValue_3[0] === 9) {\r\n                                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\r\n                                                pattern_matching_result_9 = 0;\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result_9 = 1;\r\n                                            }\r\n                                        }\r\n                                        else if (matchValue_3[0] === 11) {\r\n                                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\r\n                                                pattern_matching_result_9 = 0;\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result_9 = 1;\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result_9 = 1;\r\n                                        }\r\n                                        switch (pattern_matching_result_9) {\r\n                                            case 0: {\r\n                                                return create(year_3, month_3, day_2, hour_1, minute_1, 0);\r\n                                            }\r\n                                            case 1: {\r\n                                                return void 0;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    catch (matchValue_4) {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport const Interop_reactApi = react;\r\n\r\n","import { useLayoutEffectWithDeps, useLayoutEffect, useEffectWithDeps, useEffect, useDebugValue } from \"./ReactInterop.js\";\r\nimport { class_type } from \"../fable-library.3.6.2/Reflection.js\";\r\nimport { iterate } from \"../fable-library.3.6.2/Seq.js\";\r\nimport { defaultArg, some, toArray } from \"../fable-library.3.6.2/Option.js\";\r\nimport { Interop_reactApi } from \"./Interop.fs.js\";\r\nimport { curry, uncurry } from \"../fable-library.3.6.2/Util.js\";\r\nimport { useState } from \"react\";\r\nimport * as react from \"react\";\r\n\r\nexport const ReactInterop_useDebugValueWithFormatter = useDebugValue;\r\n\r\nexport const ReactInterop_useEffect = useEffect;\r\n\r\nexport const ReactInterop_useEffectWithDeps = useEffectWithDeps;\r\n\r\nexport const ReactInterop_useLayoutEffect = useLayoutEffect;\r\n\r\nexport const ReactInterop_useLayoutEffectWithDeps = useLayoutEffectWithDeps;\r\n\r\nexport class Internal {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function Internal$reflection() {\r\n    return class_type(\"Feliz.Internal\", void 0, Internal);\r\n}\r\n\r\nexport function Internal_$ctor() {\r\n    return new Internal();\r\n}\r\n\r\n\r\nexport function Internal_functionComponent_Z1B155329(renderElement, name, withKey) {\r\n    iterate((name_1) => {\r\n        renderElement.displayName = name_1;\r\n    }, toArray(name));\r\n    console.warn(some(\"Feliz: using React.functionComponent in Fable 3 is obsolete, please consider using the [\\u003cReactComponent\\u003e] attribute instead which makes Feliz output better Javascript code that is compatible with react-refresh\"));\r\n    return (props) => Interop_reactApi.createElement(renderElement, Internal_propsWithKey(withKey, props));\r\n}\r\n\r\nexport function Internal_memo_Z603636D8(renderElement, name, areEqual, withKey) {\r\n    const memoElementType = Interop_reactApi.memo(renderElement, uncurry(2, defaultArg(curry(2, areEqual), null)));\r\n    iterate((name_1) => {\r\n        renderElement.displayName = name_1;\r\n    }, toArray(name));\r\n    return (props) => Interop_reactApi.createElement(memoElementType, Internal_propsWithKey(withKey, props));\r\n}\r\n\r\nfunction Internal_propsWithKey(withKey, props) {\r\n    if (withKey == null) {\r\n        return props;\r\n    }\r\n    else {\r\n        const f = withKey;\r\n        props.key = f(props);\r\n        return props;\r\n    }\r\n}\r\n\r\nexport class React {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function React$reflection() {\r\n    return class_type(\"Feliz.React\", void 0, React);\r\n}\r\n\r\nexport function React_createDisposable_3A5B6456(dispose) {\r\n    return {\r\n        Dispose() {\r\n            dispose();\r\n        },\r\n    };\r\n}\r\n\r\nexport function useReact_useState_FCFD9EF(initializer) {\r\n    return Interop_reactApi.useState(initializer);\r\n}\r\n\r\nexport function useReact_useReducer_2B9E6EA0(update, initialState) {\r\n    return Interop_reactApi.useReducer(update, initialState);\r\n}\r\n\r\nexport function useReact_useEffect_Z5ECA432F(effect) {\r\n    ReactInterop_useEffect(effect);\r\n}\r\n\r\nexport function useReact_useEffect_Z5234A374(effect, dependencies) {\r\n    ReactInterop_useEffectWithDeps(effect, dependencies);\r\n}\r\n\r\nexport function useReact_useLayoutEffect_Z5ECA432F(effect) {\r\n    ReactInterop_useLayoutEffect(effect);\r\n}\r\n\r\nexport function useReact_useLayoutEffect_Z5234A374(effect, dependencies) {\r\n    ReactInterop_useLayoutEffectWithDeps(effect, dependencies);\r\n}\r\n\r\nexport function useReact_useLayoutEffect_3A5B6456(effect) {\r\n    ReactInterop_useLayoutEffect((_arg1) => {\r\n        effect();\r\n        return React_createDisposable_3A5B6456(() => {\r\n        });\r\n    });\r\n}\r\n\r\nexport function useReact_useLayoutEffect_Z101E1A95(effect, dependencies) {\r\n    ReactInterop_useLayoutEffectWithDeps((_arg2) => {\r\n        effect();\r\n        return React_createDisposable_3A5B6456(() => {\r\n        });\r\n    }, dependencies);\r\n}\r\n\r\nexport function useReact_useEffectOnce_3A5B6456(effect) {\r\n    useReact_useEffect_Z101E1A95(effect, []);\r\n}\r\n\r\nexport function useReact_useEffectOnce_Z5ECA432F(effect) {\r\n    useReact_useEffect_Z5234A374(effect, []);\r\n}\r\n\r\nexport function useReact_useEffectOnce_6E825304(effect) {\r\n    useReact_useEffect_Z5234A374(() => {\r\n        const disposeOption = effect();\r\n        return {\r\n            Dispose() {\r\n                iterate((d) => {\r\n                    let copyOfStruct = d;\r\n                    copyOfStruct.Dispose();\r\n                }, toArray(disposeOption));\r\n            },\r\n        };\r\n    }, []);\r\n}\r\n\r\nexport function useReact_useEffect_3A5B6456(effect) {\r\n    ReactInterop_useEffect((_arg3) => {\r\n        effect();\r\n        return React_createDisposable_3A5B6456(() => {\r\n        });\r\n    });\r\n}\r\n\r\nexport function useReact_useEffect_Z101E1A95(effect, dependencies) {\r\n    ReactInterop_useEffectWithDeps((_arg4) => {\r\n        effect();\r\n        return React_createDisposable_3A5B6456(() => {\r\n        });\r\n    }, dependencies);\r\n}\r\n\r\nexport function useReact_useDebugValue_Z721C83C5(value) {\r\n    ReactInterop_useDebugValueWithFormatter(value, (x) => x);\r\n}\r\n\r\nexport function useReact_useDebugValue_77A55D6D(value, formatter) {\r\n    ReactInterop_useDebugValueWithFormatter(value, formatter);\r\n}\r\n\r\nexport function useReact_useCallback_93353E(callbackFunction, dependencies) {\r\n    return Interop_reactApi.useCallback(callbackFunction, defaultArg(dependencies, []));\r\n}\r\n\r\nexport function useReact_useRef_1505(initialValue) {\r\n    return Interop_reactApi.useRef(initialValue);\r\n}\r\n\r\nexport function useReact_useInputRef() {\r\n    return useReact_useRef_1505(void 0);\r\n}\r\n\r\nexport function useReact_useButtonRef() {\r\n    return useReact_useRef_1505(void 0);\r\n}\r\n\r\nexport function useReact_useElementRef() {\r\n    return useReact_useRef_1505(void 0);\r\n}\r\n\r\nexport function useReact_useMemo_CF4EA67(createFunction, dependencies) {\r\n    return Interop_reactApi.useMemo(createFunction, defaultArg(dependencies, []));\r\n}\r\n\r\nexport function React_functionComponent_2F9D7239(render, withKey) {\r\n    return Internal_functionComponent_Z1B155329(render, void 0, withKey);\r\n}\r\n\r\nexport function React_functionComponent_Z4C5FE1BE(name, render, withKey) {\r\n    return Internal_functionComponent_Z1B155329(render, name, withKey);\r\n}\r\n\r\nexport function React_functionComponent_19A12FB2(render, withKey) {\r\n    return Internal_functionComponent_Z1B155329((arg) => react.createElement(react.Fragment, {}, ...render(arg)), void 0, withKey);\r\n}\r\n\r\nexport function React_functionComponent_2E1DD889(name, render, withKey) {\r\n    return Internal_functionComponent_Z1B155329((arg) => react.createElement(react.Fragment, {}, ...render(arg)), name, withKey);\r\n}\r\n\r\nexport function React_memo_62A0F746(render, withKey, areEqual) {\r\n    return Internal_memo_Z603636D8(render, void 0, areEqual, withKey);\r\n}\r\n\r\nexport function React_memo_6648A89D(name, render, withKey, areEqual) {\r\n    return Internal_memo_Z603636D8(render, name, areEqual, withKey);\r\n}\r\n\r\nexport function React_memo_C2C6BED(render, withKey, areEqual) {\r\n    return Internal_memo_Z603636D8((arg) => react.createElement(react.Fragment, {}, ...render(arg)), void 0, areEqual, withKey);\r\n}\r\n\r\nexport function React_memo_Z4FCC584A(name, render, withKey, areEqual) {\r\n    return Internal_memo_Z603636D8((arg) => react.createElement(react.Fragment, {}, ...render(arg)), name, areEqual, withKey);\r\n}\r\n\r\nexport function React_createContext_1AE444D8(name, defaultValue) {\r\n    const contextObject = Interop_reactApi.createContext(defaultArg(defaultValue, void 0));\r\n    iterate((name_1) => {\r\n        contextObject.displayName = name_1;\r\n    }, toArray(name));\r\n    return contextObject;\r\n}\r\n\r\nexport function React_contextProvider_34D9BBBD(contextObject, contextValue, child) {\r\n    return Interop_reactApi.createElement(contextObject.Provider, {\r\n        value: contextValue,\r\n    }, child);\r\n}\r\n\r\nexport function React_contextProvider_138D2F56(contextObject, contextValue, children) {\r\n    return Interop_reactApi.createElement(contextObject.Provider, {\r\n        value: contextValue,\r\n    }, ...children);\r\n}\r\n\r\nexport function React_contextConsumer_Z68910595(contextObject, render) {\r\n    return Interop_reactApi.createElement(contextObject.Consumer, null, render);\r\n}\r\n\r\nexport function React_contextConsumer_56D53A40(contextObject, render) {\r\n    return Interop_reactApi.createElement(contextObject.Consumer, null, (arg) => react.createElement(react.Fragment, {}, ...render(arg)));\r\n}\r\n\r\nexport function useReact_useContext_37FA55CF(contextObject) {\r\n    return Interop_reactApi.useContext(contextObject);\r\n}\r\n\r\nexport function useReact_useCallbackRef_7C4B0DD6(callback) {\r\n    const lastRenderCallbackRef = useReact_useRef_1505(callback);\r\n    const callbackRef = useReact_useCallback_93353E((arg) => lastRenderCallbackRef.current(arg), []);\r\n    useReact_useLayoutEffect_3A5B6456(() => {\r\n        lastRenderCallbackRef.current = callback;\r\n    });\r\n    return callbackRef;\r\n}\r\n\r\nexport const React_useStateWithUpdater_1505 = useState;\r\n\r\nexport function React_forwardRef_3790D881(render) {\r\n    const forwardRefType = Interop_reactApi.forwardRef((props, ref) => render([props, ref]));\r\n    return (tupledArg) => {\r\n        const propsObj = Object.assign({}, tupledArg[0]);\r\n        propsObj.ref = tupledArg[1];\r\n        return Interop_reactApi.createElement(forwardRefType, propsObj);\r\n    };\r\n}\r\n\r\nexport function React_forwardRef_7DC3DB1A(name, render) {\r\n    const forwardRefType = Interop_reactApi.forwardRef((props, ref) => render([props, ref]));\r\n    render.displayName = name;\r\n    return (tupledArg) => {\r\n        const propsObj = Object.assign({}, tupledArg[0]);\r\n        propsObj.ref = tupledArg[1];\r\n        return Interop_reactApi.createElement(forwardRefType, propsObj);\r\n    };\r\n}\r\n\r\nexport function React_strictMode_6E3A73D(children) {\r\n    return Interop_reactApi.createElement(Interop_reactApi.StrictMode, void 0, ...children);\r\n}\r\n\r\nexport function React_lazy$0027_4712D3AE(dynamicImport, props) {\r\n    return Interop_reactApi.createElement(Interop_reactApi.lazy(() => dynamicImport), props);\r\n}\r\n\r\nexport function React_lazy$0027_Z3D8450FC(dynamicImport, props) {\r\n    return Interop_reactApi.createElement(Interop_reactApi.lazy(dynamicImport), props);\r\n}\r\n\r\nexport function React_suspense_6E3A73D(children) {\r\n    let o;\r\n    return Interop_reactApi.createElement(Interop_reactApi.Suspense, (o = {\r\n        fallback: null,\r\n    }, Object.assign({}, o)), ...children);\r\n}\r\n\r\nexport function React_suspense_Z3796A576(children, fallback) {\r\n    let o;\r\n    return Interop_reactApi.createElement(Interop_reactApi.Suspense, (o = {\r\n        fallback: fallback,\r\n    }, Object.assign({}, o)), ...children);\r\n}\r\n\r\nexport function useReact_useImperativeHandle_596DDC25(ref, createHandle) {\r\n    Interop_reactApi.useImperativeHandle(ref, createHandle);\r\n}\r\n\r\nexport function useReact_useImperativeHandle_Z12F09548(ref, createHandle, dependencies) {\r\n    Interop_reactApi.useImperativeHandle(ref, createHandle, dependencies);\r\n}\r\n\r\nexport function useFeliz_React__React_useState_Static_1505(initial) {\r\n    return Interop_reactApi.useState(initial);\r\n}\r\n\r\nexport const Feliz_React__React_useStateWithUpdater_Static_FCFD9EF = useState;\r\n\r\n","import { Record, Union } from \"../fable_modules/fable-library.3.6.2/Types.js\";\r\nimport { lambda_type, record_type, list_type, tuple_type, option_type, string_type, union_type, int32_type } from \"../fable_modules/fable-library.3.6.2/Reflection.js\";\r\nimport { Stat_get_All, CharacterSheet$reflection, makeName, Stat, CharacterSheet, Trait, rules, Stat$reflection, Sex$reflection } from \"../../Lib/Character.fs.js\";\r\nimport { tryFind, empty, ofList } from \"../fable_modules/fable-library.3.6.2/Map.js\";\r\nimport { length as length_1, item, empty as empty_1, cons, mapIndexed, sortDescending, take, initialize, sum, head, tail, isEmpty, ofArray, singleton, choose, fold, map } from \"../fable_modules/fable-library.3.6.2/List.js\";\r\nimport { List_groupBy } from \"../fable_modules/fable-library.3.6.2/Seq2.js\";\r\nimport { partialApply, createObj, comparePrimitives, compare, safeHash, equals } from \"../fable_modules/fable-library.3.6.2/Util.js\";\r\nimport { toSetting } from \"../../Lib/DerivedTraits.fs.js\";\r\nimport { ofList as ofList_1 } from \"../fable_modules/fable-library.3.6.2/Set.js\";\r\nimport { tuple2, thunk1, rand, $007CLookup$007C_$007C } from \"../../Lib/Common.fs.js\";\r\nimport { empty as empty_2, append, filter, length, map as map_2, singleton as singleton_1, collect, delay, toList } from \"../fable_modules/fable-library.3.6.2/Seq.js\";\r\nimport { rangeDouble } from \"../fable_modules/fable-library.3.6.2/Range.js\";\r\nimport { Cmd_OfFunc_result } from \"../fable_modules/Fable.Elmish.3.1.0/cmd.fs.js\";\r\nimport { value as value_53, map as map_1 } from \"../fable_modules/fable-library.3.6.2/Option.js\";\r\nimport { getItemFromDict } from \"../fable_modules/fable-library.3.6.2/MapUtil.js\";\r\nimport { FunctionComponent_Of_Z5A158BBF } from \"../fable_modules/Fable.React.7.4.0/Fable.React.FunctionComponent.fs.js\";\r\nimport { useReact_useRef_1505 } from \"../fable_modules/Feliz.1.61.0/React.fs.js\";\r\nimport { Interop_reactApi } from \"../fable_modules/Feliz.1.61.0/Interop.fs.js\";\r\nimport { createElement } from \"react\";\r\nimport * as react from \"react\";\r\nimport { interpolate, toText } from \"../fable_modules/fable-library.3.6.2/String.js\";\r\nimport { Helpers_equalsButFunctions } from \"../fable_modules/Fable.React.7.4.0/Fable.React.Helpers.fs.js\";\r\n\r\nexport class Interaction_Mode extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"CumulativeFrom\", \"Assign\"];\r\n    }\r\n}\r\n\r\nexport function Interaction_Mode$reflection() {\r\n    return union_type(\"Chargen.Interaction.Mode\", [], Interaction_Mode, () => [[[\"min\", int32_type], [\"max\", int32_type]], []]);\r\n}\r\n\r\nexport class Interaction_Draft extends Record {\r\n    constructor(name, nationalOrigin, sex, allocations, originalRolls, mode) {\r\n        super();\r\n        this.name = name;\r\n        this.nationalOrigin = nationalOrigin;\r\n        this.sex = sex;\r\n        this.allocations = allocations;\r\n        this.originalRolls = originalRolls;\r\n        this.mode = mode;\r\n    }\r\n}\r\n\r\nexport function Interaction_Draft$reflection() {\r\n    return record_type(\"Chargen.Interaction.Draft\", [], Interaction_Draft, () => [[\"name\", string_type], [\"nationalOrigin\", string_type], [\"sex\", Sex$reflection()], [\"allocations\", list_type(tuple_type(int32_type, option_type(Stat$reflection())))], [\"originalRolls\", list_type(int32_type)], [\"mode\", Interaction_Mode$reflection()]]);\r\n}\r\n\r\nexport function Interaction_addUpStats(allocations) {\r\n    return ofList(map((tupledArg) => [tupledArg[0], fold((x_1, y_1) => (x_1 + y_1), 0, map((tuple_1) => tuple_1[0], tupledArg[1]))], List_groupBy((tuple) => tuple[1], choose((_arg1) => {\r\n        if (_arg1[1] != null) {\r\n            return [_arg1[0], _arg1[1]];\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, allocations), {\r\n        Equals: (x, y) => equals(x, y),\r\n        GetHashCode: (x) => safeHash(x),\r\n    })));\r\n}\r\n\r\nexport function Interaction_ofDraft(draft) {\r\n    const matchValue = Interaction_addUpStats(draft.allocations);\r\n    let pattern_matching_result, cha, con, dex, int, str, wis;\r\n    const activePatternResult13721 = $007CLookup$007C_$007C(new Stat(0), matchValue);\r\n    if (activePatternResult13721 != null) {\r\n        const activePatternResult13722 = $007CLookup$007C_$007C(new Stat(1), matchValue);\r\n        if (activePatternResult13722 != null) {\r\n            const activePatternResult13723 = $007CLookup$007C_$007C(new Stat(2), matchValue);\r\n            if (activePatternResult13723 != null) {\r\n                const activePatternResult13724 = $007CLookup$007C_$007C(new Stat(3), matchValue);\r\n                if (activePatternResult13724 != null) {\r\n                    const activePatternResult13725 = $007CLookup$007C_$007C(new Stat(4), matchValue);\r\n                    if (activePatternResult13725 != null) {\r\n                        const activePatternResult13726 = $007CLookup$007C_$007C(new Stat(5), matchValue);\r\n                        if (activePatternResult13726 != null) {\r\n                            pattern_matching_result = 0;\r\n                            cha = activePatternResult13726;\r\n                            con = activePatternResult13723;\r\n                            dex = activePatternResult13722;\r\n                            int = activePatternResult13724;\r\n                            str = activePatternResult13721;\r\n                            wis = activePatternResult13725;\r\n                        }\r\n                        else {\r\n                            pattern_matching_result = 1;\r\n                        }\r\n                    }\r\n                    else {\r\n                        pattern_matching_result = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    pattern_matching_result = 1;\r\n                }\r\n            }\r\n            else {\r\n                pattern_matching_result = 1;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return new CharacterSheet(draft.name, draft.nationalOrigin, draft.sex, str, dex, con, int, wis, cha, draft.originalRolls, toSetting((elements) => ofList_1(elements, {\r\n                Compare: (x, y) => compare(x, y),\r\n            }), rules, singleton(new Trait(0)), empty()));\r\n        }\r\n        case 1: {\r\n            return void 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport const Interaction_d = (x) => rand(x);\r\n\r\nexport function Interaction_inOrder(draft) {\r\n    const matchValue = draft.allocations;\r\n    let pattern_matching_result, cha, con, dex, int, str, wis;\r\n    if (!isEmpty(matchValue)) {\r\n        if (!isEmpty(tail(matchValue))) {\r\n            if (!isEmpty(tail(tail(matchValue)))) {\r\n                if (!isEmpty(tail(tail(tail(matchValue))))) {\r\n                    if (!isEmpty(tail(tail(tail(tail(matchValue)))))) {\r\n                        if (!isEmpty(tail(tail(tail(tail(tail(matchValue))))))) {\r\n                            if (isEmpty(tail(tail(tail(tail(tail(tail(matchValue)))))))) {\r\n                                pattern_matching_result = 0;\r\n                                cha = head(tail(tail(tail(tail(tail(matchValue))))))[0];\r\n                                con = head(tail(tail(matchValue)))[0];\r\n                                dex = head(tail(matchValue))[0];\r\n                                int = head(tail(tail(tail(matchValue))))[0];\r\n                                str = head(matchValue)[0];\r\n                                wis = head(tail(tail(tail(tail(matchValue)))))[0];\r\n                            }\r\n                            else {\r\n                                pattern_matching_result = 1;\r\n                            }\r\n                        }\r\n                        else {\r\n                            pattern_matching_result = 1;\r\n                        }\r\n                    }\r\n                    else {\r\n                        pattern_matching_result = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    pattern_matching_result = 1;\r\n                }\r\n            }\r\n            else {\r\n                pattern_matching_result = 1;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return new Interaction_Draft(draft.name, draft.nationalOrigin, draft.sex, map((tupledArg) => [tupledArg[0], tupledArg[1]], ofArray([[str, new Stat(0)], [dex, new Stat(1)], [con, new Stat(2)], [int, new Stat(3)], [wis, new Stat(4)], [cha, new Stat(5)]])), draft.originalRolls, draft.mode);\r\n        }\r\n        case 1: {\r\n            return draft;\r\n        }\r\n    }\r\n}\r\n\r\nexport function Interaction_roll3d6InOrder(assign) {\r\n    return Interaction_inOrder(assign(toList(delay(() => collect((matchValue) => singleton_1(sum(initialize(3, (arg20$0040) => thunk1(Interaction_d, 6, arg20$0040)), {\r\n        GetZero: () => 0,\r\n        Add: (x, y) => (x + y),\r\n    })), rangeDouble(1, 1, 6))))));\r\n}\r\n\r\nexport function Interaction_roll4d6k3(assign) {\r\n    return assign(toList(delay(() => collect((matchValue) => singleton_1(sum(take(3, sortDescending(initialize(4, (arg20$0040) => thunk1(Interaction_d, 6, arg20$0040)), {\r\n        Compare: (x, y) => comparePrimitives(x, y),\r\n    })), {\r\n        GetZero: () => 0,\r\n        Add: (x_1, y_1) => (x_1 + y_1),\r\n    })), rangeDouble(1, 1, 6)))));\r\n}\r\n\r\nexport function Interaction_rollPHBMethodVI(assign) {\r\n    const inputRecord = assign(toList(delay(() => collect((matchValue) => singleton_1(Interaction_d(6)), rangeDouble(1, 1, 7)))));\r\n    return new Interaction_Draft(inputRecord.name, inputRecord.nationalOrigin, inputRecord.sex, inputRecord.allocations, inputRecord.originalRolls, new Interaction_Mode(0, 8, 18));\r\n}\r\n\r\nexport function Interaction_darkSunMethodI(assign) {\r\n    return Interaction_inOrder(assign(toList(delay(() => collect((matchValue) => singleton_1(4 + sum(initialize(4, (arg20$0040) => thunk1(Interaction_d, 4, arg20$0040)), {\r\n        GetZero: () => 0,\r\n        Add: (x, y) => (x + y),\r\n    })), rangeDouble(1, 1, 6))))));\r\n}\r\n\r\nexport function Interaction_darkSun6d4(assign) {\r\n    return assign(toList(delay(() => collect((matchValue) => singleton_1(sum(take(5, sortDescending(initialize(6, (arg20$0040) => thunk1(Interaction_d, 4, arg20$0040)), {\r\n        Compare: (x, y) => comparePrimitives(x, y),\r\n    })), {\r\n        GetZero: () => 0,\r\n        Add: (x_1, y_1) => (x_1 + y_1),\r\n    })), rangeDouble(1, 1, 6)))));\r\n}\r\n\r\nexport function Interaction_darkSunMethodV(assign) {\r\n    const inputRecord = assign(toList(delay(() => collect((matchValue) => singleton_1(Interaction_d(4)), rangeDouble(1, 1, 10)))));\r\n    return new Interaction_Draft(inputRecord.name, inputRecord.nationalOrigin, inputRecord.sex, inputRecord.allocations, inputRecord.originalRolls, new Interaction_Mode(0, 10, 20));\r\n}\r\n\r\nexport function Interaction_unassign(stat, draft) {\r\n    return new Interaction_Draft(draft.name, draft.nationalOrigin, draft.sex, map((_arg1) => {\r\n        let pattern_matching_result, ix_1, stat$0027_1;\r\n        if (_arg1[1] != null) {\r\n            if (equals(_arg1[1], stat)) {\r\n                pattern_matching_result = 0;\r\n                ix_1 = _arg1[0];\r\n                stat$0027_1 = _arg1[1];\r\n            }\r\n            else {\r\n                pattern_matching_result = 1;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return [ix_1, void 0];\r\n            }\r\n            case 1: {\r\n                return _arg1;\r\n            }\r\n        }\r\n    }, draft.allocations), draft.originalRolls, draft.mode);\r\n}\r\n\r\nexport function Interaction_assign(rollIndex, stat, draft) {\r\n    let allocations, matchValue, recur;\r\n    return new Interaction_Draft(draft.name, draft.nationalOrigin, draft.sex, (allocations = mapIndexed((i, unchanged) => {\r\n        let s;\r\n        const unchanged_1 = unchanged;\r\n        const value = unchanged_1[0];\r\n        const currentStat = unchanged_1[1];\r\n        if (i === rollIndex) {\r\n            return [value, stat];\r\n        }\r\n        else {\r\n            let pattern_matching_result;\r\n            if (currentStat != null) {\r\n                if ((s = currentStat, equals(draft.mode, new Interaction_Mode(1)) && equals(stat, s))) {\r\n                    pattern_matching_result = 0;\r\n                }\r\n                else {\r\n                    pattern_matching_result = 1;\r\n                }\r\n            }\r\n            else {\r\n                pattern_matching_result = 1;\r\n            }\r\n            switch (pattern_matching_result) {\r\n                case 0: {\r\n                    return [value, void 0];\r\n                }\r\n                case 1: {\r\n                    return unchanged_1;\r\n                }\r\n            }\r\n        }\r\n    }, draft.allocations), (matchValue = draft.mode, (matchValue.tag === 0) ? ((recur = ((totalSoFar, ix, _arg1) => {\r\n        if (!isEmpty(_arg1)) {\r\n            if (ix === rollIndex) {\r\n                return cons(head(_arg1), recur(totalSoFar, ix + 1, tail(_arg1)));\r\n            }\r\n            else {\r\n                let pattern_matching_result_1, rest_3, stat$0027_1, unchanged_5, value_2;\r\n                if (!isEmpty(_arg1)) {\r\n                    if (head(_arg1)[1] != null) {\r\n                        if (equals(head(_arg1)[1], stat)) {\r\n                            pattern_matching_result_1 = 0;\r\n                            rest_3 = tail(_arg1);\r\n                            stat$0027_1 = head(_arg1)[1];\r\n                            unchanged_5 = head(_arg1);\r\n                            value_2 = head(_arg1)[0];\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_1 = 1;\r\n                        }\r\n                    }\r\n                    else {\r\n                        pattern_matching_result_1 = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    pattern_matching_result_1 = 1;\r\n                }\r\n                switch (pattern_matching_result_1) {\r\n                    case 0: {\r\n                        if ((totalSoFar + value_2) <= matchValue.fields[1]) {\r\n                            return cons(unchanged_5, recur(totalSoFar + value_2, ix + 1, rest_3));\r\n                        }\r\n                        else {\r\n                            return cons([value_2, void 0], recur(totalSoFar, ix + 1, rest_3));\r\n                        }\r\n                    }\r\n                    case 1: {\r\n                        if (!isEmpty(_arg1)) {\r\n                            return cons(head(_arg1), recur(totalSoFar, ix + 1, tail(_arg1)));\r\n                        }\r\n                        else {\r\n                            throw (new Error(\"Match failure\"));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return empty_1();\r\n        }\r\n    }), recur(matchValue.fields[0] + item(rollIndex, allocations)[0], 0, allocations))) : allocations)), draft.originalRolls, draft.mode);\r\n}\r\n\r\nexport function Interaction_create(method) {\r\n    const patternInput = makeName();\r\n    return method((rolls) => (new Interaction_Draft(patternInput[2], patternInput[1], patternInput[0], map((x) => [x, void 0], rolls), rolls, new Interaction_Mode(1))));\r\n}\r\n\r\nexport class View_ChargenMethod extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Roll3d6InOrder\", \"Roll4d6k3\", \"RollPHBMethodVI\", \"DarkSunMethodI\", \"DarkSun6d4\", \"DarkSunMethodV\"];\r\n    }\r\n}\r\n\r\nexport function View_ChargenMethod$reflection() {\r\n    return union_type(\"Chargen.View.ChargenMethod\", [], View_ChargenMethod, () => [[], [], [], [], [], []]);\r\n}\r\n\r\nexport class View_MethodInfo extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"MethodInfo\"];\r\n    }\r\n}\r\n\r\nexport function View_MethodInfo$reflection() {\r\n    return union_type(\"Chargen.View.MethodInfo\", [], View_MethodInfo, () => [[[\"name\", string_type], [\"Item2\", lambda_type(lambda_type(list_type(int32_type), Interaction_Draft$reflection()), Interaction_Draft$reflection())]]]);\r\n}\r\n\r\nexport function View_ChargenMethod_get_All() {\r\n    return ofArray([new View_ChargenMethod(0), new View_ChargenMethod(1), new View_ChargenMethod(2), new View_ChargenMethod(3), new View_ChargenMethod(4), new View_ChargenMethod(5)]);\r\n}\r\n\r\nexport function View_ChargenMethod__get_info(this$) {\r\n    const tupledArg = (this$.tag === 1) ? [\"4d6 drop lowest\", (assign_1) => Interaction_roll4d6k3(assign_1)] : ((this$.tag === 2) ? [\"7d6, assign to taste\", (assign_2) => Interaction_rollPHBMethodVI(assign_2)] : ((this$.tag === 3) ? [\"Dark Sun default\", (assign_3) => Interaction_darkSunMethodI(assign_3)] : ((this$.tag === 4) ? [\"Dark Sun 6d4 drop lowest\", (assign_4) => Interaction_darkSun6d4(assign_4)] : ((this$.tag === 5) ? [\"Dark Sun Method V\", (assign_5) => Interaction_darkSunMethodV(assign_5)] : [\"3d6 in order\", (assign) => Interaction_roll3d6InOrder(assign)]))));\r\n    return new View_MethodInfo(0, tupledArg[0], tupledArg[1]);\r\n}\r\n\r\nexport function View_MethodInfo__get_f(this$) {\r\n    return this$.fields[1];\r\n}\r\n\r\nexport function View_MethodInfo__get_name$0027(this$) {\r\n    return this$.fields[0];\r\n}\r\n\r\nexport class View_Model extends Record {\r\n    constructor(draft, export$, method) {\r\n        super();\r\n        this.draft = draft;\r\n        this.export = export$;\r\n        this.method = method;\r\n    }\r\n}\r\n\r\nexport function View_Model$reflection() {\r\n    return record_type(\"Chargen.View.Model\", [], View_Model, () => [[\"draft\", option_type(Interaction_Draft$reflection())], [\"export\", option_type(CharacterSheet$reflection())], [\"method\", View_ChargenMethod$reflection()]]);\r\n}\r\n\r\nexport class View_Msg extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Done\", \"Cancel\", \"Reroll\", \"SetMethod\", \"AssignRoll\", \"UnassignRolls\"];\r\n    }\r\n}\r\n\r\nexport function View_Msg$reflection() {\r\n    return union_type(\"Chargen.View.Msg\", [], View_Msg, () => [[[\"Item\", CharacterSheet$reflection()]], [], [], [[\"Item\", View_ChargenMethod$reflection()]], [[\"ix\", int32_type], [\"stat\", Stat$reflection()]], [[\"stat\", Stat$reflection()]]]);\r\n}\r\n\r\nexport function View_init(_arg1) {\r\n    return [new View_Model(void 0, void 0, head(View_ChargenMethod_get_All())), Cmd_OfFunc_result(new View_Msg(2))];\r\n}\r\n\r\nexport function View_update(finish, msg, model) {\r\n    switch (msg.tag) {\r\n        case 0: {\r\n            return [model, finish(msg.fields[0])];\r\n        }\r\n        case 2: {\r\n            const char_1 = Interaction_create(View_MethodInfo__get_f(View_ChargenMethod__get_info(model.method)));\r\n            return [new View_Model(char_1, Interaction_ofDraft(char_1), model.method), empty_1()];\r\n        }\r\n        case 3: {\r\n            return [new View_Model(model.draft, model.export, msg.fields[0]), empty_1()];\r\n        }\r\n        case 4: {\r\n            return [new View_Model(map_1((draft) => Interaction_assign(msg.fields[0], msg.fields[1], draft), model.draft), model.export, model.method), empty_1()];\r\n        }\r\n        case 5: {\r\n            return [new View_Model(map_1((draft_1) => Interaction_unassign(msg.fields[0], draft_1), model.draft), model.export, model.method), empty_1()];\r\n        }\r\n        default: {\r\n            return [model, finish(void 0)];\r\n        }\r\n    }\r\n}\r\n\r\nexport const View_getPercentile = (() => {\r\n    const normalPersonDistribution = toList(delay(() => collect((x) => collect((y) => map_2((z) => ((x + y) + z), rangeDouble(1, 1, 6)), rangeDouble(1, 1, 6)), rangeDouble(1, 1, 6))));\r\n    const lessThanEqualGroups = new Map(toList(delay(() => collect((x_1) => singleton_1([x_1, length(filter((stat) => (stat <= x_1), normalPersonDistribution)) / length_1(normalPersonDistribution)]), rangeDouble(1, 1, 25)))));\r\n    return (statValue) => getItemFromDict(lessThanEqualGroups, statValue);\r\n})();\r\n\r\nexport const View_view = FunctionComponent_Of_Z5A158BBF((arg) => {\r\n    const model = arg.model;\r\n    const dispatch = arg.dispatch;\r\n    const width = ((~(~window.innerWidth)) - 80) | 0;\r\n    const myStage = useReact_useRef_1505(void 0);\r\n    const myLayer = useReact_useRef_1505(void 0);\r\n    const dragLayer = useReact_useRef_1505(void 0);\r\n    let id = 0;\r\n    const class$0027 = (f, className, children) => f(ofArray([[\"className\", className], [\"children\", Interop_reactApi.Children.toArray(Array.from(children))]]));\r\n    let recentDrag = void 0;\r\n    return class$0027((arg00) => createElement(\"div\", createObj(arg00)), \"charGen\", toList(delay(() => append(singleton_1(class$0027((arg00_1) => createElement(\"div\", createObj(arg00_1)), \"Title\", singleton(\"Create a character!\"))), delay(() => {\r\n        let matchValue, matchValue_1, draft, char;\r\n        const dragOverHandler = (stat, e) => {\r\n            recentDrag = stat;\r\n            e.preventDefault();\r\n        };\r\n        const dragEnterHandler = (e_1) => {\r\n            e_1.preventDefault();\r\n        };\r\n        const currentStat = (stat_1, statValue) => {\r\n            if (statValue == null) {\r\n                return createElement(\"span\", {\r\n                    children: `${stat_1}     `,\r\n                    onDragOver: partialApply(1, dragOverHandler, [stat_1]),\r\n                    onDragEnter: dragEnterHandler,\r\n                });\r\n            }\r\n            else {\r\n                const statValue_1 = value_53(statValue);\r\n                return createElement(\"span\", {\r\n                    children: `${stat_1} ${statValue_1}`,\r\n                    onDragOver: partialApply(1, dragOverHandler, [stat_1]),\r\n                    onDragEnter: dragEnterHandler,\r\n                    onClick: (_arg1) => {\r\n                        dispatch(new View_Msg(5, stat_1));\r\n                    },\r\n                });\r\n            }\r\n        };\r\n        const describe = (stat_2, statValue_2) => {\r\n            const term = (stat_2.tag === 1) ? \"Faster\" : ((stat_2.tag === 2) ? \"Tougher\" : ((stat_2.tag === 3) ? \"Smarter\" : ((stat_2.tag === 4) ? \"Wiser\" : ((stat_2.tag === 5) ? \"More charismatic\" : \"Stronger\"))));\r\n            return react.createElement(react.Fragment, {}, currentStat(stat_2, statValue_2), createElement(\"span\", {\r\n                children: toText(interpolate(\"%P() than %0.1f%P()%% of humanity\", [term, View_getPercentile(statValue_2) * 100])),\r\n                onDragOver: partialApply(1, dragOverHandler, [stat_2]),\r\n                onDragEnter: dragEnterHandler,\r\n            }));\r\n        };\r\n        return append((matchValue = model.export, (matchValue == null) ? ((matchValue_1 = model.draft, (matchValue_1 == null) ? ((empty_2())) : ((draft = matchValue_1, singleton_1(class$0027((arg00_5) => createElement(\"div\", createObj(arg00_5)), \"middle\", ofArray([class$0027((arg00_6) => createElement(\"div\", createObj(arg00_6)), \"characterHeader\", singleton(`${draft.name} from ${draft.nationalOrigin} (${draft.sex})`)), class$0027((arg00_7) => createElement(\"div\", createObj(arg00_7)), \"assignedStats\", toList(delay(() => {\r\n            const assignments = Interaction_addUpStats(draft.allocations);\r\n            return collect((stat_4) => {\r\n                let v_1, v;\r\n                let matchValue_3;\r\n                const matchValue_2 = [tryFind(stat_4, assignments), draft.mode];\r\n                matchValue_3 = ((matchValue_2[0] != null) ? ((matchValue_2[1].tag === 1) ? ((v_1 = (matchValue_2[0] | 0), v_1)) : ((v = (matchValue_2[0] | 0), matchValue_2[1].fields[0] + v))) : ((matchValue_2[1].tag === 1) ? (void 0) : matchValue_2[1].fields[0]));\r\n                return (matchValue_3 == null) ? append(singleton_1(currentStat(stat_4, void 0)), delay(() => singleton_1(createElement(\"span\", {})))) : singleton_1(describe(stat_4, matchValue_3));\r\n            }, Stat_get_All());\r\n        }))), class$0027((arg00_8) => createElement(\"div\", createObj(arg00_8)), \"statRolls\", toList(delay(() => append(singleton_1(createElement(\"span\", {\r\n            children: \"Unassigned (drag and drop)\",\r\n        })), delay(() => collect((matchValue_4) => ((matchValue_4[1][1] != null) ? singleton_1(createElement(\"span\", {\r\n            draggable: true,\r\n            className: \"roll\",\r\n        })) : singleton_1(createElement(\"span\", {\r\n            className: \"roll\",\r\n            children: Interop_reactApi.Children.toArray([createElement(\"span\", {\r\n                children: matchValue_4[1][0],\r\n                draggable: true,\r\n                onDragEnd: (ev) => {\r\n                    if (recentDrag == null) {\r\n                    }\r\n                    else {\r\n                        dispatch(new View_Msg(4, matchValue_4[0], recentDrag));\r\n                    }\r\n                },\r\n                onDragStart: (e_2) => {\r\n                    e_2.dataTransfer.setData(\"text/html\", \"dummy\");\r\n                },\r\n            })]),\r\n        }))), mapIndexed((x, y) => tuple2(x, y), draft.allocations)))))))]))))))) : ((char = matchValue, singleton_1(class$0027((arg00_2) => createElement(\"div\", createObj(arg00_2)), \"middle\", ofArray([class$0027((arg00_3) => createElement(\"div\", createObj(arg00_3)), \"characterHeader\", singleton(char.name)), class$0027((arg00_4) => createElement(\"div\", createObj(arg00_4)), \"assignedStats\", ofArray([describe(new Stat(0), char.Str), describe(new Stat(1), char.Dex), describe(new Stat(2), char.Con), describe(new Stat(3), char.Int), describe(new Stat(4), char.Wis), describe(new Stat(5), char.Cha)]))])))))), delay(() => singleton_1(class$0027((arg00_9) => createElement(\"div\", createObj(arg00_9)), \"footer\", toList(delay(() => append(singleton_1(createElement(\"button\", {\r\n            children: \"Reroll\",\r\n            onClick: (_arg2) => {\r\n                dispatch(new View_Msg(2));\r\n            },\r\n        })), delay(() => collect((matchValue_5) => {\r\n            let children_2;\r\n            const method = matchValue_5[1];\r\n            return singleton_1((children_2 = ofArray([createElement(\"input\", {\r\n                type: \"radio\",\r\n                [\"aria-checked\"]: equals(model.method, method),\r\n                checked: equals(model.method, method),\r\n                id: View_MethodInfo__get_name$0027(View_ChargenMethod__get_info(method)),\r\n                onClick: (_arg3) => {\r\n                    dispatch(new View_Msg(3, method));\r\n                },\r\n                readOnly: true,\r\n            }), createElement(\"label\", {\r\n                htmlFor: View_MethodInfo__get_name$0027(View_ChargenMethod__get_info(method)),\r\n                children: View_MethodInfo__get_name$0027(View_ChargenMethod__get_info(method)),\r\n            })]), createElement(\"div\", {\r\n                children: Interop_reactApi.Children.toArray(Array.from(children_2)),\r\n            })));\r\n        }, mapIndexed((i, x_1) => [i, x_1], View_ChargenMethod_get_All()))))))))));\r\n    })))));\r\n}, void 0, (x_2, y_1) => Helpers_equalsButFunctions(x_2, y_1), void 0, \"view\", \"D:\\\\code\\\\ShiningSword\\\\src\\\\ShiningSword\\\\UI\\\\Chargen.fs\", 238);\r\n\r\n","import { Union } from \"../fable-library.3.6.2/Types.js\";\r\nimport { class_type, union_type, int32_type, array_type } from \"../fable-library.3.6.2/Reflection.js\";\r\nimport { fill } from \"../fable-library.3.6.2/Array.js\";\r\nimport { comparePrimitives, max } from \"../fable-library.3.6.2/Util.js\";\r\nimport { some } from \"../fable-library.3.6.2/Option.js\";\r\nimport { singleton, collect, take, skip, append, delay } from \"../fable-library.3.6.2/Seq.js\";\r\nimport { rangeDouble } from \"../fable-library.3.6.2/Range.js\";\r\n\r\nexport class RingState$1 extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Writable\", \"ReadWritable\"];\r\n    }\r\n}\r\n\r\nexport function RingState$1$reflection(gen0) {\r\n    return union_type(\"Elmish.RingState`1\", [gen0], RingState$1, () => [[[\"wx\", array_type(gen0)], [\"ix\", int32_type]], [[\"rw\", array_type(gen0)], [\"wix\", int32_type], [\"rix\", int32_type]]]);\r\n}\r\n\r\nexport class RingBuffer$1 {\r\n    constructor(size) {\r\n        this.state = (new RingState$1(0, fill(new Array(max((x, y) => comparePrimitives(x, y), size, 10)), 0, max((x, y) => comparePrimitives(x, y), size, 10), null), 0));\r\n    }\r\n}\r\n\r\nexport function RingBuffer$1$reflection(gen0) {\r\n    return class_type(\"Elmish.RingBuffer`1\", [gen0], RingBuffer$1);\r\n}\r\n\r\nexport function RingBuffer$1_$ctor_Z524259A4(size) {\r\n    return new RingBuffer$1(size);\r\n}\r\n\r\nexport function RingBuffer$1__Pop(__) {\r\n    const matchValue = __.state;\r\n    if (matchValue.tag === 1) {\r\n        const wix = matchValue.fields[1] | 0;\r\n        const rix = matchValue.fields[2] | 0;\r\n        const items = matchValue.fields[0];\r\n        const rix$0027 = ((rix + 1) % items.length) | 0;\r\n        if (rix$0027 === wix) {\r\n            __.state = (new RingState$1(0, items, wix));\r\n        }\r\n        else {\r\n            __.state = (new RingState$1(1, items, wix, rix$0027));\r\n        }\r\n        return some(items[rix]);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function RingBuffer$1__Push_2B595(__, item) {\r\n    const matchValue = __.state;\r\n    if (matchValue.tag === 1) {\r\n        const wix_1 = matchValue.fields[1] | 0;\r\n        const rix = matchValue.fields[2] | 0;\r\n        const items_1 = matchValue.fields[0];\r\n        items_1[wix_1] = item;\r\n        const wix$0027 = ((wix_1 + 1) % items_1.length) | 0;\r\n        if (wix$0027 === rix) {\r\n            __.state = (new RingState$1(1, RingBuffer$1__doubleSize(__, rix, items_1), items_1.length, 0));\r\n        }\r\n        else {\r\n            __.state = (new RingState$1(1, items_1, wix$0027, rix));\r\n        }\r\n    }\r\n    else {\r\n        const ix = matchValue.fields[1] | 0;\r\n        const items = matchValue.fields[0];\r\n        items[ix] = item;\r\n        const wix = ((ix + 1) % items.length) | 0;\r\n        __.state = (new RingState$1(1, items, wix, ix));\r\n    }\r\n}\r\n\r\nfunction RingBuffer$1__doubleSize(this$, ix, items) {\r\n    return Array.from(delay(() => append(skip(ix, items), delay(() => append(take(ix, items), delay(() => collect((matchValue) => singleton(null), rangeDouble(0, 1, items.length))))))));\r\n}\r\n\r\n","import { Record } from \"../fable-library.3.6.2/Types.js\";\r\nimport { record_type, class_type, string_type, tuple_type, list_type, lambda_type, unit_type } from \"../fable-library.3.6.2/Reflection.js\";\r\nimport { Cmd_exec, Cmd_batch, Cmd_none } from \"./cmd.fs.js\";\r\nimport { Log_toConsole, Log_onError } from \"./prelude.fs.js\";\r\nimport { curry, partialApply, uncurry } from \"../fable-library.3.6.2/Util.js\";\r\nimport { ofArray } from \"../fable-library.3.6.2/List.js\";\r\nimport { RingBuffer$1__Pop, RingBuffer$1__Push_2B595, RingBuffer$1_$ctor_Z524259A4 } from \"./ring.fs.js\";\r\nimport { value as value_1, some } from \"../fable-library.3.6.2/Option.js\";\r\nimport { printf, toText } from \"../fable-library.3.6.2/String.js\";\r\n\r\nexport class Program$4 extends Record {\r\n    constructor(init, update, subscribe, view, setState, onError, syncDispatch) {\r\n        super();\r\n        this.init = init;\r\n        this.update = update;\r\n        this.subscribe = subscribe;\r\n        this.view = view;\r\n        this.setState = setState;\r\n        this.onError = onError;\r\n        this.syncDispatch = syncDispatch;\r\n    }\r\n}\r\n\r\nexport function Program$4$reflection(gen0, gen1, gen2, gen3) {\r\n    return record_type(\"Elmish.Program`4\", [gen0, gen1, gen2, gen3], Program$4, () => [[\"init\", lambda_type(gen0, tuple_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type))))], [\"update\", lambda_type(gen2, lambda_type(gen1, tuple_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type)))))], [\"subscribe\", lambda_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type)))], [\"view\", lambda_type(gen1, lambda_type(lambda_type(gen2, unit_type), gen3))], [\"setState\", lambda_type(gen1, lambda_type(lambda_type(gen2, unit_type), unit_type))], [\"onError\", lambda_type(tuple_type(string_type, class_type(\"System.Exception\")), unit_type)], [\"syncDispatch\", lambda_type(lambda_type(gen2, unit_type), lambda_type(gen2, unit_type))]]);\r\n}\r\n\r\nexport function ProgramModule_mkProgram(init, update, view) {\r\n    return new Program$4(init, update, (_arg1) => Cmd_none(), view, (model, arg) => {\r\n        view(model, arg);\r\n    }, (tupledArg) => {\r\n        Log_onError(tupledArg[0], tupledArg[1]);\r\n    }, uncurry(2, (x) => x));\r\n}\r\n\r\nexport function ProgramModule_mkSimple(init, update, view) {\r\n    return new Program$4((arg) => [init(arg), Cmd_none()], (msg, arg_1) => [update(msg, arg_1), Cmd_none()], (_arg1) => Cmd_none(), view, (model, arg_2) => {\r\n        view(model, arg_2);\r\n    }, (tupledArg) => {\r\n        Log_onError(tupledArg[0], tupledArg[1]);\r\n    }, uncurry(2, (x) => x));\r\n}\r\n\r\nexport function ProgramModule_withSubscription(subscribe, program) {\r\n    return new Program$4(program.init, program.update, (model) => Cmd_batch(ofArray([program.subscribe(model), subscribe(model)])), program.view, program.setState, program.onError, program.syncDispatch);\r\n}\r\n\r\nexport function ProgramModule_withConsoleTrace(program) {\r\n    return new Program$4((arg) => {\r\n        const patternInput = program.init(arg);\r\n        const initModel = patternInput[0];\r\n        Log_toConsole(\"Initial state:\", initModel);\r\n        return [initModel, patternInput[1]];\r\n    }, (msg, model) => {\r\n        Log_toConsole(\"New message:\", msg);\r\n        const patternInput_1 = program.update(msg, model);\r\n        const newModel = patternInput_1[0];\r\n        Log_toConsole(\"Updated state:\", newModel);\r\n        return [newModel, patternInput_1[1]];\r\n    }, program.subscribe, program.view, program.setState, program.onError, program.syncDispatch);\r\n}\r\n\r\nexport function ProgramModule_withTrace(trace, program) {\r\n    return new Program$4(program.init, (msg, model) => {\r\n        const patternInput = program.update(msg, model);\r\n        const state = patternInput[0];\r\n        trace(msg, state);\r\n        return [state, patternInput[1]];\r\n    }, program.subscribe, program.view, program.setState, program.onError, program.syncDispatch);\r\n}\r\n\r\nexport function ProgramModule_withErrorHandler(onError, program) {\r\n    return new Program$4(program.init, program.update, program.subscribe, program.view, program.setState, onError, program.syncDispatch);\r\n}\r\n\r\nexport function ProgramModule_mapErrorHandler(map, program) {\r\n    return new Program$4(program.init, program.update, program.subscribe, program.view, program.setState, partialApply(1, map, [program.onError]), program.syncDispatch);\r\n}\r\n\r\nexport function ProgramModule_onError(program) {\r\n    return program.onError;\r\n}\r\n\r\nexport function ProgramModule_withSetState(setState, program) {\r\n    return new Program$4(program.init, program.update, program.subscribe, program.view, setState, program.onError, program.syncDispatch);\r\n}\r\n\r\nexport function ProgramModule_setState(program) {\r\n    return curry(2, program.setState);\r\n}\r\n\r\nexport function ProgramModule_view(program) {\r\n    return curry(2, program.view);\r\n}\r\n\r\nexport function ProgramModule_withSyncDispatch(syncDispatch, program) {\r\n    return new Program$4(program.init, program.update, program.subscribe, program.view, program.setState, program.onError, syncDispatch);\r\n}\r\n\r\nexport function ProgramModule_map(mapInit, mapUpdate, mapView, mapSetState, mapSubscribe, program) {\r\n    const init = partialApply(1, mapInit, [program.init]);\r\n    const update = partialApply(2, mapUpdate, [program.update]);\r\n    const view = partialApply(2, mapView, [program.view]);\r\n    const setState = partialApply(2, mapSetState, [program.setState]);\r\n    return new Program$4(init, uncurry(2, update), partialApply(1, mapSubscribe, [program.subscribe]), uncurry(2, view), uncurry(2, setState), program.onError, uncurry(2, (x) => x));\r\n}\r\n\r\nexport function ProgramModule_runWith(arg, program) {\r\n    const patternInput = program.init(arg);\r\n    const model = patternInput[0];\r\n    const rb = RingBuffer$1_$ctor_Z524259A4(10);\r\n    let reentered = false;\r\n    let state = model;\r\n    const dispatch = (msg) => {\r\n        if (reentered) {\r\n            RingBuffer$1__Push_2B595(rb, msg);\r\n        }\r\n        else {\r\n            reentered = true;\r\n            let nextMsg = some(msg);\r\n            while (nextMsg != null) {\r\n                const msg_1 = value_1(nextMsg);\r\n                try {\r\n                    const patternInput_1 = program.update(msg_1, state);\r\n                    const model$0027 = patternInput_1[0];\r\n                    program.setState(model$0027, syncDispatch);\r\n                    Cmd_exec((ex) => {\r\n                        program.onError([toText(printf(\"Error in command while handling: %A\"))(msg_1), ex]);\r\n                    }, syncDispatch, patternInput_1[1]);\r\n                    state = model$0027;\r\n                }\r\n                catch (ex_1) {\r\n                    program.onError([toText(printf(\"Unable to process the message: %A\"))(msg_1), ex_1]);\r\n                }\r\n                nextMsg = RingBuffer$1__Pop(rb);\r\n            }\r\n            reentered = false;\r\n        }\r\n    };\r\n    const syncDispatch = partialApply(1, program.syncDispatch, [dispatch]);\r\n    program.setState(model, syncDispatch);\r\n    Cmd_exec((ex_3) => {\r\n        program.onError([\"Error intitializing:\", ex_3]);\r\n    }, syncDispatch, Cmd_batch(ofArray([(() => {\r\n        try {\r\n            return program.subscribe(model);\r\n        }\r\n        catch (ex_2) {\r\n            program.onError([\"Unable to subscribe:\", ex_2]);\r\n            return Cmd_none();\r\n        }\r\n    })(), patternInput[1]])));\r\n}\r\n\r\nexport function ProgramModule_run(program) {\r\n    ProgramModule_runWith(void 0, program);\r\n}\r\n\r\n","import { Union } from \"../fable-library.3.6.2/Types.js\";\r\nimport { union_type, class_type } from \"../fable-library.3.6.2/Reflection.js\";\r\nimport { ofArray, singleton } from \"../fable-library.3.6.2/List.js\";\r\nimport { Cmd_batch, Cmd_map } from \"../Fable.Elmish.3.1.0/cmd.fs.js\";\r\nimport { ProgramModule_map } from \"../Fable.Elmish.3.1.0/program.fs.js\";\r\n\r\nexport class Navigable$1 extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Change\", \"UserMsg\"];\r\n    }\r\n}\r\n\r\nexport function Navigable$1$reflection(gen0) {\r\n    return union_type(\"Elmish.Navigation.Navigable`1\", [gen0], Navigable$1, () => [[[\"Item\", class_type(\"Browser.Types.Location\")]], [[\"Item\", gen0]]]);\r\n}\r\n\r\nexport function Navigation_modifyUrl(newUrl) {\r\n    return singleton((_arg1) => {\r\n        history.replaceState(void 0, \"\", newUrl);\r\n    });\r\n}\r\n\r\nexport function Navigation_newUrl(newUrl) {\r\n    return singleton((_arg1) => {\r\n        history.pushState(void 0, \"\", newUrl);\r\n        window.dispatchEvent(new CustomEvent(\"NavigatedEvent\"));\r\n    });\r\n}\r\n\r\nexport function Navigation_jump(n) {\r\n    return singleton((_arg1) => {\r\n        history.go(n);\r\n    });\r\n}\r\n\r\nlet ProgramModule_Internal_onChangeRef = (_arg1) => {\r\n    throw (new Error(\"`onChangeRef` has not been initialized.\\nPlease make sure you used Elmish.Navigation.Program.Internal.subscribe\"));\r\n};\r\n\r\nexport function ProgramModule_Internal_subscribe(dispatch) {\r\n    let clo1, clo1_1, clo1_2;\r\n    let lastLocation = void 0;\r\n    ProgramModule_Internal_onChangeRef = ((_arg1) => {\r\n        let value;\r\n        let pattern_matching_result;\r\n        if (lastLocation != null) {\r\n            if (lastLocation === window.location.href) {\r\n                pattern_matching_result = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result = 1;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                value = (void 0);\r\n                break;\r\n            }\r\n            case 1: {\r\n                lastLocation = window.location.href;\r\n                value = dispatch(new Navigable$1(0, window.location));\r\n                break;\r\n            }\r\n        }\r\n        return void 0;\r\n    });\r\n    window.addEventListener(\"popstate\", (clo1 = ProgramModule_Internal_onChangeRef, (arg10) => {\r\n        clo1(arg10);\r\n    }));\r\n    window.addEventListener(\"hashchange\", (clo1_1 = ProgramModule_Internal_onChangeRef, (arg10_1) => {\r\n        clo1_1(arg10_1);\r\n    }));\r\n    window.addEventListener(\"NavigatedEvent\", (clo1_2 = ProgramModule_Internal_onChangeRef, (arg10_2) => {\r\n        clo1_2(arg10_2);\r\n    }));\r\n}\r\n\r\nexport function ProgramModule_Internal_unsubscribe() {\r\n    let clo1, clo1_1, clo1_2;\r\n    window.removeEventListener(\"popstate\", (clo1 = ProgramModule_Internal_onChangeRef, (arg10) => {\r\n        clo1(arg10);\r\n    }));\r\n    window.removeEventListener(\"hashchange\", (clo1_1 = ProgramModule_Internal_onChangeRef, (arg10_1) => {\r\n        clo1_1(arg10_1);\r\n    }));\r\n    window.removeEventListener(\"NavigatedEvent\", (clo1_2 = ProgramModule_Internal_onChangeRef, (arg10_2) => {\r\n        clo1_2(arg10_2);\r\n    }));\r\n}\r\n\r\nexport function ProgramModule_Internal_toNavigableWith(parser, urlUpdate, program, onLocationChange) {\r\n    const map = (tupledArg) => [tupledArg[0], Cmd_map((arg0) => (new Navigable$1(1, arg0)), tupledArg[1])];\r\n    return ProgramModule_map((userInit, unitVar1) => map(userInit(parser(window.location))), (userUpdate, msg, model_1) => map((msg.tag === 1) ? userUpdate(msg.fields[0], model_1) : urlUpdate(parser(msg.fields[0]), model_1)), (userView, model_4, dispatch_1) => userView(model_4, (arg_1) => dispatch_1(new Navigable$1(1, arg_1))), (userSetState, model_3, dispatch) => userSetState(model_3, (arg) => dispatch(new Navigable$1(1, arg))), (userSubscribe, model_2) => Cmd_batch(ofArray([singleton(onLocationChange), Cmd_map((arg0_1) => (new Navigable$1(1, arg0_1)), userSubscribe(model_2))])), program);\r\n}\r\n\r\nexport function ProgramModule_toNavigable(parser, urlUpdate, program) {\r\n    return ProgramModule_Internal_toNavigableWith(parser, urlUpdate, program, (dispatch) => {\r\n        ProgramModule_Internal_subscribe(dispatch);\r\n    });\r\n}\r\n\r\n","import { FSharpRef, Record, Union } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Types.js\";\r\nimport { option_type, record_type, class_type, tuple_type, string_type, union_type, int32_type, obj_type } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Reflection.js\";\r\nimport { contains, ofSeq, FSharpSet_op_Addition, FSharpSet__Contains, FSharpSet__Add, FSharpSet__Remove, empty } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Set.js\";\r\nimport { comparePrimitives, partialApply, compareArrays } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Util.js\";\r\nimport { add, FSharpMap__Add, FSharpMap__TryFind, empty as empty_1 } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Map.js\";\r\nimport { singleton, empty as empty_2, collect, delay, toList } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Seq.js\";\r\nimport { toFail, join, compare, printf, toText, substring } from \"../ShiningSword/fable_modules/fable-library.3.6.2/String.js\";\r\nimport { some, value as value_9 } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Option.js\";\r\nimport { rangeChar } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Range.js\";\r\nimport { tryParse } from \"../ShiningSword/fable_modules/fable-library.3.6.2/Int32.js\";\r\n\r\nexport class ParseResult extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Success\", \"Fail\"];\r\n    }\r\n}\r\n\r\nexport function ParseResult$reflection() {\r\n    return union_type(\"Packrat.ParseResult\", [], ParseResult, () => [[[\"Item1\", obj_type], [\"Item2\", int32_type]], []]);\r\n}\r\n\r\nexport class ParseArgs extends Record {\r\n    constructor(input, active, settled, externalContext) {\r\n        super();\r\n        this.input = input;\r\n        this.active = active;\r\n        this.settled = settled;\r\n        this.externalContext = externalContext;\r\n    }\r\n}\r\n\r\nexport function ParseArgs$reflection() {\r\n    return record_type(\"Packrat.ParseArgs\", [], ParseArgs, () => [[\"input\", string_type], [\"active\", record_type(\"Microsoft.FSharp.Core.FSharpRef`1\", [class_type(\"Microsoft.FSharp.Collections.FSharpSet`1\", [tuple_type(int32_type, int32_type)])], FSharpRef, () => [[\"contents\", class_type(\"Microsoft.FSharp.Collections.FSharpSet`1\", [tuple_type(int32_type, int32_type)])]])], [\"settled\", record_type(\"Microsoft.FSharp.Core.FSharpRef`1\", [class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [tuple_type(int32_type, int32_type), ParseResult$reflection()])], FSharpRef, () => [[\"contents\", class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [tuple_type(int32_type, int32_type), ParseResult$reflection()])]])], [\"externalContext\", option_type(obj_type)]]);\r\n}\r\n\r\nexport function ParseArgs_Init_Z1A8FAE6B(input, externalContext) {\r\n    return [new ParseArgs(input, new FSharpRef(empty({\r\n        Compare: (x, y) => compareArrays(x, y),\r\n    })), new FSharpRef(empty_1()), externalContext), 0];\r\n}\r\n\r\nexport function ParseInputModule_analyze(_arg1_0, _arg1_1) {\r\n    const _arg1 = [_arg1_0, _arg1_1];\r\n    const input = _arg1[0].input;\r\n    const results = toList(delay(() => collect((matchValue) => {\r\n        let arg10_1, input_1, afterPos, startPos, before, after, mid;\r\n        const activePatternResult12215 = matchValue;\r\n        const result = activePatternResult12215[1];\r\n        if (result.tag === 1) {\r\n            return empty_2();\r\n        }\r\n        else {\r\n            return singleton((arg10_1 = ((input_1 = input, (afterPos = (result.fields[1] | 0), (startPos = (activePatternResult12215[0][0] | 0), (before = substring(input_1, 0, startPos), (after = substring(input_1, afterPos), (mid = substring(input_1, startPos, afterPos - startPos), toText(printf(\"%s\\u003c\\u003c\\u003c%s\\u003e\\u003e\\u003e%s\"))(before)(mid)(after)))))))), toText(printf(\"%s %A\"))(arg10_1)(result.fields[0])));\r\n        }\r\n    }, _arg1[0].settled.contents)));\r\n    return [\"...\" + substring(input, _arg1[1]), results];\r\n}\r\n\r\nexport const ParseInputModule_$007CFailureAnalysis$007C = (tupledArg) => ParseInputModule_analyze(tupledArg[0], tupledArg[1]);\r\n\r\nexport function ExternalContextOf(_arg1_0, _arg1_1) {\r\n    const matchValue = _arg1_0.externalContext;\r\n    if (matchValue != null) {\r\n        return some(value_9(matchValue));\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport const nextId = (() => {\r\n    let i = 0;\r\n    return () => {\r\n        i = ((i + 1) | 0);\r\n        return i | 0;\r\n    };\r\n})();\r\n\r\nexport function pack(rule) {\r\n    const id = nextId() | 0;\r\n    return (input) => {\r\n        const pos = input[1] | 0;\r\n        const ctx = input[0];\r\n        const active$0027 = ctx.active.contents;\r\n        const key = [pos, id];\r\n        ctx.active.contents = FSharpSet__Remove(ctx.active.contents, key);\r\n        const matchValue = FSharpMap__TryFind(ctx.settled.contents, key);\r\n        if (matchValue == null) {\r\n            const settled = ctx.settled.contents;\r\n            const active = ctx.active.contents;\r\n            ctx.active.contents = FSharpSet__Add(active, key);\r\n            ctx.settled.contents = FSharpMap__Add(settled, key, new ParseResult(1));\r\n            const evalResult = rule([ctx, pos]);\r\n            const hadLeftRecursion = !FSharpSet__Contains(ctx.active.contents, key);\r\n            ctx.active.contents = FSharpSet__Remove(ctx.active.contents, key);\r\n            const grow_1 = (seed, settled_1) => {\r\n                const grow = (seed_1_mut, settled_2_mut) => {\r\n                    let v_1, rest;\r\n                    grow:\r\n                    while (true) {\r\n                        const seed_1 = seed_1_mut, settled_2 = settled_2_mut;\r\n                        ctx.settled.contents = settled_2;\r\n                        const matchValue_1 = [seed_1, rule([ctx, pos])];\r\n                        let pattern_matching_result, endpos_2, v_2, endpos_3, oldendpos_1, rest_1, v_3;\r\n                        if (matchValue_1[0] != null) {\r\n                            if (matchValue_1[1] != null) {\r\n                                if ((v_1 = matchValue_1[1][0], (rest = matchValue_1[1], matchValue_1[1][1][1] > matchValue_1[0][1]))) {\r\n                                    pattern_matching_result = 1;\r\n                                    endpos_3 = matchValue_1[1][1][1];\r\n                                    oldendpos_1 = matchValue_1[0][1];\r\n                                    rest_1 = matchValue_1[1];\r\n                                    v_3 = matchValue_1[1][0];\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result = 2;\r\n                                }\r\n                            }\r\n                            else {\r\n                                pattern_matching_result = 2;\r\n                            }\r\n                        }\r\n                        else if (matchValue_1[1] != null) {\r\n                            pattern_matching_result = 0;\r\n                            endpos_2 = matchValue_1[1][1][1];\r\n                            v_2 = matchValue_1[1][0];\r\n                        }\r\n                        else {\r\n                            pattern_matching_result = 2;\r\n                        }\r\n                        switch (pattern_matching_result) {\r\n                            case 0: {\r\n                                seed_1_mut = [v_2, endpos_2];\r\n                                settled_2_mut = add(key, new ParseResult(0, v_2, endpos_2), settled_2);\r\n                                continue grow;\r\n                            }\r\n                            case 1: {\r\n                                seed_1_mut = [v_3, endpos_3];\r\n                                settled_2_mut = add(key, new ParseResult(0, v_3, endpos_3), settled_2);\r\n                                continue grow;\r\n                            }\r\n                            case 2: {\r\n                                if (matchValue_1[0] == null) {\r\n                                    if (matchValue_1[1] == null) {\r\n                                        return void 0;\r\n                                    }\r\n                                    else {\r\n                                        throw (new Error(\"Match failure: Microsoft.FSharp.Core.FSharpOption`1\"));\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    return [matchValue_1[0][0], matchValue_1[0][1]];\r\n                                }\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                };\r\n                const matchValue_2 = grow(seed, settled_1);\r\n                if (matchValue_2 == null) {\r\n                    ctx.settled.contents = add(key, new ParseResult(1), settled_1);\r\n                    return void 0;\r\n                }\r\n                else {\r\n                    const v_5 = matchValue_2[0];\r\n                    const endpos_5 = matchValue_2[1] | 0;\r\n                    ctx.settled.contents = add(key, new ParseResult(0, v_5, endpos_5), settled_1);\r\n                    return [v_5, [ctx, endpos_5]];\r\n                }\r\n            };\r\n            if (evalResult != null) {\r\n                const v_6 = evalResult[0];\r\n                const output = evalResult[1];\r\n                const outpos = evalResult[1][1] | 0;\r\n                const ctx_1 = evalResult[1][0];\r\n                if (hadLeftRecursion) {\r\n                    return grow_1([v_6, outpos], add(key, new ParseResult(0, v_6, outpos), settled));\r\n                }\r\n                else {\r\n                    ctx_1.settled.contents = add(key, new ParseResult(0, v_6, outpos), ctx_1.settled.contents);\r\n                    return [v_6, output];\r\n                }\r\n            }\r\n            else if (hadLeftRecursion) {\r\n                return grow_1(void 0, add(key, new ParseResult(1), settled));\r\n            }\r\n            else {\r\n                ctx.settled.contents = add(key, new ParseResult(1), ctx.settled.contents);\r\n                return void 0;\r\n            }\r\n        }\r\n        else if (matchValue.tag === 1) {\r\n            return void 0;\r\n        }\r\n        else {\r\n            const endpos = matchValue.fields[1] | 0;\r\n            const v = matchValue.fields[0];\r\n            return [v, [ctx, endpos]];\r\n        }\r\n    };\r\n}\r\n\r\nexport function packrec(parseRule) {\r\n    let f = (_arg1) => (void 0);\r\n    f = pack(partialApply(1, parseRule, [(x) => f(x)]));\r\n    return f;\r\n}\r\n\r\nexport function $007CEnd$007C_$007C(_arg1_0, _arg1_1) {\r\n    const _arg1 = [_arg1_0, _arg1_1];\r\n    if (_arg1[1] === _arg1[0].input.length) {\r\n        return some(void 0);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CStr$007C_$007C(str, _arg1_0, _arg1_1) {\r\n    const _arg1 = [_arg1_0, _arg1_1];\r\n    const ix = _arg1[1] | 0;\r\n    const ctx = _arg1[0];\r\n    if (((ix + str.length) <= ctx.input.length) && (compare(substring(ctx.input, ix, str.length), str, 3) === 0)) {\r\n        return [ctx, ix + str.length];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CPrecludeStr$007C_$007C(str, _arg1_0, _arg1_1) {\r\n    const _arg1 = [_arg1_0, _arg1_1];\r\n    const ix = _arg1[1] | 0;\r\n    const ctx = _arg1[0];\r\n    if (((ix + str.length) <= ctx.input.length) && (compare(substring(ctx.input, ix, str.length), str, 3) === 0)) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return [ctx, ix];\r\n    }\r\n}\r\n\r\nexport function $007CLookaheadStr$007C_$007C(str, _arg1_0, _arg1_1) {\r\n    const _arg1 = [_arg1_0, _arg1_1];\r\n    const ix = _arg1[1] | 0;\r\n    const ctx = _arg1[0];\r\n    if (((ix + str.length) <= ctx.input.length) && (compare(substring(ctx.input, ix, str.length), str, 3) === 0)) {\r\n        return [ctx, ix];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007COptional$007C(str, _arg1_0, _arg1_1) {\r\n    const _arg1 = [_arg1_0, _arg1_1];\r\n    const ix = _arg1[1] | 0;\r\n    const ctx = _arg1[0];\r\n    if (((ix + str.length) <= ctx.input.length) && (compare(substring(ctx.input, ix, str.length), str, 3) === 0)) {\r\n        return [ctx, ix + str.length];\r\n    }\r\n    else {\r\n        return [ctx, ix];\r\n    }\r\n}\r\n\r\nexport const alpha = FSharpSet_op_Addition(ofSeq(toList(rangeChar(\"A\", \"Z\")), {\r\n    Compare: (x, y) => comparePrimitives(x, y),\r\n}), ofSeq(toList(rangeChar(\"a\", \"z\")), {\r\n    Compare: (x_1, y_1) => comparePrimitives(x_1, y_1),\r\n}));\r\n\r\nexport const numeric = ofSeq(toList(rangeChar(\"0\", \"9\")), {\r\n    Compare: (x, y) => comparePrimitives(x, y),\r\n});\r\n\r\nexport const whitespace = ofSeq([\" \", \"\\t\", \"\\n\", \"\\r\"], {\r\n    Compare: (x, y) => comparePrimitives(x, y),\r\n});\r\n\r\nexport const alphanumeric = FSharpSet_op_Addition(alpha, numeric);\r\n\r\nexport const alphawhitespace = FSharpSet_op_Addition(alpha, whitespace);\r\n\r\nexport function $007CChar$007C_$007C(_arg1_0, _arg1_1) {\r\n    const _arg1 = [_arg1_0, _arg1_1];\r\n    const ix = _arg1[1] | 0;\r\n    const ctx = _arg1[0];\r\n    if (ix < ctx.input.length) {\r\n        return [ctx.input[ix], [ctx, ix + 1]];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CChars$007C_$007C(alphabet, _arg1_0, _arg1_1) {\r\n    const _arg1 = [_arg1_0, _arg1_1];\r\n    const ix = _arg1[1] | 0;\r\n    const ctx = _arg1[0];\r\n    const seek = (i_mut) => {\r\n        seek:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if ((i < ctx.input.length) && contains(ctx.input[i], alphabet)) {\r\n                i_mut = (i + 1);\r\n                continue seek;\r\n            }\r\n            else {\r\n                return i | 0;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const matchValue = seek(ix) | 0;\r\n    if (matchValue > ix) {\r\n        const endpos_1 = matchValue | 0;\r\n        return [substring(ctx.input, ix, endpos_1 - ix), [ctx, endpos_1]];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function readBetween(start_0, start_1, finish_0, finish_1) {\r\n    const start = [start_0, start_1];\r\n    const ix = start[1] | 0;\r\n    return substring(start[0].input, ix, finish_1 - ix);\r\n}\r\n\r\nexport function $007CCharsExcept$007C_$007C(exclusions, _arg1_0, _arg1_1) {\r\n    const _arg1 = [_arg1_0, _arg1_1];\r\n    const ix = _arg1[1] | 0;\r\n    const ctx = _arg1[0];\r\n    const seek = (i_mut) => {\r\n        seek:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if ((i < ctx.input.length) && (!contains(ctx.input[i], exclusions))) {\r\n                i_mut = (i + 1);\r\n                continue seek;\r\n            }\r\n            else {\r\n                return i | 0;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const matchValue = seek(ix) | 0;\r\n    if (matchValue > ix) {\r\n        const endpos_1 = matchValue | 0;\r\n        return [substring(ctx.input, ix, endpos_1 - ix), [ctx, endpos_1]];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CLongestSubstringWhere$007C_$007C(pred, maxLength, _arg1_0, _arg1_1) {\r\n    const _arg1 = [_arg1_0, _arg1_1];\r\n    const ix = _arg1[1] | 0;\r\n    const ctx = _arg1[0];\r\n    const start = ix | 0;\r\n    const seek = (i_mut, biggestMatch_mut) => {\r\n        seek:\r\n        while (true) {\r\n            const i = i_mut, biggestMatch = biggestMatch_mut;\r\n            if ((i <= ctx.input.length) && ((i - start) <= maxLength)) {\r\n                if (pred(substring(ctx.input, start, i - start))) {\r\n                    i_mut = (i + 1);\r\n                    biggestMatch_mut = i;\r\n                    continue seek;\r\n                }\r\n                else if (biggestMatch != null) {\r\n                    return biggestMatch;\r\n                }\r\n                else {\r\n                    i_mut = (i + 1);\r\n                    biggestMatch_mut = biggestMatch;\r\n                    continue seek;\r\n                }\r\n            }\r\n            else {\r\n                return biggestMatch;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const matchValue = seek(ix, void 0);\r\n    if (matchValue != null) {\r\n        const endpos = matchValue | 0;\r\n        return [substring(ctx.input, ix, endpos - ix), [ctx, endpos]];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CAnyCase$007C(input) {\r\n    return input.toLowerCase();\r\n}\r\n\r\nexport function $007CAny$007C(_arg1_0, _arg1_1) {\r\n    const _arg1 = [_arg1_0, _arg1_1];\r\n    const ctx = _arg1[0];\r\n    return [substring(ctx.input, _arg1[1]), [ctx, ctx.input.length]];\r\n}\r\n\r\nexport function $007COWS$007C(_arg1_0, _arg1_1) {\r\n    const _arg1 = [_arg1_0, _arg1_1];\r\n    const ctx = _arg1[0];\r\n    const seek = (i_mut) => {\r\n        seek:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if ((i < ctx.input.length) && contains(ctx.input[i], whitespace)) {\r\n                i_mut = (i + 1);\r\n                continue seek;\r\n            }\r\n            else {\r\n                return i | 0;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return [ctx, seek(_arg1[1])];\r\n}\r\n\r\nexport function $007CWS$007C_$007C(_arg1_0, _arg1_1) {\r\n    const _arg1 = [_arg1_0, _arg1_1];\r\n    const ix = _arg1[1] | 0;\r\n    const ctx = _arg1[0];\r\n    const seek = (i_mut) => {\r\n        seek:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if ((i < ctx.input.length) && contains(ctx.input[i], whitespace)) {\r\n                i_mut = (i + 1);\r\n                continue seek;\r\n            }\r\n            else {\r\n                return i | 0;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const matchValue = seek(ix) | 0;\r\n    if (matchValue > ix) {\r\n        return [ctx, matchValue];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007COWSStr$007C_$007C(str, _arg1_0, _arg1_1) {\r\n    const _arg1 = [_arg1_0, _arg1_1];\r\n    const activePatternResult12265 = $007COWS$007C(_arg1[0], _arg1[1]);\r\n    const activePatternResult12267 = $007CStr$007C_$007C(str, activePatternResult12265[0], activePatternResult12265[1]);\r\n    if (activePatternResult12267 != null) {\r\n        const ctx = activePatternResult12267;\r\n        return ctx;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport const $007CIntNoWhitespace$007C_$007C = pack((_arg1) => {\r\n    const activePatternResult12271 = $007CChars$007C_$007C(numeric, _arg1[0], _arg1[1]);\r\n    if (activePatternResult12271 != null) {\r\n        const rest = activePatternResult12271[1];\r\n        const v = activePatternResult12271[0];\r\n        let matchValue;\r\n        let outArg = 0;\r\n        matchValue = [tryParse(v, 511, false, 32, new FSharpRef(() => outArg, (v_1) => {\r\n            outArg = (v_1 | 0);\r\n        })), outArg];\r\n        return matchValue[0] ? [matchValue[1], rest] : (void 0);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n});\r\n\r\nexport const $007CInt$007C_$007C = pack((_arg1) => {\r\n    const activePatternResult12274 = $007COWS$007C(_arg1[0], _arg1[1]);\r\n    const activePatternResult12276 = $007CChars$007C_$007C(numeric, activePatternResult12274[0], activePatternResult12274[1]);\r\n    if (activePatternResult12276 != null) {\r\n        let activePatternResult12277;\r\n        const tupledArg = activePatternResult12276[1];\r\n        activePatternResult12277 = $007COWS$007C(tupledArg[0], tupledArg[1]);\r\n        const v = activePatternResult12276[0];\r\n        let matchValue;\r\n        let outArg = 0;\r\n        matchValue = [tryParse(v, 511, false, 32, new FSharpRef(() => outArg, (v_1) => {\r\n            outArg = (v_1 | 0);\r\n        })), outArg];\r\n        return matchValue[0] ? [matchValue[1], activePatternResult12277] : (void 0);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n});\r\n\r\nexport const $007CWord$007C_$007C = pack((_arg1) => {\r\n    let activePatternResult12280, activePatternResult12282, activePatternResult12283, tupledArg, v;\r\n    return (activePatternResult12280 = $007COWS$007C(_arg1[0], _arg1[1]), (activePatternResult12282 = $007CChars$007C_$007C(alphanumeric, activePatternResult12280[0], activePatternResult12280[1]), (activePatternResult12282 != null) ? ((activePatternResult12283 = ((tupledArg = activePatternResult12282[1], $007COWS$007C(tupledArg[0], tupledArg[1]))), (v = activePatternResult12282[0], [v, activePatternResult12283]))) : (void 0)));\r\n});\r\n\r\nexport function $007CKeyword$007C_$007C(keyword, _arg1_0, _arg1_1) {\r\n    const _arg1 = [_arg1_0, _arg1_1];\r\n    const activePatternResult12286 = $007COWS$007C(_arg1[0], _arg1[1]);\r\n    const activePatternResult12288 = $007CStr$007C_$007C(keyword, activePatternResult12286[0], activePatternResult12286[1]);\r\n    if (activePatternResult12288 != null) {\r\n        let activePatternResult12289;\r\n        const tupledArg = activePatternResult12288;\r\n        activePatternResult12289 = $007COWS$007C(tupledArg[0], tupledArg[1]);\r\n        return activePatternResult12289;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport const $007CWords$007C_$007C = packrec(($007CWords$007C_$007C_1, _arg1) => {\r\n    let activePatternResult12293, activePatternResult12294, endix, rest, activePatternResult12292, rest_1, w;\r\n    return (activePatternResult12293 = $007CWords$007C_$007C_1(_arg1), (activePatternResult12293 != null) ? ((activePatternResult12294 = $007CWord$007C_$007C(activePatternResult12293[1]), (activePatternResult12294 != null) ? ((endix = (activePatternResult12294[1][1] | 0), (rest = activePatternResult12294[1], [substring(_arg1[0].input, _arg1[1], endix - _arg1[1]).trim(), rest]))) : ((activePatternResult12292 = $007CWord$007C_$007C(_arg1), (activePatternResult12292 != null) ? ((rest_1 = activePatternResult12292[1], (w = activePatternResult12292[0], [w, rest_1]))) : (void 0))))) : ((activePatternResult12292 = $007CWord$007C_$007C(_arg1), (activePatternResult12292 != null) ? ((rest_1 = activePatternResult12292[1], (w = activePatternResult12292[0], [w, rest_1]))) : (void 0))));\r\n});\r\n\r\nexport function parser(recognizerRoot, txt) {\r\n    let tupledArg;\r\n    const matchValue = ParseArgs_Init_Z1A8FAE6B(txt);\r\n    let pattern_matching_result, v;\r\n    const activePatternResult12299 = recognizerRoot(matchValue);\r\n    if (activePatternResult12299 != null) {\r\n        if (((tupledArg = activePatternResult12299[1], $007CEnd$007C_$007C(tupledArg[0], tupledArg[1]))) != null) {\r\n            pattern_matching_result = 0;\r\n            v = activePatternResult12299[0];\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return v;\r\n        }\r\n        case 1: {\r\n            const arg20 = join(\"\\n\", ParseInputModule_$007CFailureAnalysis$007C(matchValue)[1]);\r\n            return toFail(printf(\"Could not parse \\u0027%s\\u0027\\nSuccessful matches: %s\"))(txt)(arg20);\r\n        }\r\n    }\r\n}\r\n\r\nexport function parserWithExternalContext(recognizerRoot, ctx, txt) {\r\n    let tupledArg;\r\n    const matchValue = ParseArgs_Init_Z1A8FAE6B(txt, some(ctx));\r\n    let pattern_matching_result, v;\r\n    const activePatternResult12306 = recognizerRoot(matchValue);\r\n    if (activePatternResult12306 != null) {\r\n        if (((tupledArg = activePatternResult12306[1], $007CEnd$007C_$007C(tupledArg[0], tupledArg[1]))) != null) {\r\n            pattern_matching_result = 0;\r\n            v = activePatternResult12306[0];\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return v;\r\n        }\r\n        case 1: {\r\n            const arg20 = join(\"\\n\", ParseInputModule_$007CFailureAnalysis$007C(matchValue)[1]);\r\n            return toFail(printf(\"Could not parse \\u0027%s\\u0027\\nSuccessful matches: %s\"))(txt)(arg20);\r\n        }\r\n    }\r\n}\r\n\r\n","import { Record } from \"../fable-library.3.6.2/Types.js\";\r\nimport { obj_type, record_type, bool_type, lambda_type, class_type, unit_type } from \"../fable-library.3.6.2/Reflection.js\";\r\nimport { Component } from \"react\";\r\nimport * as react from \"react\";\r\nimport { equalArrays, equals } from \"../fable-library.3.6.2/Util.js\";\r\n\r\nexport class LazyProps$1 extends Record {\r\n    constructor(model, render, equal) {\r\n        super();\r\n        this.model = model;\r\n        this.render = render;\r\n        this.equal = equal;\r\n    }\r\n}\r\n\r\nexport function LazyProps$1$reflection(gen0) {\r\n    return record_type(\"Elmish.React.LazyProps`1\", [gen0], LazyProps$1, () => [[\"model\", gen0], [\"render\", lambda_type(unit_type, class_type(\"Fable.React.ReactElement\"))], [\"equal\", lambda_type(gen0, lambda_type(gen0, bool_type))]]);\r\n}\r\n\r\nexport class Components_LazyView$1 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    shouldComponentUpdate(nextProps, _nextState) {\r\n        const this$ = this;\r\n        return !(this$.props).equal((this$.props).model, nextProps.model);\r\n    }\r\n    render() {\r\n        const this$ = this;\r\n        return (this$.props).render();\r\n    }\r\n}\r\n\r\nexport function Components_LazyView$1$reflection(gen0) {\r\n    return class_type(\"Elmish.React.Components.LazyView`1\", [gen0], Components_LazyView$1, class_type(\"Fable.React.Component`2\", [LazyProps$1$reflection(gen0), obj_type]));\r\n}\r\n\r\nexport function Components_LazyView$1_$ctor_Z7829D94B(props) {\r\n    return new Components_LazyView$1(props);\r\n}\r\n\r\nexport function Common_lazyViewWith(equal, view, state) {\r\n    return react.createElement(Components_LazyView$1, new LazyProps$1(state, () => view(state), equal));\r\n}\r\n\r\nexport function Common_lazyView2With(equal, view, state, dispatch) {\r\n    return react.createElement(Components_LazyView$1, new LazyProps$1(state, () => view(state, dispatch), equal));\r\n}\r\n\r\nexport function Common_lazyView3With(equal, view, state1, state2, dispatch) {\r\n    return react.createElement(Components_LazyView$1, new LazyProps$1([state1, state2], () => view(state1, state2, dispatch), equal));\r\n}\r\n\r\nexport function Common_lazyView(view) {\r\n    return (state) => Common_lazyViewWith((x, y) => equals(x, y), view, state);\r\n}\r\n\r\nexport function Common_lazyView2(view) {\r\n    return (state) => ((dispatch) => Common_lazyView2With((x, y) => equals(x, y), view, state, dispatch));\r\n}\r\n\r\nexport function Common_lazyView3(view) {\r\n    return (state1) => ((state2) => ((dispatch) => Common_lazyView3With((x, y) => equalArrays(x, y), view, state1, state2, dispatch)));\r\n}\r\n\r\n","import { ProgramModule_view, ProgramModule_withSetState } from \"../Fable.Elmish.3.1.0/program.fs.js\";\r\nimport * as react_dom from \"react-dom\";\r\nimport { uncurry } from \"../fable-library.3.6.2/Util.js\";\r\nimport { Common_lazyView2With } from \"./common.fs.js\";\r\n\r\nexport function Program_Internal_withReactBatchedUsing(lazyView2With, placeholderId, program) {\r\n    let lastRequest = void 0;\r\n    return ProgramModule_withSetState((model, dispatch) => {\r\n        if (lastRequest != null) {\r\n            window.cancelAnimationFrame(lastRequest);\r\n        }\r\n        lastRequest = window.requestAnimationFrame((_arg1) => {\r\n            react_dom.render(lazyView2With((x, y) => (x === y), uncurry(2, ProgramModule_view(program)), model, dispatch), document.getElementById(placeholderId));\r\n        });\r\n    }, program);\r\n}\r\n\r\nexport function Program_Internal_withReactSynchronousUsing(lazyView2With, placeholderId, program) {\r\n    return ProgramModule_withSetState((model, dispatch) => {\r\n        react_dom.render(lazyView2With((x, y) => (x === y), uncurry(2, ProgramModule_view(program)), model, dispatch), document.getElementById(placeholderId));\r\n    }, program);\r\n}\r\n\r\nexport function Program_Internal_withReactHydrateUsing(lazyView2With, placeholderId, program) {\r\n    return ProgramModule_withSetState((model, dispatch) => {\r\n        react_dom.hydrate(lazyView2With((x, y) => (x === y), uncurry(2, ProgramModule_view(program)), model, dispatch), document.getElementById(placeholderId));\r\n    }, program);\r\n}\r\n\r\nexport function Program_withReactBatched(placeholderId, program) {\r\n    return Program_Internal_withReactBatchedUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\r\n}\r\n\r\nexport function Program_withReactSynchronous(placeholderId, program) {\r\n    return Program_Internal_withReactSynchronousUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\r\n}\r\n\r\nexport function Program_withReact(placeholderId, program) {\r\n    return Program_Internal_withReactBatchedUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\r\n}\r\n\r\nexport function Program_withReactUnoptimized(placeholderId, program) {\r\n    return Program_Internal_withReactSynchronousUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\r\n}\r\n\r\nexport function Program_withReactHydrate(placeholderId, program) {\r\n    return Program_Internal_withReactHydrateUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\r\n}\r\n\r\n","import { toString, Record, Union } from \"../fable_modules/fable-library.3.6.2/Types.js\";\r\nimport { View_Msg, View_ChargenMethod, View_view, View_init, View_update, View_Msg$reflection, View_Model$reflection } from \"./Chargen.fs.js\";\r\nimport { lambda_type, record_type, option_type, string_type, list_type, union_type } from \"../fable_modules/fable-library.3.6.2/Reflection.js\";\r\nimport { CharacterSheet$reflection } from \"../../Lib/Character.fs.js\";\r\nimport { ofArray, singleton as singleton_1, tail, head, isEmpty, tryHead, cons, empty } from \"../fable_modules/fable-library.3.6.2/List.js\";\r\nimport { Cmd_map, Cmd_ofSub, Cmd_OfFunc_result, Cmd_batch } from \"../fable_modules/Fable.Elmish.3.1.0/cmd.fs.js\";\r\nimport { singleton, append, delay, toList } from \"../fable_modules/fable-library.3.6.2/Seq.js\";\r\nimport { createElement } from \"react\";\r\nimport { Interop_reactApi } from \"../fable_modules/Feliz.1.61.0/Interop.fs.js\";\r\nimport { ProgramModule_toNavigable, Navigation_newUrl } from \"../fable_modules/Fable.Elmish.Browser.3.0.4/navigation.fs.js\";\r\nimport { $007CEnd$007C_$007C, $007CStr$007C_$007C, ParseArgs_Init_Z1A8FAE6B } from \"../../Lib/Parsing.fs.js\";\r\nimport { ProgramModule_mkProgram, ProgramModule_withSubscription, ProgramModule_run } from \"../fable_modules/Fable.Elmish.3.1.0/program.fs.js\";\r\nimport { Program_withReactBatched } from \"../fable_modules/Fable.Elmish.React.3.0.1/react.fs.js\";\r\nimport { printf, toText } from \"../fable_modules/fable-library.3.6.2/String.js\";\r\nimport { some } from \"../fable_modules/fable-library.3.6.2/Option.js\";\r\nimport \"../sass/main.sass\";\r\n\r\n\r\nexport class App_Page extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Chargen\"];\r\n    }\r\n}\r\n\r\nexport function App_Page$reflection() {\r\n    return union_type(\"App.App.Page\", [], App_Page, () => [[[\"Item\", View_Model$reflection()]]]);\r\n}\r\n\r\nexport class App_Model extends Record {\r\n    constructor(stack, error, hero) {\r\n        super();\r\n        this.stack = stack;\r\n        this.error = error;\r\n        this.hero = hero;\r\n    }\r\n}\r\n\r\nexport function App_Model$reflection() {\r\n    return record_type(\"App.App.Model\", [], App_Model, () => [[\"stack\", list_type(App_Page$reflection())], [\"error\", option_type(string_type)], [\"hero\", option_type(CharacterSheet$reflection())]]);\r\n}\r\n\r\nexport class App_Msg extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Error\", \"Transform\", \"Chargen\", \"Push\", \"Pop\"];\r\n    }\r\n}\r\n\r\nexport function App_Msg$reflection() {\r\n    return union_type(\"App.App.Msg\", [], App_Msg, () => [[[\"msg\", string_type]], [[\"Item\", lambda_type(App_Model$reflection(), App_Model$reflection())]], [[\"Item\", View_Msg$reflection()]], [[\"Item\", App_Page$reflection()]], []]);\r\n}\r\n\r\nexport function App_init(initialCmd) {\r\n    return [new App_Model(empty(), void 0, void 0), Cmd_batch(initialCmd)];\r\n}\r\n\r\nexport function App_update(msg, model) {\r\n    let inputRecord;\r\n    const matchValue = [msg, model.stack];\r\n    let pattern_matching_result, msg_1, f, chargenModel, msg_2, rest, rest_1, page, stack;\r\n    if (matchValue[0].tag === 1) {\r\n        pattern_matching_result = 1;\r\n        f = matchValue[0].fields[0];\r\n    }\r\n    else if (matchValue[0].tag === 2) {\r\n        if (!isEmpty(matchValue[1])) {\r\n            pattern_matching_result = 2;\r\n            chargenModel = head(matchValue[1]).fields[0];\r\n            msg_2 = matchValue[0].fields[0];\r\n            rest = tail(matchValue[1]);\r\n        }\r\n        else {\r\n            pattern_matching_result = 6;\r\n        }\r\n    }\r\n    else if (matchValue[0].tag === 4) {\r\n        if (!isEmpty(matchValue[1])) {\r\n            if (isEmpty(tail(matchValue[1]))) {\r\n                pattern_matching_result = 3;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n                rest_1 = tail(matchValue[1]);\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 6;\r\n        }\r\n    }\r\n    else if (matchValue[0].tag === 3) {\r\n        pattern_matching_result = 5;\r\n        page = matchValue[0].fields[0];\r\n        stack = matchValue[1];\r\n    }\r\n    else {\r\n        pattern_matching_result = 0;\r\n        msg_1 = matchValue[0].fields[0];\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return [new App_Model(model.stack, msg_1, model.hero), empty()];\r\n        }\r\n        case 1: {\r\n            return [(inputRecord = f(model), new App_Model(inputRecord.stack, void 0, inputRecord.hero)), empty()];\r\n        }\r\n        case 2: {\r\n            const patternInput = View_update((_arg1) => {\r\n                if (_arg1 == null) {\r\n                    return Cmd_OfFunc_result(new App_Msg(4));\r\n                }\r\n                else {\r\n                    const character = _arg1;\r\n                    return Cmd_ofSub((dispatch) => {\r\n                        dispatch(new App_Msg(1, (s) => (new App_Model(s.stack, s.error, character))));\r\n                        dispatch(new App_Msg(4));\r\n                    });\r\n                }\r\n            }, msg_2, chargenModel);\r\n            return [new App_Model(cons(new App_Page(0, patternInput[0]), rest), model.error, model.hero), patternInput[1]];\r\n        }\r\n        case 3: {\r\n            const patternInput_1 = View_init();\r\n            return [new App_Model(empty(), model.error, model.hero), empty()];\r\n        }\r\n        case 4: {\r\n            return [new App_Model(rest_1, model.error, model.hero), empty()];\r\n        }\r\n        case 5: {\r\n            return [new App_Model(cons(page, stack), model.error, model.hero), empty()];\r\n        }\r\n        case 6: {\r\n            return [model, Cmd_OfFunc_result(new App_Msg(0, `Message '${msg}' not compatible with current page (${tryHead(model.stack)}))`))];\r\n        }\r\n    }\r\n}\r\n\r\nexport function App_view(model, dispatch) {\r\n    const children_2 = toList(delay(() => {\r\n        let matchValue;\r\n        return append(singleton(createElement(\"div\", {\r\n            children: Interop_reactApi.Children.toArray([(matchValue = model.error, (matchValue == null) ? \"Welcome to Shining Sword\" : matchValue)]),\r\n            style: {\r\n                marginBottom: 10,\r\n            },\r\n        })), delay(() => {\r\n            let children;\r\n            const matchValue_1 = model.stack;\r\n            return (!isEmpty(matchValue_1)) ? singleton(View_view({\r\n                dispatch: (arg) => {\r\n                    dispatch(new App_Msg(2, arg));\r\n                },\r\n                model: head(matchValue_1).fields[0],\r\n            })) : singleton((children = singleton_1(createElement(\"button\", {\r\n                children: \"Create a character\",\r\n                href: \"#chargen\",\r\n                onClick: (_arg1_1) => {\r\n                    head(Navigation_newUrl(\"#chargen\"))(dispatch);\r\n                },\r\n            })), createElement(\"div\", {\r\n                children: Interop_reactApi.Children.toArray(Array.from(children)),\r\n            })));\r\n        }));\r\n    }));\r\n    return createElement(\"div\", {\r\n        children: Interop_reactApi.Children.toArray(Array.from(children_2)),\r\n    });\r\n}\r\n\r\nexport function Url_Parse_locationParser(rootActivePattern, loc) {\r\n    let tupledArg;\r\n    const matchValue = ParseArgs_Init_Z1A8FAE6B(loc.hash);\r\n    let pattern_matching_result, v;\r\n    const activePatternResult13937 = $007CStr$007C_$007C(\"#\", matchValue[0], matchValue[1]);\r\n    if (activePatternResult13937 != null) {\r\n        const activePatternResult13938 = rootActivePattern(activePatternResult13937);\r\n        if (activePatternResult13938 != null) {\r\n            if (((tupledArg = activePatternResult13938[1], $007CEnd$007C_$007C(tupledArg[0], tupledArg[1]))) != null) {\r\n                pattern_matching_result = 0;\r\n                v = activePatternResult13938[0];\r\n            }\r\n            else {\r\n                pattern_matching_result = 1;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return v;\r\n        }\r\n        case 1: {\r\n            return empty();\r\n        }\r\n    }\r\n}\r\n\r\nexport function Url_Parse_$007CPage$007C_$007C(_arg1_0, _arg1_1) {\r\n    const _arg1 = [_arg1_0, _arg1_1];\r\n    const activePatternResult13949 = $007CStr$007C_$007C(\"chargen/DarkSun\", _arg1[0], _arg1[1]);\r\n    if (activePatternResult13949 != null) {\r\n        const ctx = activePatternResult13949;\r\n        const patternInput = View_init();\r\n        return [ofArray([Cmd_OfFunc_result(new App_Msg(3, new App_Page(0, patternInput[0]))), Cmd_OfFunc_result(new App_Msg(2, new View_Msg(3, new View_ChargenMethod(3)))), Cmd_map((arg0_1) => (new App_Msg(2, arg0_1)), patternInput[1])]), ctx];\r\n    }\r\n    else {\r\n        const activePatternResult13947 = $007CStr$007C_$007C(\"chargen\", _arg1[0], _arg1[1]);\r\n        if (activePatternResult13947 != null) {\r\n            const ctx_1 = activePatternResult13947;\r\n            const patternInput_1 = View_init();\r\n            return [ofArray([Cmd_OfFunc_result(new App_Msg(3, new App_Page(0, patternInput_1[0]))), Cmd_map((arg0_2) => (new App_Msg(2, arg0_2)), patternInput_1[1])]), ctx_1];\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport const Url_Parse_page = (loc) => Url_Parse_locationParser((tupledArg) => Url_Parse_$007CPage$007C_$007C(tupledArg[0], tupledArg[1]), loc);\r\n\r\nexport function Url_parse(loc) {\r\n    return Url_Parse_page(loc);\r\n}\r\n\r\nexport function Url_unpack(cmds, model) {\r\n    return [model, Cmd_batch(cmds)];\r\n}\r\n\r\nProgramModule_run(Program_withReactBatched(\"feliz-app\", ProgramModule_toNavigable((loc) => Url_parse(loc), (cmds, model_2) => Url_unpack(cmds, model_2), ProgramModule_withSubscription((m) => Cmd_ofSub((dispatch_1) => {\r\n    window.onerror = ((msg_1) => {\r\n        if ((toString(msg_1).indexOf(\"SocketProtocolError\") >= 0) === false) {\r\n            dispatch_1(new App_Msg(0, toText(printf(\"Error: %A\"))(msg_1)));\r\n            window.alert(some(\"Unhandled Exception: \" + toString(msg_1)));\r\n        }\r\n    });\r\n}), ProgramModule_mkProgram((initialCmd) => App_init(initialCmd), (msg, model) => App_update(msg, model), (model_1, dispatch) => App_view(model_1, dispatch))))));\r\n\r\n"],"sourceRoot":""}